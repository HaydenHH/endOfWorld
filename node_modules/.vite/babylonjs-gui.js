import {
  __commonJS,
  require_babylon
} from "./chunk-C2S6M2XJ.js";

// node_modules/babylonjs-gui/babylon.gui.min.js
var require_babylon_gui_min = __commonJS({
  "node_modules/babylonjs-gui/babylon.gui.min.js"(exports, module) {
    !function(t, e) {
      typeof exports == "object" && typeof module == "object" ? module.exports = e(require_babylon()) : typeof define == "function" && define.amd ? define("babylonjs-gui", ["babylonjs"], e) : typeof exports == "object" ? exports["babylonjs-gui"] = e(require_babylon()) : (t.BABYLON = t.BABYLON || {}, t.BABYLON.GUI = e(t.BABYLON));
    }(typeof self != "undefined" ? self : typeof global != "undefined" ? global : exports, function(t) {
      return function(t2) {
        var e = {};
        function i(r) {
          if (e[r])
            return e[r].exports;
          var n = e[r] = { i: r, l: false, exports: {} };
          return t2[r].call(n.exports, n, n.exports, i), n.l = true, n.exports;
        }
        return i.m = t2, i.c = e, i.d = function(t3, e2, r) {
          i.o(t3, e2) || Object.defineProperty(t3, e2, { enumerable: true, get: r });
        }, i.r = function(t3) {
          typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(t3, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t3, "__esModule", { value: true });
        }, i.t = function(t3, e2) {
          if (1 & e2 && (t3 = i(t3)), 8 & e2)
            return t3;
          if (4 & e2 && typeof t3 == "object" && t3 && t3.__esModule)
            return t3;
          var r = Object.create(null);
          if (i.r(r), Object.defineProperty(r, "default", { enumerable: true, value: t3 }), 2 & e2 && typeof t3 != "string")
            for (var n in t3)
              i.d(r, n, function(e3) {
                return t3[e3];
              }.bind(null, n));
          return r;
        }, i.n = function(t3) {
          var e2 = t3 && t3.__esModule ? function() {
            return t3.default;
          } : function() {
            return t3;
          };
          return i.d(e2, "a", e2), e2;
        }, i.o = function(t3, e2) {
          return Object.prototype.hasOwnProperty.call(t3, e2);
        }, i.p = "", i(i.s = 2);
      }([function(e, i) {
        e.exports = t;
      }, function(t2, e, i) {
        "use strict";
        i.r(e), i.d(e, "Button", function() {
          return O;
        }), i.d(e, "Checkbox", function() {
          return T;
        }), i.d(e, "ColorPicker", function() {
          return M;
        }), i.d(e, "Container", function() {
          return g;
        }), i.d(e, "Control", function() {
          return f;
        }), i.d(e, "Ellipse", function() {
          return I;
        }), i.d(e, "Grid", function() {
          return P;
        }), i.d(e, "Image", function() {
          return v;
        }), i.d(e, "InputText", function() {
          return x;
        }), i.d(e, "InputPassword", function() {
          return k;
        }), i.d(e, "Line", function() {
          return A;
        }), i.d(e, "MultiLine", function() {
          return E;
        }), i.d(e, "RadioButton", function() {
          return D;
        }), i.d(e, "StackPanel", function() {
          return C;
        }), i.d(e, "SelectorGroup", function() {
          return B;
        }), i.d(e, "CheckboxGroup", function() {
          return N;
        }), i.d(e, "RadioGroup", function() {
          return H;
        }), i.d(e, "SliderGroup", function() {
          return V;
        }), i.d(e, "SelectionPanel", function() {
          return W;
        }), i.d(e, "ScrollViewer", function() {
          return G;
        }), i.d(e, "TextWrapping", function() {
          return m;
        }), i.d(e, "TextBlock", function() {
          return y;
        }), i.d(e, "TextWrapper", function() {
          return w;
        }), i.d(e, "KeyPropertySet", function() {
          return X;
        }), i.d(e, "VirtualKeyboard", function() {
          return U;
        }), i.d(e, "Rectangle", function() {
          return b;
        }), i.d(e, "DisplayGrid", function() {
          return Y;
        }), i.d(e, "BaseSlider", function() {
          return L;
        }), i.d(e, "Slider", function() {
          return R;
        }), i.d(e, "ImageBasedSlider", function() {
          return q;
        }), i.d(e, "ScrollBar", function() {
          return j;
        }), i.d(e, "ImageScrollBar", function() {
          return z;
        }), i.d(e, "name", function() {
          return K;
        }), i.d(e, "AdvancedDynamicTexture", function() {
          return J;
        }), i.d(e, "AdvancedDynamicTextureInstrumentation", function() {
          return Q;
        }), i.d(e, "Vector2WithInfo", function() {
          return d;
        }), i.d(e, "Matrix2D", function() {
          return p;
        }), i.d(e, "Measure", function() {
          return _;
        }), i.d(e, "MultiLinePoint", function() {
          return S;
        }), i.d(e, "Style", function() {
          return Z;
        }), i.d(e, "ValueAndUnit", function() {
          return a;
        }), i.d(e, "XmlLoader", function() {
          return $;
        }), i.d(e, "AbstractButton3D", function() {
          return it;
        }), i.d(e, "Button3D", function() {
          return rt;
        }), i.d(e, "Container3D", function() {
          return nt;
        }), i.d(e, "Control3D", function() {
          return et;
        }), i.d(e, "CylinderPanel", function() {
          return st;
        }), i.d(e, "HolographicButton", function() {
          return ct;
        }), i.d(e, "MeshButton3D", function() {
          return _t;
        }), i.d(e, "PlanePanel", function() {
          return dt;
        }), i.d(e, "ScatterPanel", function() {
          return pt;
        }), i.d(e, "SpherePanel", function() {
          return ft;
        }), i.d(e, "StackPanel3D", function() {
          return gt;
        }), i.d(e, "VolumeBasedPanel", function() {
          return ot;
        }), i.d(e, "FluentMaterialDefines", function() {
          return lt;
        }), i.d(e, "FluentMaterial", function() {
          return ut;
        }), i.d(e, "GUI3DManager", function() {
          return mt;
        }), i.d(e, "Vector3WithInfo", function() {
          return tt;
        });
        var r = function(t3, e2) {
          return (r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t4, e3) {
            t4.__proto__ = e3;
          } || function(t4, e3) {
            for (var i2 in e3)
              Object.prototype.hasOwnProperty.call(e3, i2) && (t4[i2] = e3[i2]);
          })(t3, e2);
        };
        function n(t3, e2) {
          if (typeof e2 != "function" && e2 !== null)
            throw new TypeError("Class extends value " + String(e2) + " is not a constructor or null");
          function i2() {
            this.constructor = t3;
          }
          r(t3, e2), t3.prototype = e2 === null ? Object.create(e2) : (i2.prototype = e2.prototype, new i2());
        }
        function o(t3, e2, i2, r2) {
          var n2, o2 = arguments.length, s2 = o2 < 3 ? e2 : r2 === null ? r2 = Object.getOwnPropertyDescriptor(e2, i2) : r2;
          if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
            s2 = Reflect.decorate(t3, e2, i2, r2);
          else
            for (var a2 = t3.length - 1; a2 >= 0; a2--)
              (n2 = t3[a2]) && (s2 = (o2 < 3 ? n2(s2) : o2 > 3 ? n2(e2, i2, s2) : n2(e2, i2)) || s2);
          return o2 > 3 && s2 && Object.defineProperty(e2, i2, s2), s2;
        }
        Object.create;
        Object.create;
        var s = i(0), a = function() {
          function t3(e2, i2, r2) {
            i2 === void 0 && (i2 = t3.UNITMODE_PIXEL), r2 === void 0 && (r2 = true), this.unit = i2, this.negativeValueAllowed = r2, this._value = 1, this.ignoreAdaptiveScaling = false, this._value = e2, this._originalUnit = i2;
          }
          return Object.defineProperty(t3.prototype, "isPercentage", { get: function() {
            return this.unit === t3.UNITMODE_PERCENTAGE;
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "isPixel", { get: function() {
            return this.unit === t3.UNITMODE_PIXEL;
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "internalValue", { get: function() {
            return this._value;
          }, enumerable: false, configurable: true }), t3.prototype.getValueInPixel = function(t4, e2) {
            return this.isPixel ? this.getValue(t4) : this.getValue(t4) * e2;
          }, t3.prototype.updateInPlace = function(e2, i2) {
            return i2 === void 0 && (i2 = t3.UNITMODE_PIXEL), this._value = e2, this.unit = i2, this;
          }, t3.prototype.getValue = function(e2) {
            if (e2 && !this.ignoreAdaptiveScaling && this.unit !== t3.UNITMODE_PERCENTAGE) {
              var i2 = 0, r2 = 0;
              if (e2.idealWidth && (i2 = this._value * e2.getSize().width / e2.idealWidth), e2.idealHeight && (r2 = this._value * e2.getSize().height / e2.idealHeight), e2.useSmallestIdeal && e2.idealWidth && e2.idealHeight)
                return window.innerWidth < window.innerHeight ? i2 : r2;
              if (e2.idealWidth)
                return i2;
              if (e2.idealHeight)
                return r2;
            }
            return this._value;
          }, t3.prototype.toString = function(e2, i2) {
            switch (this.unit) {
              case t3.UNITMODE_PERCENTAGE:
                var r2 = 100 * this.getValue(e2);
                return (i2 ? r2.toFixed(i2) : r2) + "%";
              case t3.UNITMODE_PIXEL:
                var n2 = this.getValue(e2);
                return (i2 ? n2.toFixed(i2) : n2) + "px";
            }
            return this.unit.toString();
          }, t3.prototype.fromString = function(e2) {
            var i2 = t3._Regex.exec(e2.toString());
            if (!i2 || i2.length === 0)
              return false;
            var r2 = parseFloat(i2[1]), n2 = this._originalUnit;
            if (this.negativeValueAllowed || r2 < 0 && (r2 = 0), i2.length === 4)
              switch (i2[3]) {
                case "px":
                  n2 = t3.UNITMODE_PIXEL;
                  break;
                case "%":
                  n2 = t3.UNITMODE_PERCENTAGE, r2 /= 100;
              }
            return (r2 !== this._value || n2 !== this.unit) && (this._value = r2, this.unit = n2, true);
          }, Object.defineProperty(t3, "UNITMODE_PERCENTAGE", { get: function() {
            return t3._UNITMODE_PERCENTAGE;
          }, enumerable: false, configurable: true }), Object.defineProperty(t3, "UNITMODE_PIXEL", { get: function() {
            return t3._UNITMODE_PIXEL;
          }, enumerable: false, configurable: true }), t3._Regex = /(^-?\d*(\.\d+)?)(%|px)?/, t3._UNITMODE_PERCENTAGE = 0, t3._UNITMODE_PIXEL = 1, t3;
        }(), h = [new s.Vector2(0, 0), new s.Vector2(0, 0), new s.Vector2(0, 0), new s.Vector2(0, 0)], l = [new s.Vector2(0, 0), new s.Vector2(0, 0), new s.Vector2(0, 0), new s.Vector2(0, 0)], u = new s.Vector2(0, 0), c = new s.Vector2(0, 0), _ = function() {
          function t3(t4, e2, i2, r2) {
            this.left = t4, this.top = e2, this.width = i2, this.height = r2;
          }
          return t3.prototype.copyFrom = function(t4) {
            this.left = t4.left, this.top = t4.top, this.width = t4.width, this.height = t4.height;
          }, t3.prototype.copyFromFloats = function(t4, e2, i2, r2) {
            this.left = t4, this.top = e2, this.width = i2, this.height = r2;
          }, t3.CombineToRef = function(t4, e2, i2) {
            var r2 = Math.min(t4.left, e2.left), n2 = Math.min(t4.top, e2.top), o2 = Math.max(t4.left + t4.width, e2.left + e2.width), s2 = Math.max(t4.top + t4.height, e2.top + e2.height);
            i2.left = r2, i2.top = n2, i2.width = o2 - r2, i2.height = s2 - n2;
          }, t3.prototype.addAndTransformToRef = function(t4, e2, i2, r2, n2, o2) {
            var s2 = this.left + e2, a2 = this.top + i2, _2 = this.width + r2, d2 = this.height + n2;
            h[0].copyFromFloats(s2, a2), h[1].copyFromFloats(s2 + _2, a2), h[2].copyFromFloats(s2 + _2, a2 + d2), h[3].copyFromFloats(s2, a2 + d2), u.copyFromFloats(Number.MAX_VALUE, Number.MAX_VALUE), c.copyFromFloats(0, 0);
            for (var p2 = 0; p2 < 4; p2++)
              t4.transformCoordinates(h[p2].x, h[p2].y, l[p2]), u.x = Math.floor(Math.min(u.x, l[p2].x)), u.y = Math.floor(Math.min(u.y, l[p2].y)), c.x = Math.ceil(Math.max(c.x, l[p2].x)), c.y = Math.ceil(Math.max(c.y, l[p2].y));
            o2.left = u.x, o2.top = u.y, o2.width = c.x - u.x, o2.height = c.y - u.y;
          }, t3.prototype.transformToRef = function(t4, e2) {
            this.addAndTransformToRef(t4, 0, 0, 0, 0, e2);
          }, t3.prototype.isEqualsTo = function(t4) {
            return this.left === t4.left && (this.top === t4.top && (this.width === t4.width && this.height === t4.height));
          }, t3.Empty = function() {
            return new t3(0, 0, 0, 0);
          }, t3;
        }(), d = function(t3) {
          function e2(e3, i2) {
            i2 === void 0 && (i2 = 0);
            var r2 = t3.call(this, e3.x, e3.y) || this;
            return r2.buttonIndex = i2, r2;
          }
          return n(e2, t3), e2;
        }(s.Vector2), p = function() {
          function t3(t4, e2, i2, r2, n2, o2) {
            this.m = new Float32Array(6), this.fromValues(t4, e2, i2, r2, n2, o2);
          }
          return t3.prototype.fromValues = function(t4, e2, i2, r2, n2, o2) {
            return this.m[0] = t4, this.m[1] = e2, this.m[2] = i2, this.m[3] = r2, this.m[4] = n2, this.m[5] = o2, this;
          }, t3.prototype.determinant = function() {
            return this.m[0] * this.m[3] - this.m[1] * this.m[2];
          }, t3.prototype.invertToRef = function(t4) {
            var e2 = this.m[0], i2 = this.m[1], r2 = this.m[2], n2 = this.m[3], o2 = this.m[4], a2 = this.m[5], h2 = this.determinant();
            if (h2 < s.Epsilon * s.Epsilon)
              return t4.m[0] = 0, t4.m[1] = 0, t4.m[2] = 0, t4.m[3] = 0, t4.m[4] = 0, t4.m[5] = 0, this;
            var l2 = 1 / h2, u2 = r2 * a2 - n2 * o2, c2 = i2 * o2 - e2 * a2;
            return t4.m[0] = n2 * l2, t4.m[1] = -i2 * l2, t4.m[2] = -r2 * l2, t4.m[3] = e2 * l2, t4.m[4] = u2 * l2, t4.m[5] = c2 * l2, this;
          }, t3.prototype.multiplyToRef = function(t4, e2) {
            var i2 = this.m[0], r2 = this.m[1], n2 = this.m[2], o2 = this.m[3], s2 = this.m[4], a2 = this.m[5], h2 = t4.m[0], l2 = t4.m[1], u2 = t4.m[2], c2 = t4.m[3], _2 = t4.m[4], d2 = t4.m[5];
            return e2.m[0] = i2 * h2 + r2 * u2, e2.m[1] = i2 * l2 + r2 * c2, e2.m[2] = n2 * h2 + o2 * u2, e2.m[3] = n2 * l2 + o2 * c2, e2.m[4] = s2 * h2 + a2 * u2 + _2, e2.m[5] = s2 * l2 + a2 * c2 + d2, this;
          }, t3.prototype.transformCoordinates = function(t4, e2, i2) {
            return i2.x = t4 * this.m[0] + e2 * this.m[2] + this.m[4], i2.y = t4 * this.m[1] + e2 * this.m[3] + this.m[5], this;
          }, t3.Identity = function() {
            return new t3(1, 0, 0, 1, 0, 0);
          }, t3.TranslationToRef = function(t4, e2, i2) {
            i2.fromValues(1, 0, 0, 1, t4, e2);
          }, t3.ScalingToRef = function(t4, e2, i2) {
            i2.fromValues(t4, 0, 0, e2, 0, 0);
          }, t3.RotationToRef = function(t4, e2) {
            var i2 = Math.sin(t4), r2 = Math.cos(t4);
            e2.fromValues(r2, i2, -i2, r2, 0, 0);
          }, t3.ComposeToRef = function(e2, i2, r2, n2, o2, s2, a2) {
            t3.TranslationToRef(e2, i2, t3._TempPreTranslationMatrix), t3.ScalingToRef(n2, o2, t3._TempScalingMatrix), t3.RotationToRef(r2, t3._TempRotationMatrix), t3.TranslationToRef(-e2, -i2, t3._TempPostTranslationMatrix), t3._TempPreTranslationMatrix.multiplyToRef(t3._TempScalingMatrix, t3._TempCompose0), t3._TempCompose0.multiplyToRef(t3._TempRotationMatrix, t3._TempCompose1), s2 ? (t3._TempCompose1.multiplyToRef(t3._TempPostTranslationMatrix, t3._TempCompose2), t3._TempCompose2.multiplyToRef(s2, a2)) : t3._TempCompose1.multiplyToRef(t3._TempPostTranslationMatrix, a2);
          }, t3._TempPreTranslationMatrix = t3.Identity(), t3._TempPostTranslationMatrix = t3.Identity(), t3._TempRotationMatrix = t3.Identity(), t3._TempScalingMatrix = t3.Identity(), t3._TempCompose0 = t3.Identity(), t3._TempCompose1 = t3.Identity(), t3._TempCompose2 = t3.Identity(), t3;
        }(), f = function() {
          function t3(e2) {
            this.name = e2, this._alpha = 1, this._alphaSet = false, this._zIndex = 0, this._currentMeasure = _.Empty(), this._fontFamily = "Arial", this._fontStyle = "", this._fontWeight = "", this._fontSize = new a(18, a.UNITMODE_PIXEL, false), this._width = new a(1, a.UNITMODE_PERCENTAGE, false), this._height = new a(1, a.UNITMODE_PERCENTAGE, false), this._color = "", this._style = null, this._horizontalAlignment = t3.HORIZONTAL_ALIGNMENT_CENTER, this._verticalAlignment = t3.VERTICAL_ALIGNMENT_CENTER, this._isDirty = true, this._wasDirty = false, this._tempParentMeasure = _.Empty(), this._prevCurrentMeasureTransformedIntoGlobalSpace = _.Empty(), this._cachedParentMeasure = _.Empty(), this._paddingLeft = new a(0), this._paddingRight = new a(0), this._paddingTop = new a(0), this._paddingBottom = new a(0), this._left = new a(0), this._top = new a(0), this._scaleX = 1, this._scaleY = 1, this._rotation = 0, this._transformCenterX = 0.5, this._transformCenterY = 0.5, this._transformMatrix = p.Identity(), this._invertTransformMatrix = p.Identity(), this._transformedPosition = s.Vector2.Zero(), this._isMatrixDirty = true, this._isVisible = true, this._isHighlighted = false, this._fontSet = false, this._dummyVector2 = s.Vector2.Zero(), this._downCount = 0, this._enterCount = -1, this._doNotRender = false, this._downPointerIds = {}, this._isEnabled = true, this._disabledColor = "#9a9a9a", this._disabledColorItem = "#6a6a6a", this._rebuildLayout = false, this._customData = {}, this._isClipped = false, this._automaticSize = false, this.metadata = null, this.isHitTestVisible = true, this.isPointerBlocker = false, this.isFocusInvisible = false, this.clipChildren = true, this.clipContent = true, this.useBitmapCache = false, this._shadowOffsetX = 0, this._shadowOffsetY = 0, this._shadowBlur = 0, this._shadowColor = "black", this.hoverCursor = "", this._linkOffsetX = new a(0), this._linkOffsetY = new a(0), this.onWheelObservable = new s.Observable(), this.onPointerMoveObservable = new s.Observable(), this.onPointerOutObservable = new s.Observable(), this.onPointerDownObservable = new s.Observable(), this.onPointerUpObservable = new s.Observable(), this.onPointerClickObservable = new s.Observable(), this.onPointerEnterObservable = new s.Observable(), this.onDirtyObservable = new s.Observable(), this.onBeforeDrawObservable = new s.Observable(), this.onAfterDrawObservable = new s.Observable(), this.onDisposeObservable = new s.Observable(), this.fixedRatio = 0, this._fixedRatioMasterIsWidth = true, this._tmpMeasureA = new _(0, 0, 0, 0);
          }
          return Object.defineProperty(t3.prototype, "shadowOffsetX", { get: function() {
            return this._shadowOffsetX;
          }, set: function(t4) {
            this._shadowOffsetX !== t4 && (this._shadowOffsetX = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "shadowOffsetY", { get: function() {
            return this._shadowOffsetY;
          }, set: function(t4) {
            this._shadowOffsetY !== t4 && (this._shadowOffsetY = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "shadowBlur", { get: function() {
            return this._shadowBlur;
          }, set: function(t4) {
            this._shadowBlur !== t4 && (this._shadowBlur = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "shadowColor", { get: function() {
            return this._shadowColor;
          }, set: function(t4) {
            this._shadowColor !== t4 && (this._shadowColor = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "typeName", { get: function() {
            return this._getTypeName();
          }, enumerable: false, configurable: true }), t3.prototype.getClassName = function() {
            return this._getTypeName();
          }, Object.defineProperty(t3.prototype, "host", { get: function() {
            return this._host;
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "fontOffset", { get: function() {
            return this._fontOffset;
          }, set: function(t4) {
            this._fontOffset = t4;
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "alpha", { get: function() {
            return this._alpha;
          }, set: function(t4) {
            this._alpha !== t4 && (this._alphaSet = true, this._alpha = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "isHighlighted", { get: function() {
            return this._isHighlighted;
          }, set: function(t4) {
            this._isHighlighted !== t4 && (this._isHighlighted = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "scaleX", { get: function() {
            return this._scaleX;
          }, set: function(t4) {
            this._scaleX !== t4 && (this._scaleX = t4, this._markAsDirty(), this._markMatrixAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "scaleY", { get: function() {
            return this._scaleY;
          }, set: function(t4) {
            this._scaleY !== t4 && (this._scaleY = t4, this._markAsDirty(), this._markMatrixAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "rotation", { get: function() {
            return this._rotation;
          }, set: function(t4) {
            this._rotation !== t4 && (this._rotation = t4, this._markAsDirty(), this._markMatrixAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "transformCenterY", { get: function() {
            return this._transformCenterY;
          }, set: function(t4) {
            this._transformCenterY !== t4 && (this._transformCenterY = t4, this._markAsDirty(), this._markMatrixAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "transformCenterX", { get: function() {
            return this._transformCenterX;
          }, set: function(t4) {
            this._transformCenterX !== t4 && (this._transformCenterX = t4, this._markAsDirty(), this._markMatrixAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "horizontalAlignment", { get: function() {
            return this._horizontalAlignment;
          }, set: function(t4) {
            this._horizontalAlignment !== t4 && (this._horizontalAlignment = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "verticalAlignment", { get: function() {
            return this._verticalAlignment;
          }, set: function(t4) {
            this._verticalAlignment !== t4 && (this._verticalAlignment = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "width", { get: function() {
            return this._width.toString(this._host);
          }, set: function(t4) {
            this._fixedRatioMasterIsWidth = true, this._width.toString(this._host) !== t4 && this._width.fromString(t4) && this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "widthInPixels", { get: function() {
            return this._width.getValueInPixel(this._host, this._cachedParentMeasure.width);
          }, set: function(t4) {
            isNaN(t4) || (this._fixedRatioMasterIsWidth = true, this.width = t4 + "px");
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "height", { get: function() {
            return this._height.toString(this._host);
          }, set: function(t4) {
            this._fixedRatioMasterIsWidth = false, this._height.toString(this._host) !== t4 && this._height.fromString(t4) && this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "heightInPixels", { get: function() {
            return this._height.getValueInPixel(this._host, this._cachedParentMeasure.height);
          }, set: function(t4) {
            isNaN(t4) || (this._fixedRatioMasterIsWidth = false, this.height = t4 + "px");
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "fontFamily", { get: function() {
            return this._fontSet ? this._fontFamily : "";
          }, set: function(t4) {
            this._fontFamily !== t4 && (this._fontFamily = t4, this._resetFontCache());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "fontStyle", { get: function() {
            return this._fontStyle;
          }, set: function(t4) {
            this._fontStyle !== t4 && (this._fontStyle = t4, this._resetFontCache());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "fontWeight", { get: function() {
            return this._fontWeight;
          }, set: function(t4) {
            this._fontWeight !== t4 && (this._fontWeight = t4, this._resetFontCache());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "style", { get: function() {
            return this._style;
          }, set: function(t4) {
            var e2 = this;
            this._style && (this._style.onChangedObservable.remove(this._styleObserver), this._styleObserver = null), this._style = t4, this._style && (this._styleObserver = this._style.onChangedObservable.add(function() {
              e2._markAsDirty(), e2._resetFontCache();
            })), this._markAsDirty(), this._resetFontCache();
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "_isFontSizeInPercentage", { get: function() {
            return this._fontSize.isPercentage;
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "fontSizeInPixels", { get: function() {
            var t4 = this._style ? this._style._fontSize : this._fontSize;
            return t4.isPixel ? t4.getValue(this._host) : t4.getValueInPixel(this._host, this._tempParentMeasure.height || this._cachedParentMeasure.height);
          }, set: function(t4) {
            isNaN(t4) || (this.fontSize = t4 + "px");
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "fontSize", { get: function() {
            return this._fontSize.toString(this._host);
          }, set: function(t4) {
            this._fontSize.toString(this._host) !== t4 && this._fontSize.fromString(t4) && (this._markAsDirty(), this._resetFontCache());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "color", { get: function() {
            return this._color;
          }, set: function(t4) {
            this._color !== t4 && (this._color = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "zIndex", { get: function() {
            return this._zIndex;
          }, set: function(t4) {
            this.zIndex !== t4 && (this._zIndex = t4, this.parent && this.parent._reOrderControl(this));
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "notRenderable", { get: function() {
            return this._doNotRender;
          }, set: function(t4) {
            this._doNotRender !== t4 && (this._doNotRender = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "isVisible", { get: function() {
            return this._isVisible;
          }, set: function(t4) {
            this._isVisible !== t4 && (this._isVisible = t4, this._markAsDirty(true));
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "isDirty", { get: function() {
            return this._isDirty;
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "linkedMesh", { get: function() {
            return this._linkedMesh;
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "paddingLeft", { get: function() {
            return this._paddingLeft.toString(this._host);
          }, set: function(t4) {
            this._paddingLeft.fromString(t4) && this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "paddingLeftInPixels", { get: function() {
            return this._paddingLeft.getValueInPixel(this._host, this._cachedParentMeasure.width);
          }, set: function(t4) {
            isNaN(t4) || (this.paddingLeft = t4 + "px");
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "paddingRight", { get: function() {
            return this._paddingRight.toString(this._host);
          }, set: function(t4) {
            this._paddingRight.fromString(t4) && this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "paddingRightInPixels", { get: function() {
            return this._paddingRight.getValueInPixel(this._host, this._cachedParentMeasure.width);
          }, set: function(t4) {
            isNaN(t4) || (this.paddingRight = t4 + "px");
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "paddingTop", { get: function() {
            return this._paddingTop.toString(this._host);
          }, set: function(t4) {
            this._paddingTop.fromString(t4) && this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "paddingTopInPixels", { get: function() {
            return this._paddingTop.getValueInPixel(this._host, this._cachedParentMeasure.height);
          }, set: function(t4) {
            isNaN(t4) || (this.paddingTop = t4 + "px");
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "paddingBottom", { get: function() {
            return this._paddingBottom.toString(this._host);
          }, set: function(t4) {
            this._paddingBottom.fromString(t4) && this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "paddingBottomInPixels", { get: function() {
            return this._paddingBottom.getValueInPixel(this._host, this._cachedParentMeasure.height);
          }, set: function(t4) {
            isNaN(t4) || (this.paddingBottom = t4 + "px");
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "left", { get: function() {
            return this._left.toString(this._host);
          }, set: function(t4) {
            this._left.fromString(t4) && this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "leftInPixels", { get: function() {
            return this._left.getValueInPixel(this._host, this._cachedParentMeasure.width);
          }, set: function(t4) {
            isNaN(t4) || (this.left = t4 + "px");
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "top", { get: function() {
            return this._top.toString(this._host);
          }, set: function(t4) {
            this._top.fromString(t4) && this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "topInPixels", { get: function() {
            return this._top.getValueInPixel(this._host, this._cachedParentMeasure.height);
          }, set: function(t4) {
            isNaN(t4) || (this.top = t4 + "px");
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "linkOffsetX", { get: function() {
            return this._linkOffsetX.toString(this._host);
          }, set: function(t4) {
            this._linkOffsetX.fromString(t4) && this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "linkOffsetXInPixels", { get: function() {
            return this._linkOffsetX.getValueInPixel(this._host, this._cachedParentMeasure.width);
          }, set: function(t4) {
            isNaN(t4) || (this.linkOffsetX = t4 + "px");
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "linkOffsetY", { get: function() {
            return this._linkOffsetY.toString(this._host);
          }, set: function(t4) {
            this._linkOffsetY.fromString(t4) && this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "linkOffsetYInPixels", { get: function() {
            return this._linkOffsetY.getValueInPixel(this._host, this._cachedParentMeasure.height);
          }, set: function(t4) {
            isNaN(t4) || (this.linkOffsetY = t4 + "px");
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "centerX", { get: function() {
            return this._currentMeasure.left + this._currentMeasure.width / 2;
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "centerY", { get: function() {
            return this._currentMeasure.top + this._currentMeasure.height / 2;
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "isEnabled", { get: function() {
            return this._isEnabled;
          }, set: function(t4) {
            this._isEnabled !== t4 && (this._isEnabled = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "disabledColor", { get: function() {
            return this._disabledColor;
          }, set: function(t4) {
            this._disabledColor !== t4 && (this._disabledColor = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "disabledColorItem", { get: function() {
            return this._disabledColorItem;
          }, set: function(t4) {
            this._disabledColorItem !== t4 && (this._disabledColorItem = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), t3.prototype._getTypeName = function() {
            return "Control";
          }, t3.prototype.getAscendantOfClass = function(t4) {
            return this.parent ? this.parent.getClassName() === t4 ? this.parent : this.parent.getAscendantOfClass(t4) : null;
          }, t3.prototype._resetFontCache = function() {
            this._fontSet = true, this._markAsDirty();
          }, t3.prototype.isAscendant = function(t4) {
            return !!this.parent && (this.parent === t4 || this.parent.isAscendant(t4));
          }, t3.prototype.getLocalCoordinates = function(t4) {
            var e2 = s.Vector2.Zero();
            return this.getLocalCoordinatesToRef(t4, e2), e2;
          }, t3.prototype.getLocalCoordinatesToRef = function(t4, e2) {
            return e2.x = t4.x - this._currentMeasure.left, e2.y = t4.y - this._currentMeasure.top, this;
          }, t3.prototype.getParentLocalCoordinates = function(t4) {
            var e2 = s.Vector2.Zero();
            return e2.x = t4.x - this._cachedParentMeasure.left, e2.y = t4.y - this._cachedParentMeasure.top, e2;
          }, t3.prototype.moveToVector3 = function(e2, i2) {
            if (this._host && this.parent === this._host._rootContainer) {
              this.horizontalAlignment = t3.HORIZONTAL_ALIGNMENT_LEFT, this.verticalAlignment = t3.VERTICAL_ALIGNMENT_TOP;
              var r2 = this._host._getGlobalViewport(i2), n2 = s.Vector3.Project(e2, s.Matrix.Identity(), i2.getTransformMatrix(), r2);
              this._moveToProjectedPosition(n2), n2.z < 0 || n2.z > 1 ? this.notRenderable = true : this.notRenderable = false;
            } else
              s.Tools.Error("Cannot move a control to a vector3 if the control is not at root level");
          }, t3.prototype.getDescendantsToRef = function(t4, e2, i2) {
            e2 === void 0 && (e2 = false);
          }, t3.prototype.getDescendants = function(t4, e2) {
            var i2 = new Array();
            return this.getDescendantsToRef(i2, t4, e2), i2;
          }, t3.prototype.linkWithMesh = function(e2) {
            if (!this._host || this.parent && this.parent !== this._host._rootContainer)
              e2 && s.Tools.Error("Cannot link a control to a mesh if the control is not at root level");
            else {
              var i2 = this._host._linkedControls.indexOf(this);
              if (i2 !== -1)
                return this._linkedMesh = e2, void (e2 || this._host._linkedControls.splice(i2, 1));
              e2 && (this.horizontalAlignment = t3.HORIZONTAL_ALIGNMENT_LEFT, this.verticalAlignment = t3.VERTICAL_ALIGNMENT_TOP, this._linkedMesh = e2, this._host._linkedControls.push(this));
            }
          }, t3.prototype._moveToProjectedPosition = function(t4) {
            var e2 = this._left.getValue(this._host), i2 = this._top.getValue(this._host), r2 = t4.x + this._linkOffsetX.getValue(this._host) - this._currentMeasure.width / 2, n2 = t4.y + this._linkOffsetY.getValue(this._host) - this._currentMeasure.height / 2;
            this._left.ignoreAdaptiveScaling && this._top.ignoreAdaptiveScaling && (Math.abs(r2 - e2) < 0.5 && (r2 = e2), Math.abs(n2 - i2) < 0.5 && (n2 = i2)), this.left = r2 + "px", this.top = n2 + "px", this._left.ignoreAdaptiveScaling = true, this._top.ignoreAdaptiveScaling = true, this._markAsDirty();
          }, t3.prototype._offsetLeft = function(t4) {
            this._isDirty = true, this._currentMeasure.left += t4;
          }, t3.prototype._offsetTop = function(t4) {
            this._isDirty = true, this._currentMeasure.top += t4;
          }, t3.prototype._markMatrixAsDirty = function() {
            this._isMatrixDirty = true, this._flagDescendantsAsMatrixDirty();
          }, t3.prototype._flagDescendantsAsMatrixDirty = function() {
          }, t3.prototype._intersectsRect = function(t4) {
            return this._currentMeasure.transformToRef(this._transformMatrix, this._tmpMeasureA), !(this._tmpMeasureA.left >= t4.left + t4.width) && (!(this._tmpMeasureA.top >= t4.top + t4.height) && (!(this._tmpMeasureA.left + this._tmpMeasureA.width <= t4.left) && !(this._tmpMeasureA.top + this._tmpMeasureA.height <= t4.top)));
          }, t3.prototype.invalidateRect = function() {
            if (this._transform(), this.host && this.host.useInvalidateRectOptimization)
              if (this._currentMeasure.transformToRef(this._transformMatrix, this._tmpMeasureA), _.CombineToRef(this._tmpMeasureA, this._prevCurrentMeasureTransformedIntoGlobalSpace, this._tmpMeasureA), this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {
                var t4 = this.shadowOffsetX, e2 = this.shadowOffsetY, i2 = this.shadowBlur, r2 = Math.min(Math.min(t4, 0) - 2 * i2, 0), n2 = Math.max(Math.max(t4, 0) + 2 * i2, 0), o2 = Math.min(Math.min(e2, 0) - 2 * i2, 0), s2 = Math.max(Math.max(e2, 0) + 2 * i2, 0);
                this.host.invalidateRect(Math.floor(this._tmpMeasureA.left + r2), Math.floor(this._tmpMeasureA.top + o2), Math.ceil(this._tmpMeasureA.left + this._tmpMeasureA.width + n2), Math.ceil(this._tmpMeasureA.top + this._tmpMeasureA.height + s2));
              } else
                this.host.invalidateRect(Math.floor(this._tmpMeasureA.left), Math.floor(this._tmpMeasureA.top), Math.ceil(this._tmpMeasureA.left + this._tmpMeasureA.width), Math.ceil(this._tmpMeasureA.top + this._tmpMeasureA.height));
          }, t3.prototype._markAsDirty = function(t4) {
            t4 === void 0 && (t4 = false), (this._isVisible || t4) && (this._isDirty = true, this._host && this._host.markAsDirty());
          }, t3.prototype._markAllAsDirty = function() {
            this._markAsDirty(), this._font && this._prepareFont();
          }, t3.prototype._link = function(t4) {
            this._host = t4, this._host && (this.uniqueId = this._host.getScene().getUniqueId());
          }, t3.prototype._transform = function(t4) {
            if (this._isMatrixDirty || this._scaleX !== 1 || this._scaleY !== 1 || this._rotation !== 0) {
              var e2 = this._currentMeasure.width * this._transformCenterX + this._currentMeasure.left, i2 = this._currentMeasure.height * this._transformCenterY + this._currentMeasure.top;
              t4 && (t4.translate(e2, i2), t4.rotate(this._rotation), t4.scale(this._scaleX, this._scaleY), t4.translate(-e2, -i2)), (this._isMatrixDirty || this._cachedOffsetX !== e2 || this._cachedOffsetY !== i2) && (this._cachedOffsetX = e2, this._cachedOffsetY = i2, this._isMatrixDirty = false, this._flagDescendantsAsMatrixDirty(), p.ComposeToRef(-e2, -i2, this._rotation, this._scaleX, this._scaleY, this.parent ? this.parent._transformMatrix : null, this._transformMatrix), this._transformMatrix.invertToRef(this._invertTransformMatrix));
            }
          }, t3.prototype._renderHighlight = function(t4) {
            this.isHighlighted && (t4.save(), t4.strokeStyle = "#4affff", t4.lineWidth = 2, this._renderHighlightSpecific(t4), t4.restore());
          }, t3.prototype._renderHighlightSpecific = function(t4) {
            t4.strokeRect(this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height);
          }, t3.prototype._applyStates = function(e2) {
            this._isFontSizeInPercentage && (this._fontSet = true), this._fontSet && (this._prepareFont(), this._fontSet = false), this._font && (e2.font = this._font), this._color && (e2.fillStyle = this._color), t3.AllowAlphaInheritance ? e2.globalAlpha *= this._alpha : this._alphaSet && (e2.globalAlpha = this.parent ? this.parent.alpha * this._alpha : this._alpha);
          }, t3.prototype._layout = function(t4, e2) {
            if (!this.isDirty && (!this.isVisible || this.notRenderable))
              return false;
            if (this._isDirty || !this._cachedParentMeasure.isEqualsTo(t4)) {
              this.host._numLayoutCalls++, this._currentMeasure.addAndTransformToRef(this._transformMatrix, 0 | -this.paddingLeftInPixels, 0 | -this.paddingTopInPixels, 0 | this.paddingRightInPixels, 0 | this.paddingBottomInPixels, this._prevCurrentMeasureTransformedIntoGlobalSpace), e2.save(), this._applyStates(e2);
              var i2 = 0;
              do {
                this._rebuildLayout = false, this._processMeasures(t4, e2), i2++;
              } while (this._rebuildLayout && i2 < 3);
              i2 >= 3 && s.Logger.Error("Layout cycle detected in GUI (Control name=" + this.name + ", uniqueId=" + this.uniqueId + ")"), e2.restore(), this.invalidateRect(), this._evaluateClippingState(t4);
            }
            return this._wasDirty = this._isDirty, this._isDirty = false, true;
          }, t3.prototype._processMeasures = function(t4, e2) {
            this._currentMeasure.copyFrom(t4), this._preMeasure(t4, e2), this._measure(), this._computeAlignment(t4, e2), this._currentMeasure.left = 0 | this._currentMeasure.left, this._currentMeasure.top = 0 | this._currentMeasure.top, this._currentMeasure.width = 0 | this._currentMeasure.width, this._currentMeasure.height = 0 | this._currentMeasure.height, this._additionalProcessing(t4, e2), this._cachedParentMeasure.copyFrom(t4), this.onDirtyObservable.hasObservers() && this.onDirtyObservable.notifyObservers(this);
          }, t3.prototype._evaluateClippingState = function(t4) {
            if (this.parent && this.parent.clipChildren) {
              if (this._currentMeasure.left > t4.left + t4.width)
                return void (this._isClipped = true);
              if (this._currentMeasure.left + this._currentMeasure.width < t4.left)
                return void (this._isClipped = true);
              if (this._currentMeasure.top > t4.top + t4.height)
                return void (this._isClipped = true);
              if (this._currentMeasure.top + this._currentMeasure.height < t4.top)
                return void (this._isClipped = true);
            }
            this._isClipped = false;
          }, t3.prototype._measure = function() {
            this._width.isPixel ? this._currentMeasure.width = this._width.getValue(this._host) : this._currentMeasure.width *= this._width.getValue(this._host), this._height.isPixel ? this._currentMeasure.height = this._height.getValue(this._host) : this._currentMeasure.height *= this._height.getValue(this._host), this.fixedRatio !== 0 && (this._fixedRatioMasterIsWidth ? this._currentMeasure.height = this._currentMeasure.width * this.fixedRatio : this._currentMeasure.width = this._currentMeasure.height * this.fixedRatio);
          }, t3.prototype._computeAlignment = function(e2, i2) {
            var r2 = this._currentMeasure.width, n2 = this._currentMeasure.height, o2 = e2.width, s2 = e2.height, a2 = 0, h2 = 0;
            switch (this.horizontalAlignment) {
              case t3.HORIZONTAL_ALIGNMENT_LEFT:
                a2 = 0;
                break;
              case t3.HORIZONTAL_ALIGNMENT_RIGHT:
                a2 = o2 - r2;
                break;
              case t3.HORIZONTAL_ALIGNMENT_CENTER:
                a2 = (o2 - r2) / 2;
            }
            switch (this.verticalAlignment) {
              case t3.VERTICAL_ALIGNMENT_TOP:
                h2 = 0;
                break;
              case t3.VERTICAL_ALIGNMENT_BOTTOM:
                h2 = s2 - n2;
                break;
              case t3.VERTICAL_ALIGNMENT_CENTER:
                h2 = (s2 - n2) / 2;
            }
            this._paddingLeft.isPixel ? (this._currentMeasure.left += this._paddingLeft.getValue(this._host), this._currentMeasure.width -= this._paddingLeft.getValue(this._host)) : (this._currentMeasure.left += o2 * this._paddingLeft.getValue(this._host), this._currentMeasure.width -= o2 * this._paddingLeft.getValue(this._host)), this._paddingRight.isPixel ? this._currentMeasure.width -= this._paddingRight.getValue(this._host) : this._currentMeasure.width -= o2 * this._paddingRight.getValue(this._host), this._paddingTop.isPixel ? (this._currentMeasure.top += this._paddingTop.getValue(this._host), this._currentMeasure.height -= this._paddingTop.getValue(this._host)) : (this._currentMeasure.top += s2 * this._paddingTop.getValue(this._host), this._currentMeasure.height -= s2 * this._paddingTop.getValue(this._host)), this._paddingBottom.isPixel ? this._currentMeasure.height -= this._paddingBottom.getValue(this._host) : this._currentMeasure.height -= s2 * this._paddingBottom.getValue(this._host), this._left.isPixel ? this._currentMeasure.left += this._left.getValue(this._host) : this._currentMeasure.left += o2 * this._left.getValue(this._host), this._top.isPixel ? this._currentMeasure.top += this._top.getValue(this._host) : this._currentMeasure.top += s2 * this._top.getValue(this._host), this._currentMeasure.left += a2, this._currentMeasure.top += h2;
          }, t3.prototype._preMeasure = function(t4, e2) {
          }, t3.prototype._additionalProcessing = function(t4, e2) {
          }, t3.prototype._clipForChildren = function(t4) {
          }, t3.prototype._clip = function(e2, i2) {
            if (e2.beginPath(), t3._ClipMeasure.copyFrom(this._currentMeasure), i2) {
              i2.transformToRef(this._invertTransformMatrix, this._tmpMeasureA);
              var r2 = new _(0, 0, 0, 0);
              r2.left = Math.max(this._tmpMeasureA.left, this._currentMeasure.left), r2.top = Math.max(this._tmpMeasureA.top, this._currentMeasure.top), r2.width = Math.min(this._tmpMeasureA.left + this._tmpMeasureA.width, this._currentMeasure.left + this._currentMeasure.width) - r2.left, r2.height = Math.min(this._tmpMeasureA.top + this._tmpMeasureA.height, this._currentMeasure.top + this._currentMeasure.height) - r2.top, t3._ClipMeasure.copyFrom(r2);
            }
            if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {
              var n2 = this.shadowOffsetX, o2 = this.shadowOffsetY, s2 = this.shadowBlur, a2 = Math.min(Math.min(n2, 0) - 2 * s2, 0), h2 = Math.max(Math.max(n2, 0) + 2 * s2, 0), l2 = Math.min(Math.min(o2, 0) - 2 * s2, 0), u2 = Math.max(Math.max(o2, 0) + 2 * s2, 0);
              e2.rect(t3._ClipMeasure.left + a2, t3._ClipMeasure.top + l2, t3._ClipMeasure.width + h2 - a2, t3._ClipMeasure.height + u2 - l2);
            } else
              e2.rect(t3._ClipMeasure.left, t3._ClipMeasure.top, t3._ClipMeasure.width, t3._ClipMeasure.height);
            e2.clip();
          }, t3.prototype._render = function(t4, e2) {
            return !this.isVisible || this.notRenderable || this._isClipped ? (this._isDirty = false, false) : (this.host._numRenderCalls++, t4.save(), this._applyStates(t4), this._transform(t4), this.clipContent && this._clip(t4, e2), this.onBeforeDrawObservable.hasObservers() && this.onBeforeDrawObservable.notifyObservers(this), this.useBitmapCache && !this._wasDirty && this._cacheData ? t4.putImageData(this._cacheData, this._currentMeasure.left, this._currentMeasure.top) : this._draw(t4, e2), this.useBitmapCache && this._wasDirty && (this._cacheData = t4.getImageData(this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height)), this._renderHighlight(t4), this.onAfterDrawObservable.hasObservers() && this.onAfterDrawObservable.notifyObservers(this), t4.restore(), true);
          }, t3.prototype._draw = function(t4, e2) {
          }, t3.prototype.contains = function(t4, e2) {
            return this._invertTransformMatrix.transformCoordinates(t4, e2, this._transformedPosition), t4 = this._transformedPosition.x, e2 = this._transformedPosition.y, !(t4 < this._currentMeasure.left) && (!(t4 > this._currentMeasure.left + this._currentMeasure.width) && (!(e2 < this._currentMeasure.top) && (!(e2 > this._currentMeasure.top + this._currentMeasure.height) && (this.isPointerBlocker && (this._host._shouldBlockPointer = true), true))));
          }, t3.prototype._processPicking = function(t4, e2, i2, r2, n2, o2, s2, a2) {
            return !!this._isEnabled && (!(!this.isHitTestVisible || !this.isVisible || this._doNotRender) && (!!this.contains(t4, e2) && (this._processObservables(r2, t4, e2, i2, n2, o2, s2, a2), true)));
          }, t3.prototype._onPointerMove = function(t4, e2, i2, r2) {
            this.onPointerMoveObservable.notifyObservers(e2, -1, t4, this, r2) && this.parent != null && this.parent._onPointerMove(t4, e2, i2, r2);
          }, t3.prototype._onPointerEnter = function(t4, e2) {
            return !!this._isEnabled && (!(this._enterCount > 0) && (this._enterCount === -1 && (this._enterCount = 0), this._enterCount++, this.onPointerEnterObservable.notifyObservers(this, -1, t4, this, e2) && this.parent != null && this.parent._onPointerEnter(t4, e2), true));
          }, t3.prototype._onPointerOut = function(t4, e2, i2) {
            if (i2 === void 0 && (i2 = false), i2 || this._isEnabled && t4 !== this) {
              this._enterCount = 0;
              var r2 = true;
              t4.isAscendant(this) || (r2 = this.onPointerOutObservable.notifyObservers(this, -1, t4, this, e2)), r2 && this.parent != null && this.parent._onPointerOut(t4, e2, i2);
            }
          }, t3.prototype._onPointerDown = function(t4, e2, i2, r2, n2) {
            return this._onPointerEnter(this, n2), this._downCount === 0 && (this._downCount++, this._downPointerIds[i2] = true, this.onPointerDownObservable.notifyObservers(new d(e2, r2), -1, t4, this, n2) && this.parent != null && this.parent._onPointerDown(t4, e2, i2, r2, n2), true);
          }, t3.prototype._onPointerUp = function(t4, e2, i2, r2, n2, o2) {
            if (this._isEnabled) {
              this._downCount = 0, delete this._downPointerIds[i2];
              var s2 = n2;
              n2 && (this._enterCount > 0 || this._enterCount === -1) && (s2 = this.onPointerClickObservable.notifyObservers(new d(e2, r2), -1, t4, this, o2)), this.onPointerUpObservable.notifyObservers(new d(e2, r2), -1, t4, this, o2) && this.parent != null && this.parent._onPointerUp(t4, e2, i2, r2, s2, o2);
            }
          }, t3.prototype._forcePointerUp = function(t4) {
            if (t4 === void 0 && (t4 = null), t4 !== null)
              this._onPointerUp(this, s.Vector2.Zero(), t4, 0, true);
            else
              for (var e2 in this._downPointerIds)
                this._onPointerUp(this, s.Vector2.Zero(), +e2, 0, true);
          }, t3.prototype._onWheelScroll = function(t4, e2) {
            this._isEnabled && (this.onWheelObservable.notifyObservers(new s.Vector2(t4, e2)) && this.parent != null && this.parent._onWheelScroll(t4, e2));
          }, t3.prototype._onCanvasBlur = function() {
          }, t3.prototype._processObservables = function(t4, e2, i2, r2, n2, o2, a2, h2) {
            if (!this._isEnabled)
              return false;
            if (this._dummyVector2.copyFromFloats(e2, i2), t4 === s.PointerEventTypes.POINTERMOVE) {
              this._onPointerMove(this, this._dummyVector2, n2, r2);
              var l2 = this._host._lastControlOver[n2];
              return l2 && l2 !== this && l2._onPointerOut(this, r2), l2 !== this && this._onPointerEnter(this, r2), this._host._lastControlOver[n2] = this, true;
            }
            return t4 === s.PointerEventTypes.POINTERDOWN ? (this._onPointerDown(this, this._dummyVector2, n2, o2, r2), this._host._registerLastControlDown(this, n2), this._host._lastPickedControl = this, true) : t4 === s.PointerEventTypes.POINTERUP ? (this._host._lastControlDown[n2] && this._host._lastControlDown[n2]._onPointerUp(this, this._dummyVector2, n2, o2, true, r2), delete this._host._lastControlDown[n2], true) : !(t4 !== s.PointerEventTypes.POINTERWHEEL || !this._host._lastControlOver[n2]) && (this._host._lastControlOver[n2]._onWheelScroll(a2, h2), true);
          }, t3.prototype._prepareFont = function() {
            (this._font || this._fontSet) && (this._style ? this._font = this._style.fontStyle + " " + this._style.fontWeight + " " + this.fontSizeInPixels + "px " + this._style.fontFamily : this._font = this._fontStyle + " " + this._fontWeight + " " + this.fontSizeInPixels + "px " + this._fontFamily, this._fontOffset = t3._GetFontOffset(this._font));
          }, t3.prototype.dispose = function() {
            (this.onDirtyObservable.clear(), this.onBeforeDrawObservable.clear(), this.onAfterDrawObservable.clear(), this.onPointerDownObservable.clear(), this.onPointerEnterObservable.clear(), this.onPointerMoveObservable.clear(), this.onPointerOutObservable.clear(), this.onPointerUpObservable.clear(), this.onPointerClickObservable.clear(), this.onWheelObservable.clear(), this._styleObserver && this._style && (this._style.onChangedObservable.remove(this._styleObserver), this._styleObserver = null), this.parent && (this.parent.removeControl(this), this.parent = null), this._host) && (this._host._linkedControls.indexOf(this) > -1 && this.linkWithMesh(null));
            this.onDisposeObservable.notifyObservers(this), this.onDisposeObservable.clear();
          }, Object.defineProperty(t3, "HORIZONTAL_ALIGNMENT_LEFT", { get: function() {
            return t3._HORIZONTAL_ALIGNMENT_LEFT;
          }, enumerable: false, configurable: true }), Object.defineProperty(t3, "HORIZONTAL_ALIGNMENT_RIGHT", { get: function() {
            return t3._HORIZONTAL_ALIGNMENT_RIGHT;
          }, enumerable: false, configurable: true }), Object.defineProperty(t3, "HORIZONTAL_ALIGNMENT_CENTER", { get: function() {
            return t3._HORIZONTAL_ALIGNMENT_CENTER;
          }, enumerable: false, configurable: true }), Object.defineProperty(t3, "VERTICAL_ALIGNMENT_TOP", { get: function() {
            return t3._VERTICAL_ALIGNMENT_TOP;
          }, enumerable: false, configurable: true }), Object.defineProperty(t3, "VERTICAL_ALIGNMENT_BOTTOM", { get: function() {
            return t3._VERTICAL_ALIGNMENT_BOTTOM;
          }, enumerable: false, configurable: true }), Object.defineProperty(t3, "VERTICAL_ALIGNMENT_CENTER", { get: function() {
            return t3._VERTICAL_ALIGNMENT_CENTER;
          }, enumerable: false, configurable: true }), t3._GetFontOffset = function(e2) {
            if (t3._FontHeightSizes[e2])
              return t3._FontHeightSizes[e2];
            var i2 = document.createElement("span");
            i2.innerHTML = "Hg", i2.style.font = e2;
            var r2 = document.createElement("div");
            r2.style.display = "inline-block", r2.style.width = "1px", r2.style.height = "0px", r2.style.verticalAlign = "bottom";
            var n2 = document.createElement("div");
            n2.style.whiteSpace = "nowrap", n2.appendChild(i2), n2.appendChild(r2), document.body.appendChild(n2);
            var o2 = 0, s2 = 0;
            try {
              s2 = r2.getBoundingClientRect().top - i2.getBoundingClientRect().top, r2.style.verticalAlign = "baseline", o2 = r2.getBoundingClientRect().top - i2.getBoundingClientRect().top;
            } finally {
              document.body.removeChild(n2);
            }
            var a2 = { ascent: o2, height: s2, descent: s2 - o2 };
            return t3._FontHeightSizes[e2] = a2, a2;
          }, t3.drawEllipse = function(t4, e2, i2, r2, n2) {
            n2.translate(t4, e2), n2.scale(i2, r2), n2.beginPath(), n2.arc(0, 0, 1, 0, 2 * Math.PI), n2.closePath(), n2.scale(1 / i2, 1 / r2), n2.translate(-t4, -e2);
          }, t3.AllowAlphaInheritance = false, t3._ClipMeasure = new _(0, 0, 0, 0), t3._HORIZONTAL_ALIGNMENT_LEFT = 0, t3._HORIZONTAL_ALIGNMENT_RIGHT = 1, t3._HORIZONTAL_ALIGNMENT_CENTER = 2, t3._VERTICAL_ALIGNMENT_TOP = 0, t3._VERTICAL_ALIGNMENT_BOTTOM = 1, t3._VERTICAL_ALIGNMENT_CENTER = 2, t3._FontHeightSizes = {}, t3.AddHeader = function() {
          }, t3;
        }();
        s._TypeStore.RegisteredTypes["BABYLON.GUI.Control"] = f;
        var g = function(t3) {
          function e2(e3) {
            var i2 = t3.call(this, e3) || this;
            return i2.name = e3, i2._children = new Array(), i2._measureForChildren = _.Empty(), i2._background = "", i2._adaptWidthToChildren = false, i2._adaptHeightToChildren = false, i2.logLayoutCycleErrors = false, i2.maxLayoutCycle = 3, i2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "adaptHeightToChildren", { get: function() {
            return this._adaptHeightToChildren;
          }, set: function(t4) {
            this._adaptHeightToChildren !== t4 && (this._adaptHeightToChildren = t4, t4 && (this.height = "100%"), this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "adaptWidthToChildren", { get: function() {
            return this._adaptWidthToChildren;
          }, set: function(t4) {
            this._adaptWidthToChildren !== t4 && (this._adaptWidthToChildren = t4, t4 && (this.width = "100%"), this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "background", { get: function() {
            return this._background;
          }, set: function(t4) {
            this._background !== t4 && (this._background = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "children", { get: function() {
            return this._children;
          }, enumerable: false, configurable: true }), e2.prototype._getTypeName = function() {
            return "Container";
          }, e2.prototype._flagDescendantsAsMatrixDirty = function() {
            for (var t4 = 0, e3 = this.children; t4 < e3.length; t4++) {
              e3[t4]._markMatrixAsDirty();
            }
          }, e2.prototype.getChildByName = function(t4) {
            for (var e3 = 0, i2 = this.children; e3 < i2.length; e3++) {
              var r2 = i2[e3];
              if (r2.name === t4)
                return r2;
            }
            return null;
          }, e2.prototype.getChildByType = function(t4, e3) {
            for (var i2 = 0, r2 = this.children; i2 < r2.length; i2++) {
              var n2 = r2[i2];
              if (n2.typeName === e3)
                return n2;
            }
            return null;
          }, e2.prototype.containsControl = function(t4) {
            return this.children.indexOf(t4) !== -1;
          }, e2.prototype.addControl = function(t4) {
            return t4 ? (this._children.indexOf(t4) !== -1 || (t4._link(this._host), t4._markAllAsDirty(), this._reOrderControl(t4), this._markAsDirty()), this) : this;
          }, e2.prototype.clearControls = function() {
            for (var t4 = 0, e3 = this.children.slice(); t4 < e3.length; t4++) {
              var i2 = e3[t4];
              this.removeControl(i2);
            }
            return this;
          }, e2.prototype.removeControl = function(t4) {
            var e3 = this._children.indexOf(t4);
            return e3 !== -1 && (this._children.splice(e3, 1), t4.parent = null), t4.linkWithMesh(null), this._host && this._host._cleanControlAfterRemoval(t4), this._markAsDirty(), this;
          }, e2.prototype._reOrderControl = function(t4) {
            this.removeControl(t4);
            for (var e3 = false, i2 = 0; i2 < this._children.length; i2++)
              if (this._children[i2].zIndex > t4.zIndex) {
                this._children.splice(i2, 0, t4), e3 = true;
                break;
              }
            e3 || this._children.push(t4), t4.parent = this, this._markAsDirty();
          }, e2.prototype._offsetLeft = function(e3) {
            t3.prototype._offsetLeft.call(this, e3);
            for (var i2 = 0, r2 = this._children; i2 < r2.length; i2++) {
              r2[i2]._offsetLeft(e3);
            }
          }, e2.prototype._offsetTop = function(e3) {
            t3.prototype._offsetTop.call(this, e3);
            for (var i2 = 0, r2 = this._children; i2 < r2.length; i2++) {
              r2[i2]._offsetTop(e3);
            }
          }, e2.prototype._markAllAsDirty = function() {
            t3.prototype._markAllAsDirty.call(this);
            for (var e3 = 0; e3 < this._children.length; e3++)
              this._children[e3]._markAllAsDirty();
          }, e2.prototype._localDraw = function(t4) {
            this._background && (t4.save(), (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (t4.shadowColor = this.shadowColor, t4.shadowBlur = this.shadowBlur, t4.shadowOffsetX = this.shadowOffsetX, t4.shadowOffsetY = this.shadowOffsetY), t4.fillStyle = this._background, t4.fillRect(this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height), t4.restore());
          }, e2.prototype._link = function(e3) {
            t3.prototype._link.call(this, e3);
            for (var i2 = 0, r2 = this._children; i2 < r2.length; i2++) {
              r2[i2]._link(e3);
            }
          }, e2.prototype._beforeLayout = function() {
          }, e2.prototype._processMeasures = function(e3, i2) {
            !this._isDirty && this._cachedParentMeasure.isEqualsTo(e3) || (t3.prototype._processMeasures.call(this, e3, i2), this._evaluateClippingState(e3));
          }, e2.prototype._layout = function(t4, e3) {
            if (!this.isDirty && (!this.isVisible || this.notRenderable))
              return false;
            this.host._numLayoutCalls++, this._isDirty && this._currentMeasure.transformToRef(this._transformMatrix, this._prevCurrentMeasureTransformedIntoGlobalSpace);
            var i2 = 0;
            e3.save(), this._applyStates(e3), this._beforeLayout();
            do {
              var r2 = -1, n2 = -1;
              if (this._rebuildLayout = false, this._processMeasures(t4, e3), !this._isClipped) {
                for (var o2 = 0, a2 = this._children; o2 < a2.length; o2++) {
                  var h2 = a2[o2];
                  h2._tempParentMeasure.copyFrom(this._measureForChildren), h2._layout(this._measureForChildren, e3) && (this.adaptWidthToChildren && h2._width.isPixel && (r2 = Math.max(r2, h2._currentMeasure.width + h2.paddingLeftInPixels + h2.paddingRightInPixels)), this.adaptHeightToChildren && h2._height.isPixel && (n2 = Math.max(n2, h2._currentMeasure.height + h2.paddingTopInPixels + h2.paddingBottomInPixels)));
                }
                this.adaptWidthToChildren && r2 >= 0 && (r2 += this.paddingLeftInPixels + this.paddingRightInPixels, this.width !== r2 + "px" && (this.width = r2 + "px", this._rebuildLayout = true)), this.adaptHeightToChildren && n2 >= 0 && (n2 += this.paddingTopInPixels + this.paddingBottomInPixels, this.height !== n2 + "px" && (this.height = n2 + "px", this._rebuildLayout = true)), this._postMeasure();
              }
              i2++;
            } while (this._rebuildLayout && i2 < this.maxLayoutCycle);
            return i2 >= 3 && this.logLayoutCycleErrors && s.Logger.Error("Layout cycle detected in GUI (Container name=" + this.name + ", uniqueId=" + this.uniqueId + ")"), e3.restore(), this._isDirty && (this.invalidateRect(), this._isDirty = false), true;
          }, e2.prototype._postMeasure = function() {
          }, e2.prototype._draw = function(t4, e3) {
            this._localDraw(t4), this.clipChildren && this._clipForChildren(t4);
            for (var i2 = 0, r2 = this._children; i2 < r2.length; i2++) {
              var n2 = r2[i2];
              e3 && !n2._intersectsRect(e3) || n2._render(t4, e3);
            }
          }, e2.prototype.getDescendantsToRef = function(t4, e3, i2) {
            if (e3 === void 0 && (e3 = false), this.children)
              for (var r2 = 0; r2 < this.children.length; r2++) {
                var n2 = this.children[r2];
                i2 && !i2(n2) || t4.push(n2), e3 || n2.getDescendantsToRef(t4, false, i2);
              }
          }, e2.prototype._processPicking = function(e3, i2, r2, n2, o2, s2, a2, h2) {
            if (!this._isEnabled || !this.isVisible || this.notRenderable)
              return false;
            if (!t3.prototype.contains.call(this, e3, i2))
              return false;
            for (var l2 = this._children.length - 1; l2 >= 0; l2--) {
              var u2 = this._children[l2];
              if (u2._processPicking(e3, i2, r2, n2, o2, s2, a2, h2))
                return u2.hoverCursor && this._host._changeCursor(u2.hoverCursor), true;
            }
            return !!this.isHitTestVisible && this._processObservables(n2, e3, i2, r2, o2, s2, a2, h2);
          }, e2.prototype._additionalProcessing = function(e3, i2) {
            t3.prototype._additionalProcessing.call(this, e3, i2), this._measureForChildren.copyFrom(this._currentMeasure);
          }, e2.prototype.dispose = function() {
            t3.prototype.dispose.call(this);
            for (var e3 = this.children.length - 1; e3 >= 0; e3--)
              this.children[e3].dispose();
          }, e2;
        }(f);
        s._TypeStore.RegisteredTypes["BABYLON.GUI.Container"] = g;
        var m, b = function(t3) {
          function e2(e3) {
            var i2 = t3.call(this, e3) || this;
            return i2.name = e3, i2._thickness = 1, i2._cornerRadius = 0, i2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "thickness", { get: function() {
            return this._thickness;
          }, set: function(t4) {
            this._thickness !== t4 && (this._thickness = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "cornerRadius", { get: function() {
            return this._cornerRadius;
          }, set: function(t4) {
            t4 < 0 && (t4 = 0), this._cornerRadius !== t4 && (this._cornerRadius = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), e2.prototype._getTypeName = function() {
            return "Rectangle";
          }, e2.prototype._localDraw = function(t4) {
            t4.save(), (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (t4.shadowColor = this.shadowColor, t4.shadowBlur = this.shadowBlur, t4.shadowOffsetX = this.shadowOffsetX, t4.shadowOffsetY = this.shadowOffsetY), this._background && (t4.fillStyle = this._background, this._cornerRadius ? (this._drawRoundedRect(t4, this._thickness / 2), t4.fill()) : t4.fillRect(this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height)), this._thickness && ((this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (t4.shadowBlur = 0, t4.shadowOffsetX = 0, t4.shadowOffsetY = 0), this.color && (t4.strokeStyle = this.color), t4.lineWidth = this._thickness, this._cornerRadius ? (this._drawRoundedRect(t4, this._thickness / 2), t4.stroke()) : t4.strokeRect(this._currentMeasure.left + this._thickness / 2, this._currentMeasure.top + this._thickness / 2, this._currentMeasure.width - this._thickness, this._currentMeasure.height - this._thickness)), t4.restore();
          }, e2.prototype._additionalProcessing = function(e3, i2) {
            t3.prototype._additionalProcessing.call(this, e3, i2), this._measureForChildren.width -= 2 * this._thickness, this._measureForChildren.height -= 2 * this._thickness, this._measureForChildren.left += this._thickness, this._measureForChildren.top += this._thickness;
          }, e2.prototype._drawRoundedRect = function(t4, e3) {
            e3 === void 0 && (e3 = 0);
            var i2 = this._currentMeasure.left + e3, r2 = this._currentMeasure.top + e3, n2 = this._currentMeasure.width - 2 * e3, o2 = this._currentMeasure.height - 2 * e3, s2 = Math.min(o2 / 2 - 2, Math.min(n2 / 2 - 2, this._cornerRadius));
            t4.beginPath(), t4.moveTo(i2 + s2, r2), t4.lineTo(i2 + n2 - s2, r2), t4.quadraticCurveTo(i2 + n2, r2, i2 + n2, r2 + s2), t4.lineTo(i2 + n2, r2 + o2 - s2), t4.quadraticCurveTo(i2 + n2, r2 + o2, i2 + n2 - s2, r2 + o2), t4.lineTo(i2 + s2, r2 + o2), t4.quadraticCurveTo(i2, r2 + o2, i2, r2 + o2 - s2), t4.lineTo(i2, r2 + s2), t4.quadraticCurveTo(i2, r2, i2 + s2, r2), t4.closePath();
          }, e2.prototype._clipForChildren = function(t4) {
            this._cornerRadius && (this._drawRoundedRect(t4, this._thickness), t4.clip());
          }, e2;
        }(g);
        s._TypeStore.RegisteredTypes["BABYLON.GUI.Rectangle"] = b, function(t3) {
          t3[t3.Clip = 0] = "Clip", t3[t3.WordWrap = 1] = "WordWrap", t3[t3.Ellipsis = 2] = "Ellipsis";
        }(m || (m = {}));
        var y = function(t3) {
          function e2(e3, i2) {
            i2 === void 0 && (i2 = "");
            var r2 = t3.call(this, e3) || this;
            return r2.name = e3, r2._text = "", r2._textWrapping = m.Clip, r2._textHorizontalAlignment = f.HORIZONTAL_ALIGNMENT_CENTER, r2._textVerticalAlignment = f.VERTICAL_ALIGNMENT_CENTER, r2._resizeToFit = false, r2._lineSpacing = new a(0), r2._outlineWidth = 0, r2._outlineColor = "white", r2._underline = false, r2._lineThrough = false, r2.onTextChangedObservable = new s.Observable(), r2.onLinesReadyObservable = new s.Observable(), r2.text = i2, r2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "lines", { get: function() {
            return this._lines;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "resizeToFit", { get: function() {
            return this._resizeToFit;
          }, set: function(t4) {
            this._resizeToFit !== t4 && (this._resizeToFit = t4, this._resizeToFit && (this._width.ignoreAdaptiveScaling = true, this._height.ignoreAdaptiveScaling = true), this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "textWrapping", { get: function() {
            return this._textWrapping;
          }, set: function(t4) {
            this._textWrapping !== t4 && (this._textWrapping = +t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "text", { get: function() {
            return this._text;
          }, set: function(t4) {
            this._text !== t4 && (this._text = t4, this._markAsDirty(), this.onTextChangedObservable.notifyObservers(this));
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "textHorizontalAlignment", { get: function() {
            return this._textHorizontalAlignment;
          }, set: function(t4) {
            this._textHorizontalAlignment !== t4 && (this._textHorizontalAlignment = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "textVerticalAlignment", { get: function() {
            return this._textVerticalAlignment;
          }, set: function(t4) {
            this._textVerticalAlignment !== t4 && (this._textVerticalAlignment = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "lineSpacing", { get: function() {
            return this._lineSpacing.toString(this._host);
          }, set: function(t4) {
            this._lineSpacing.fromString(t4) && this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "outlineWidth", { get: function() {
            return this._outlineWidth;
          }, set: function(t4) {
            this._outlineWidth !== t4 && (this._outlineWidth = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "underline", { get: function() {
            return this._underline;
          }, set: function(t4) {
            this._underline !== t4 && (this._underline = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "lineThrough", { get: function() {
            return this._lineThrough;
          }, set: function(t4) {
            this._lineThrough !== t4 && (this._lineThrough = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "outlineColor", { get: function() {
            return this._outlineColor;
          }, set: function(t4) {
            this._outlineColor !== t4 && (this._outlineColor = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), e2.prototype._getTypeName = function() {
            return "TextBlock";
          }, e2.prototype._processMeasures = function(e3, i2) {
            this._fontOffset || (this._fontOffset = f._GetFontOffset(i2.font)), t3.prototype._processMeasures.call(this, e3, i2), this._lines = this._breakLines(this._currentMeasure.width, i2), this.onLinesReadyObservable.notifyObservers(this);
            for (var r2 = 0, n2 = 0; n2 < this._lines.length; n2++) {
              var o2 = this._lines[n2];
              o2.width > r2 && (r2 = o2.width);
            }
            if (this._resizeToFit) {
              if (this._textWrapping === m.Clip) {
                var s2 = this.paddingLeftInPixels + this.paddingRightInPixels + r2 | 0;
                s2 !== this._width.internalValue && (this._width.updateInPlace(s2, a.UNITMODE_PIXEL), this._rebuildLayout = true);
              }
              var h2 = this.paddingTopInPixels + this.paddingBottomInPixels + this._fontOffset.height * this._lines.length | 0;
              if (this._lines.length > 0 && this._lineSpacing.internalValue !== 0) {
                var l2 = 0;
                l2 = this._lineSpacing.isPixel ? this._lineSpacing.getValue(this._host) : this._lineSpacing.getValue(this._host) * this._height.getValueInPixel(this._host, this._cachedParentMeasure.height), h2 += (this._lines.length - 1) * l2;
              }
              h2 !== this._height.internalValue && (this._height.updateInPlace(h2, a.UNITMODE_PIXEL), this._rebuildLayout = true);
            }
          }, e2.prototype._drawText = function(t4, e3, i2, r2) {
            var n2 = this._currentMeasure.width, o2 = 0;
            switch (this._textHorizontalAlignment) {
              case f.HORIZONTAL_ALIGNMENT_LEFT:
                o2 = 0;
                break;
              case f.HORIZONTAL_ALIGNMENT_RIGHT:
                o2 = n2 - e3;
                break;
              case f.HORIZONTAL_ALIGNMENT_CENTER:
                o2 = (n2 - e3) / 2;
            }
            (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (r2.shadowColor = this.shadowColor, r2.shadowBlur = this.shadowBlur, r2.shadowOffsetX = this.shadowOffsetX, r2.shadowOffsetY = this.shadowOffsetY), this.outlineWidth && r2.strokeText(t4, this._currentMeasure.left + o2, i2), r2.fillText(t4, this._currentMeasure.left + o2, i2), this._underline && (r2.beginPath(), r2.lineWidth = Math.round(0.05 * this.fontSizeInPixels), r2.moveTo(this._currentMeasure.left + o2, i2 + 3), r2.lineTo(this._currentMeasure.left + o2 + e3, i2 + 3), r2.stroke(), r2.closePath()), this._lineThrough && (r2.beginPath(), r2.lineWidth = Math.round(0.05 * this.fontSizeInPixels), r2.moveTo(this._currentMeasure.left + o2, i2 - this.fontSizeInPixels / 3), r2.lineTo(this._currentMeasure.left + o2 + e3, i2 - this.fontSizeInPixels / 3), r2.stroke(), r2.closePath());
          }, e2.prototype._draw = function(t4, e3) {
            t4.save(), this._applyStates(t4), this._renderLines(t4), t4.restore();
          }, e2.prototype._applyStates = function(e3) {
            t3.prototype._applyStates.call(this, e3), this.outlineWidth && (e3.lineWidth = this.outlineWidth, e3.strokeStyle = this.outlineColor, e3.lineJoin = "miter", e3.miterLimit = 2);
          }, e2.prototype._breakLines = function(t4, e3) {
            var i2 = [], r2 = this.text.split("\n");
            if (this._textWrapping === m.Ellipsis)
              for (var n2 = 0, o2 = r2; n2 < o2.length; n2++) {
                var s2 = o2[n2];
                i2.push(this._parseLineEllipsis(s2, t4, e3));
              }
            else if (this._textWrapping === m.WordWrap)
              for (var a2 = 0, h2 = r2; a2 < h2.length; a2++) {
                s2 = h2[a2];
                i2.push.apply(i2, this._parseLineWordWrap(s2, t4, e3));
              }
            else
              for (var l2 = 0, u2 = r2; l2 < u2.length; l2++) {
                s2 = u2[l2];
                i2.push(this._parseLine(s2, e3));
              }
            return i2;
          }, e2.prototype._parseLine = function(t4, e3) {
            return t4 === void 0 && (t4 = ""), { text: t4, width: e3.measureText(t4).width };
          }, e2.prototype._parseLineEllipsis = function(t4, e3, i2) {
            t4 === void 0 && (t4 = "");
            var r2 = i2.measureText(t4).width;
            r2 > e3 && (t4 += "\u2026");
            var n2 = Array.from && Array.from(t4);
            if (n2)
              for (; n2.length && r2 > e3; )
                n2.pop(), t4 = n2.join("") + "...", r2 = i2.measureText(t4).width;
            else
              for (; t4.length > 2 && r2 > e3; )
                t4 = t4.slice(0, -2) + "\u2026", r2 = i2.measureText(t4).width;
            return { text: t4, width: r2 };
          }, e2.prototype._parseLineWordWrap = function(t4, e3, i2) {
            t4 === void 0 && (t4 = "");
            for (var r2 = [], n2 = this.wordSplittingFunction ? this.wordSplittingFunction(t4) : t4.split(" "), o2 = 0, s2 = 0; s2 < n2.length; s2++) {
              var a2 = s2 > 0 ? t4 + " " + n2[s2] : n2[0], h2 = i2.measureText(a2).width;
              h2 > e3 && s2 > 0 ? (r2.push({ text: t4, width: o2 }), t4 = n2[s2], o2 = i2.measureText(t4).width) : (o2 = h2, t4 = a2);
            }
            return r2.push({ text: t4, width: o2 }), r2;
          }, e2.prototype._renderLines = function(t4) {
            var e3 = this._currentMeasure.height, i2 = 0;
            switch (this._textVerticalAlignment) {
              case f.VERTICAL_ALIGNMENT_TOP:
                i2 = this._fontOffset.ascent;
                break;
              case f.VERTICAL_ALIGNMENT_BOTTOM:
                i2 = e3 - this._fontOffset.height * (this._lines.length - 1) - this._fontOffset.descent;
                break;
              case f.VERTICAL_ALIGNMENT_CENTER:
                i2 = this._fontOffset.ascent + (e3 - this._fontOffset.height * this._lines.length) / 2;
            }
            i2 += this._currentMeasure.top;
            for (var r2 = 0; r2 < this._lines.length; r2++) {
              var n2 = this._lines[r2];
              r2 !== 0 && this._lineSpacing.internalValue !== 0 && (this._lineSpacing.isPixel ? i2 += this._lineSpacing.getValue(this._host) : i2 += this._lineSpacing.getValue(this._host) * this._height.getValueInPixel(this._host, this._cachedParentMeasure.height)), this._drawText(n2.text, n2.width, i2, t4), i2 += this._fontOffset.height;
            }
          }, e2.prototype.computeExpectedHeight = function() {
            if (this.text && this.widthInPixels) {
              var t4 = document.createElement("canvas").getContext("2d");
              if (t4) {
                this._applyStates(t4), this._fontOffset || (this._fontOffset = f._GetFontOffset(t4.font));
                var e3 = this._lines ? this._lines : this._breakLines(this.widthInPixels - this.paddingLeftInPixels - this.paddingRightInPixels, t4), i2 = this.paddingTopInPixels + this.paddingBottomInPixels + this._fontOffset.height * e3.length;
                if (e3.length > 0 && this._lineSpacing.internalValue !== 0) {
                  var r2 = 0;
                  r2 = this._lineSpacing.isPixel ? this._lineSpacing.getValue(this._host) : this._lineSpacing.getValue(this._host) * this._height.getValueInPixel(this._host, this._cachedParentMeasure.height), i2 += (e3.length - 1) * r2;
                }
                return i2;
              }
            }
            return 0;
          }, e2.prototype.dispose = function() {
            t3.prototype.dispose.call(this), this.onTextChangedObservable.clear();
          }, e2;
        }(f);
        s._TypeStore.RegisteredTypes["BABYLON.GUI.TextBlock"] = y;
        var v = function(t3) {
          function e2(i2, r2) {
            r2 === void 0 && (r2 = null);
            var n2 = t3.call(this, i2) || this;
            return n2.name = i2, n2._workingCanvas = null, n2._loaded = false, n2._stretch = e2.STRETCH_FILL, n2._autoScale = false, n2._sourceLeft = 0, n2._sourceTop = 0, n2._sourceWidth = 0, n2._sourceHeight = 0, n2._svgAttributesComputationCompleted = false, n2._isSVG = false, n2._cellWidth = 0, n2._cellHeight = 0, n2._cellId = -1, n2._populateNinePatchSlicesFromImage = false, n2._imageDataCache = { data: null, key: "" }, n2.onImageLoadedObservable = new s.Observable(), n2.onSVGAttributesComputedObservable = new s.Observable(), n2.source = r2, n2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "isLoaded", { get: function() {
            return this._loaded;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "populateNinePatchSlicesFromImage", { get: function() {
            return this._populateNinePatchSlicesFromImage;
          }, set: function(t4) {
            this._populateNinePatchSlicesFromImage !== t4 && (this._populateNinePatchSlicesFromImage = t4, this._populateNinePatchSlicesFromImage && this._loaded && this._extractNinePatchSliceDataFromImage());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "detectPointerOnOpaqueOnly", { get: function() {
            return this._detectPointerOnOpaqueOnly;
          }, set: function(t4) {
            this._detectPointerOnOpaqueOnly !== t4 && (this._detectPointerOnOpaqueOnly = t4);
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "sliceLeft", { get: function() {
            return this._sliceLeft;
          }, set: function(t4) {
            this._sliceLeft !== t4 && (this._sliceLeft = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "sliceRight", { get: function() {
            return this._sliceRight;
          }, set: function(t4) {
            this._sliceRight !== t4 && (this._sliceRight = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "sliceTop", { get: function() {
            return this._sliceTop;
          }, set: function(t4) {
            this._sliceTop !== t4 && (this._sliceTop = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "sliceBottom", { get: function() {
            return this._sliceBottom;
          }, set: function(t4) {
            this._sliceBottom !== t4 && (this._sliceBottom = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "sourceLeft", { get: function() {
            return this._sourceLeft;
          }, set: function(t4) {
            this._sourceLeft !== t4 && (this._sourceLeft = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "sourceTop", { get: function() {
            return this._sourceTop;
          }, set: function(t4) {
            this._sourceTop !== t4 && (this._sourceTop = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "sourceWidth", { get: function() {
            return this._sourceWidth;
          }, set: function(t4) {
            this._sourceWidth !== t4 && (this._sourceWidth = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "sourceHeight", { get: function() {
            return this._sourceHeight;
          }, set: function(t4) {
            this._sourceHeight !== t4 && (this._sourceHeight = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "isSVG", { get: function() {
            return this._isSVG;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "svgAttributesComputationCompleted", { get: function() {
            return this._svgAttributesComputationCompleted;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "autoScale", { get: function() {
            return this._autoScale;
          }, set: function(t4) {
            this._autoScale !== t4 && (this._autoScale = t4, t4 && this._loaded && this.synchronizeSizeWithContent());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "stretch", { get: function() {
            return this._stretch;
          }, set: function(t4) {
            this._stretch !== t4 && (this._stretch = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), e2.prototype._rotate90 = function(t4, i2) {
            i2 === void 0 && (i2 = false);
            var r2 = document.createElement("canvas"), n2 = r2.getContext("2d"), o2 = this._domImage.width, s2 = this._domImage.height;
            r2.width = s2, r2.height = o2, n2.translate(r2.width / 2, r2.height / 2), n2.rotate(t4 * Math.PI / 2), n2.drawImage(this._domImage, 0, 0, o2, s2, -o2 / 2, -s2 / 2, o2, s2);
            var a2 = r2.toDataURL("image/jpg"), h2 = new e2(this.name + "rotated", a2);
            return i2 && (h2._stretch = this._stretch, h2._autoScale = this._autoScale, h2._cellId = this._cellId, h2._cellWidth = t4 % 1 ? this._cellHeight : this._cellWidth, h2._cellHeight = t4 % 1 ? this._cellWidth : this._cellHeight), this._handleRotationForSVGImage(this, h2, t4), this._imageDataCache.data = null, h2;
          }, e2.prototype._handleRotationForSVGImage = function(t4, e3, i2) {
            var r2 = this;
            t4._isSVG && (t4._svgAttributesComputationCompleted ? (this._rotate90SourceProperties(t4, e3, i2), this._markAsDirty()) : t4.onSVGAttributesComputedObservable.addOnce(function() {
              r2._rotate90SourceProperties(t4, e3, i2), r2._markAsDirty();
            }));
          }, e2.prototype._rotate90SourceProperties = function(t4, e3, i2) {
            var r2, n2, o2 = t4.sourceLeft, s2 = t4.sourceTop, a2 = t4.domImage.width, h2 = t4.domImage.height, l2 = o2, u2 = s2, c2 = t4.sourceWidth, _2 = t4.sourceHeight;
            if (i2 != 0) {
              var d2 = i2 < 0 ? -1 : 1;
              i2 %= 4;
              for (var p2 = 0; p2 < Math.abs(i2); ++p2)
                l2 = -(s2 - h2 / 2) * d2 + h2 / 2, u2 = (o2 - a2 / 2) * d2 + a2 / 2, c2 = (r2 = [_2, c2])[0], _2 = r2[1], i2 < 0 ? u2 -= _2 : l2 -= c2, o2 = l2, s2 = u2, a2 = (n2 = [h2, a2])[0], h2 = n2[1];
            }
            e3.sourceLeft = l2, e3.sourceTop = u2, e3.sourceWidth = c2, e3.sourceHeight = _2;
          }, Object.defineProperty(e2.prototype, "domImage", { get: function() {
            return this._domImage;
          }, set: function(t4) {
            var e3 = this;
            this._domImage = t4, this._loaded = false, this._imageDataCache.data = null, this._domImage.width ? this._onImageLoaded() : this._domImage.onload = function() {
              e3._onImageLoaded();
            };
          }, enumerable: false, configurable: true }), e2.prototype._onImageLoaded = function() {
            this._imageDataCache.data = null, this._imageWidth = this._domImage.width, this._imageHeight = this._domImage.height, this._loaded = true, this._populateNinePatchSlicesFromImage && this._extractNinePatchSliceDataFromImage(), this._autoScale && this.synchronizeSizeWithContent(), this.onImageLoadedObservable.notifyObservers(this), this._markAsDirty();
          }, e2.prototype._extractNinePatchSliceDataFromImage = function() {
            this._workingCanvas || (this._workingCanvas = document.createElement("canvas"));
            var t4 = this._workingCanvas, e3 = t4.getContext("2d"), i2 = this._domImage.width, r2 = this._domImage.height;
            t4.width = i2, t4.height = r2, e3.drawImage(this._domImage, 0, 0, i2, r2);
            var n2 = e3.getImageData(0, 0, i2, r2);
            this._sliceLeft = -1, this._sliceRight = -1;
            for (var o2 = 0; o2 < i2; o2++) {
              if ((a2 = n2.data[4 * o2 + 3]) > 127 && this._sliceLeft === -1)
                this._sliceLeft = o2;
              else if (a2 < 127 && this._sliceLeft > -1) {
                this._sliceRight = o2;
                break;
              }
            }
            this._sliceTop = -1, this._sliceBottom = -1;
            for (var s2 = 0; s2 < r2; s2++) {
              var a2;
              if ((a2 = n2.data[s2 * i2 * 4 + 3]) > 127 && this._sliceTop === -1)
                this._sliceTop = s2;
              else if (a2 < 127 && this._sliceTop > -1) {
                this._sliceBottom = s2;
                break;
              }
            }
          }, Object.defineProperty(e2.prototype, "source", { set: function(t4) {
            var e3 = this;
            this._source !== t4 && (this._loaded = false, this._source = t4, this._imageDataCache.data = null, t4 && (t4 = this._svgCheck(t4)), this._domImage = document.createElement("img"), this._domImage.onload = function() {
              e3._onImageLoaded();
            }, t4 && (s.Tools.SetCorsBehavior(t4, this._domImage), this._domImage.src = t4));
          }, enumerable: false, configurable: true }), e2.prototype._svgCheck = function(t4) {
            var e3 = this;
            if (window.SVGSVGElement && t4.search(/.svg#/gi) !== -1 && t4.indexOf("#") === t4.lastIndexOf("#")) {
              this._isSVG = true;
              var i2 = t4.split("#")[0], r2 = t4.split("#")[1], n2 = document.body.querySelector('object[data="' + i2 + '"]');
              if (n2) {
                var o2 = n2.contentDocument;
                if (o2 && o2.documentElement) {
                  var s2 = o2.documentElement.getAttribute("viewBox"), a2 = Number(o2.documentElement.getAttribute("width")), h2 = Number(o2.documentElement.getAttribute("height"));
                  if (o2.getElementById(r2) && s2 && a2 && h2)
                    return this._getSVGAttribs(n2, r2), t4;
                }
                n2.addEventListener("load", function() {
                  e3._getSVGAttribs(n2, r2);
                });
              } else {
                var l2 = document.createElement("object");
                l2.data = i2, l2.type = "image/svg+xml", l2.width = "0%", l2.height = "0%", document.body.appendChild(l2), l2.onload = function() {
                  var t5 = document.body.querySelector('object[data="' + i2 + '"]');
                  t5 && e3._getSVGAttribs(t5, r2);
                };
              }
              return i2;
            }
            return t4;
          }, e2.prototype._getSVGAttribs = function(t4, e3) {
            var i2 = t4.contentDocument;
            if (i2 && i2.documentElement) {
              var r2 = i2.documentElement.getAttribute("viewBox"), n2 = Number(i2.documentElement.getAttribute("width")), o2 = Number(i2.documentElement.getAttribute("height")), s2 = i2.getElementById(e3);
              if (r2 && n2 && o2 && s2) {
                var a2 = Number(r2.split(" ")[2]), h2 = Number(r2.split(" ")[3]), l2 = s2.getBBox(), u2 = 1, c2 = 1, _2 = 0, d2 = 0;
                s2.transform && s2.transform.baseVal.consolidate() && (u2 = s2.transform.baseVal.consolidate().matrix.a, c2 = s2.transform.baseVal.consolidate().matrix.d, _2 = s2.transform.baseVal.consolidate().matrix.e, d2 = s2.transform.baseVal.consolidate().matrix.f), this.sourceLeft = (u2 * l2.x + _2) * n2 / a2, this.sourceTop = (c2 * l2.y + d2) * o2 / h2, this.sourceWidth = l2.width * u2 * (n2 / a2), this.sourceHeight = l2.height * c2 * (o2 / h2), this._svgAttributesComputationCompleted = true, this.onSVGAttributesComputedObservable.notifyObservers(this);
              }
            }
          }, Object.defineProperty(e2.prototype, "cellWidth", { get: function() {
            return this._cellWidth;
          }, set: function(t4) {
            this._cellWidth !== t4 && (this._cellWidth = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "cellHeight", { get: function() {
            return this._cellHeight;
          }, set: function(t4) {
            this._cellHeight !== t4 && (this._cellHeight = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "cellId", { get: function() {
            return this._cellId;
          }, set: function(t4) {
            this._cellId !== t4 && (this._cellId = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), e2.prototype.contains = function(e3, i2) {
            if (!t3.prototype.contains.call(this, e3, i2))
              return false;
            if (!this._detectPointerOnOpaqueOnly || !this._workingCanvas)
              return true;
            var r2 = 0 | this._currentMeasure.width, n2 = 0 | this._currentMeasure.height, o2 = r2 + "_" + n2, s2 = this._imageDataCache.data;
            if (!s2 || this._imageDataCache.key !== o2) {
              var a2 = this._workingCanvas.getContext("2d");
              this._imageDataCache.data = s2 = a2.getImageData(0, 0, r2, n2).data, this._imageDataCache.key = o2;
            }
            return s2[4 * ((e3 = e3 - this._currentMeasure.left | 0) + (i2 = i2 - this._currentMeasure.top | 0) * r2) + 3] > 0;
          }, e2.prototype._getTypeName = function() {
            return "Image";
          }, e2.prototype.synchronizeSizeWithContent = function() {
            this._loaded && (this.width = this._domImage.width + "px", this.height = this._domImage.height + "px");
          }, e2.prototype._processMeasures = function(i2, r2) {
            if (this._loaded)
              switch (this._stretch) {
                case e2.STRETCH_NONE:
                case e2.STRETCH_FILL:
                case e2.STRETCH_UNIFORM:
                case e2.STRETCH_NINE_PATCH:
                  break;
                case e2.STRETCH_EXTEND:
                  this._autoScale && this.synchronizeSizeWithContent(), this.parent && this.parent.parent && (this.parent.adaptWidthToChildren = true, this.parent.adaptHeightToChildren = true);
              }
            t3.prototype._processMeasures.call(this, i2, r2);
          }, e2.prototype._prepareWorkingCanvasForOpaqueDetection = function() {
            if (this._detectPointerOnOpaqueOnly) {
              this._workingCanvas || (this._workingCanvas = document.createElement("canvas"));
              var t4 = this._workingCanvas, e3 = this._currentMeasure.width, i2 = this._currentMeasure.height, r2 = t4.getContext("2d");
              t4.width = e3, t4.height = i2, r2.clearRect(0, 0, e3, i2);
            }
          }, e2.prototype._drawImage = function(t4, e3, i2, r2, n2, o2, s2, a2, h2) {
            (t4.drawImage(this._domImage, e3, i2, r2, n2, o2, s2, a2, h2), this._detectPointerOnOpaqueOnly) && (t4 = this._workingCanvas.getContext("2d")).drawImage(this._domImage, e3, i2, r2, n2, o2 - this._currentMeasure.left, s2 - this._currentMeasure.top, a2, h2);
          }, e2.prototype._draw = function(t4) {
            var i2, r2, n2, o2;
            if (t4.save(), (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (t4.shadowColor = this.shadowColor, t4.shadowBlur = this.shadowBlur, t4.shadowOffsetX = this.shadowOffsetX, t4.shadowOffsetY = this.shadowOffsetY), this.cellId == -1)
              i2 = this._sourceLeft, r2 = this._sourceTop, n2 = this._sourceWidth ? this._sourceWidth : this._imageWidth, o2 = this._sourceHeight ? this._sourceHeight : this._imageHeight;
            else {
              var s2 = this._domImage.naturalWidth / this.cellWidth, a2 = this.cellId / s2 >> 0, h2 = this.cellId % s2;
              i2 = this.cellWidth * h2, r2 = this.cellHeight * a2, n2 = this.cellWidth, o2 = this.cellHeight;
            }
            if (this._prepareWorkingCanvasForOpaqueDetection(), this._applyStates(t4), this._loaded)
              switch (this._stretch) {
                case e2.STRETCH_NONE:
                case e2.STRETCH_FILL:
                  this._drawImage(t4, i2, r2, n2, o2, this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height);
                  break;
                case e2.STRETCH_UNIFORM:
                  var l2 = this._currentMeasure.width / n2, u2 = this._currentMeasure.height / o2, c2 = Math.min(l2, u2), _2 = (this._currentMeasure.width - n2 * c2) / 2, d2 = (this._currentMeasure.height - o2 * c2) / 2;
                  this._drawImage(t4, i2, r2, n2, o2, this._currentMeasure.left + _2, this._currentMeasure.top + d2, n2 * c2, o2 * c2);
                  break;
                case e2.STRETCH_EXTEND:
                  this._drawImage(t4, i2, r2, n2, o2, this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height);
                  break;
                case e2.STRETCH_NINE_PATCH:
                  this._renderNinePatch(t4);
              }
            t4.restore();
          }, e2.prototype._renderCornerPatch = function(t4, e3, i2, r2, n2, o2, s2) {
            this._drawImage(t4, e3, i2, r2, n2, this._currentMeasure.left + o2, this._currentMeasure.top + s2, r2, n2);
          }, e2.prototype._renderNinePatch = function(t4) {
            var e3 = this._imageHeight, i2 = this._sliceLeft, r2 = this._sliceTop, n2 = this._imageHeight - this._sliceBottom, o2 = this._imageWidth - this._sliceRight, s2 = 0, a2 = 0;
            this._populateNinePatchSlicesFromImage && (s2 = 1, a2 = 1, e3 -= 2, i2 -= 1, r2 -= 1, n2 -= 1, o2 -= 1);
            var h2 = this._sliceRight - this._sliceLeft, l2 = this._currentMeasure.width - o2 - this.sliceLeft, u2 = this._currentMeasure.height - e3 + this._sliceBottom;
            this._renderCornerPatch(t4, s2, a2, i2, r2, 0, 0), this._renderCornerPatch(t4, s2, this._sliceBottom, i2, e3 - this._sliceBottom, 0, u2), this._renderCornerPatch(t4, this._sliceRight, a2, o2, r2, this._currentMeasure.width - o2, 0), this._renderCornerPatch(t4, this._sliceRight, this._sliceBottom, o2, e3 - this._sliceBottom, this._currentMeasure.width - o2, u2), this._drawImage(t4, this._sliceLeft, this._sliceTop, h2, this._sliceBottom - this._sliceTop, this._currentMeasure.left + i2, this._currentMeasure.top + r2, l2, u2 - r2), this._drawImage(t4, s2, this._sliceTop, i2, this._sliceBottom - this._sliceTop, this._currentMeasure.left, this._currentMeasure.top + r2, i2, u2 - r2), this._drawImage(t4, this._sliceRight, this._sliceTop, i2, this._sliceBottom - this._sliceTop, this._currentMeasure.left + this._currentMeasure.width - o2, this._currentMeasure.top + r2, i2, u2 - r2), this._drawImage(t4, this._sliceLeft, a2, h2, r2, this._currentMeasure.left + i2, this._currentMeasure.top, l2, r2), this._drawImage(t4, this._sliceLeft, this._sliceBottom, h2, n2, this._currentMeasure.left + i2, this._currentMeasure.top + u2, l2, n2);
          }, e2.prototype.dispose = function() {
            t3.prototype.dispose.call(this), this.onImageLoadedObservable.clear(), this.onSVGAttributesComputedObservable.clear();
          }, e2.STRETCH_NONE = 0, e2.STRETCH_FILL = 1, e2.STRETCH_UNIFORM = 2, e2.STRETCH_EXTEND = 3, e2.STRETCH_NINE_PATCH = 4, e2;
        }(f);
        s._TypeStore.RegisteredTypes["BABYLON.GUI.Image"] = v;
        var O = function(t3) {
          function e2(e3) {
            var i2 = t3.call(this, e3) || this;
            i2.name = e3, i2.delegatePickingToChildren = false, i2.thickness = 1, i2.isPointerBlocker = true;
            var r2 = null;
            return i2.pointerEnterAnimation = function() {
              r2 = i2.alpha, i2.alpha -= 0.1;
            }, i2.pointerOutAnimation = function() {
              r2 !== null && (i2.alpha = r2);
            }, i2.pointerDownAnimation = function() {
              i2.scaleX -= 0.05, i2.scaleY -= 0.05;
            }, i2.pointerUpAnimation = function() {
              i2.scaleX += 0.05, i2.scaleY += 0.05;
            }, i2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "image", { get: function() {
            return this._image;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "textBlock", { get: function() {
            return this._textBlock;
          }, enumerable: false, configurable: true }), e2.prototype._getTypeName = function() {
            return "Button";
          }, e2.prototype._processPicking = function(e3, i2, r2, n2, o2, s2, a2, h2) {
            if (!this._isEnabled || !this.isHitTestVisible || !this.isVisible || this.notRenderable)
              return false;
            if (!t3.prototype.contains.call(this, e3, i2))
              return false;
            if (this.delegatePickingToChildren) {
              for (var l2 = false, u2 = this._children.length - 1; u2 >= 0; u2--) {
                var c2 = this._children[u2];
                if (c2.isEnabled && c2.isHitTestVisible && c2.isVisible && !c2.notRenderable && c2.contains(e3, i2)) {
                  l2 = true;
                  break;
                }
              }
              if (!l2)
                return false;
            }
            return this._processObservables(n2, e3, i2, r2, o2, s2, a2, h2), true;
          }, e2.prototype._onPointerEnter = function(e3, i2) {
            return !!t3.prototype._onPointerEnter.call(this, e3, i2) && (this.pointerEnterAnimation && this.pointerEnterAnimation(), true);
          }, e2.prototype._onPointerOut = function(e3, i2, r2) {
            r2 === void 0 && (r2 = false), this.pointerOutAnimation && this.pointerOutAnimation(), t3.prototype._onPointerOut.call(this, e3, i2, r2);
          }, e2.prototype._onPointerDown = function(e3, i2, r2, n2, o2) {
            return !!t3.prototype._onPointerDown.call(this, e3, i2, r2, n2, o2) && (this.pointerDownAnimation && this.pointerDownAnimation(), true);
          }, e2.prototype._onPointerUp = function(e3, i2, r2, n2, o2, s2) {
            this.pointerUpAnimation && this.pointerUpAnimation(), t3.prototype._onPointerUp.call(this, e3, i2, r2, n2, o2, s2);
          }, e2.CreateImageButton = function(t4, i2, r2) {
            var n2 = new e2(t4), o2 = new y(t4 + "_button", i2);
            o2.textWrapping = true, o2.textHorizontalAlignment = f.HORIZONTAL_ALIGNMENT_CENTER, o2.paddingLeft = "20%", n2.addControl(o2);
            var s2 = new v(t4 + "_icon", r2);
            return s2.width = "20%", s2.stretch = v.STRETCH_UNIFORM, s2.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, n2.addControl(s2), n2._image = s2, n2._textBlock = o2, n2;
          }, e2.CreateImageOnlyButton = function(t4, i2) {
            var r2 = new e2(t4), n2 = new v(t4 + "_icon", i2);
            return n2.stretch = v.STRETCH_FILL, n2.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, r2.addControl(n2), r2._image = n2, r2;
          }, e2.CreateSimpleButton = function(t4, i2) {
            var r2 = new e2(t4), n2 = new y(t4 + "_button", i2);
            return n2.textWrapping = true, n2.textHorizontalAlignment = f.HORIZONTAL_ALIGNMENT_CENTER, r2.addControl(n2), r2._textBlock = n2, r2;
          }, e2.CreateImageWithCenterTextButton = function(t4, i2, r2) {
            var n2 = new e2(t4), o2 = new v(t4 + "_icon", r2);
            o2.stretch = v.STRETCH_FILL, n2.addControl(o2);
            var s2 = new y(t4 + "_button", i2);
            return s2.textWrapping = true, s2.textHorizontalAlignment = f.HORIZONTAL_ALIGNMENT_CENTER, n2.addControl(s2), n2._image = o2, n2._textBlock = s2, n2;
          }, e2;
        }(b);
        s._TypeStore.RegisteredTypes["BABYLON.GUI.Button"] = O;
        var C = function(t3) {
          function e2(e3) {
            var i2 = t3.call(this, e3) || this;
            return i2.name = e3, i2._isVertical = true, i2._manualWidth = false, i2._manualHeight = false, i2._doNotTrackManualChanges = false, i2.ignoreLayoutWarnings = false, i2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "isVertical", { get: function() {
            return this._isVertical;
          }, set: function(t4) {
            this._isVertical !== t4 && (this._isVertical = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "width", { get: function() {
            return this._width.toString(this._host);
          }, set: function(t4) {
            this._doNotTrackManualChanges || (this._manualWidth = true), this._width.toString(this._host) !== t4 && this._width.fromString(t4) && this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "height", { get: function() {
            return this._height.toString(this._host);
          }, set: function(t4) {
            this._doNotTrackManualChanges || (this._manualHeight = true), this._height.toString(this._host) !== t4 && this._height.fromString(t4) && this._markAsDirty();
          }, enumerable: false, configurable: true }), e2.prototype._getTypeName = function() {
            return "StackPanel";
          }, e2.prototype._preMeasure = function(e3, i2) {
            for (var r2 = 0, n2 = this._children; r2 < n2.length; r2++) {
              var o2 = n2[r2];
              this._isVertical ? o2.verticalAlignment = f.VERTICAL_ALIGNMENT_TOP : o2.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT;
            }
            t3.prototype._preMeasure.call(this, e3, i2);
          }, e2.prototype._additionalProcessing = function(e3, i2) {
            t3.prototype._additionalProcessing.call(this, e3, i2), this._measureForChildren.copyFrom(e3), this._measureForChildren.left = this._currentMeasure.left, this._measureForChildren.top = this._currentMeasure.top, this.isVertical && !this._manualWidth || (this._measureForChildren.width = this._currentMeasure.width), (this.isVertical || this._manualHeight) && (this._measureForChildren.height = this._currentMeasure.height);
          }, e2.prototype._postMeasure = function() {
            for (var e3 = 0, i2 = 0, r2 = 0, n2 = this._children; r2 < n2.length; r2++) {
              var o2 = n2[r2];
              o2.isVisible && !o2.notRenderable && (this._isVertical ? (o2.top !== i2 + "px" && (o2.top = i2 + "px", this._rebuildLayout = true, o2._top.ignoreAdaptiveScaling = true), o2._height.isPercentage && !o2._automaticSize ? this.ignoreLayoutWarnings || s.Tools.Warn("Control (Name:" + o2.name + ", UniqueId:" + o2.uniqueId + ") is using height in percentage mode inside a vertical StackPanel") : i2 += o2._currentMeasure.height + o2.paddingTopInPixels + o2.paddingBottomInPixels) : (o2.left !== e3 + "px" && (o2.left = e3 + "px", this._rebuildLayout = true, o2._left.ignoreAdaptiveScaling = true), o2._width.isPercentage && !o2._automaticSize ? this.ignoreLayoutWarnings || s.Tools.Warn("Control (Name:" + o2.name + ", UniqueId:" + o2.uniqueId + ") is using width in percentage mode inside a horizontal StackPanel") : e3 += o2._currentMeasure.width + o2.paddingLeftInPixels + o2.paddingRightInPixels));
            }
            e3 += this.paddingLeftInPixels + this.paddingRightInPixels, i2 += this.paddingTopInPixels + this.paddingBottomInPixels, this._doNotTrackManualChanges = true;
            var a2 = false, h2 = false;
            if (!this._manualHeight && this._isVertical) {
              var l2 = this.height;
              this.height = i2 + "px", h2 = l2 !== this.height || !this._height.ignoreAdaptiveScaling;
            }
            if (!this._manualWidth && !this._isVertical) {
              var u2 = this.width;
              this.width = e3 + "px", a2 = u2 !== this.width || !this._width.ignoreAdaptiveScaling;
            }
            h2 && (this._height.ignoreAdaptiveScaling = true), a2 && (this._width.ignoreAdaptiveScaling = true), this._doNotTrackManualChanges = false, (a2 || h2) && (this._rebuildLayout = true), t3.prototype._postMeasure.call(this);
          }, e2;
        }(g);
        s._TypeStore.RegisteredTypes["BABYLON.GUI.StackPanel"] = C;
        var T = function(t3) {
          function e2(e3) {
            var i2 = t3.call(this, e3) || this;
            return i2.name = e3, i2._isChecked = false, i2._background = "black", i2._checkSizeRatio = 0.8, i2._thickness = 1, i2.onIsCheckedChangedObservable = new s.Observable(), i2.isPointerBlocker = true, i2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "thickness", { get: function() {
            return this._thickness;
          }, set: function(t4) {
            this._thickness !== t4 && (this._thickness = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "checkSizeRatio", { get: function() {
            return this._checkSizeRatio;
          }, set: function(t4) {
            t4 = Math.max(Math.min(1, t4), 0), this._checkSizeRatio !== t4 && (this._checkSizeRatio = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "background", { get: function() {
            return this._background;
          }, set: function(t4) {
            this._background !== t4 && (this._background = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "isChecked", { get: function() {
            return this._isChecked;
          }, set: function(t4) {
            this._isChecked !== t4 && (this._isChecked = t4, this._markAsDirty(), this.onIsCheckedChangedObservable.notifyObservers(t4));
          }, enumerable: false, configurable: true }), e2.prototype._getTypeName = function() {
            return "Checkbox";
          }, e2.prototype._draw = function(t4, e3) {
            t4.save(), this._applyStates(t4);
            var i2 = this._currentMeasure.width - this._thickness, r2 = this._currentMeasure.height - this._thickness;
            if ((this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (t4.shadowColor = this.shadowColor, t4.shadowBlur = this.shadowBlur, t4.shadowOffsetX = this.shadowOffsetX, t4.shadowOffsetY = this.shadowOffsetY), t4.fillStyle = this._isEnabled ? this._background : this._disabledColor, t4.fillRect(this._currentMeasure.left + this._thickness / 2, this._currentMeasure.top + this._thickness / 2, i2, r2), (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (t4.shadowBlur = 0, t4.shadowOffsetX = 0, t4.shadowOffsetY = 0), this._isChecked) {
              t4.fillStyle = this._isEnabled ? this.color : this._disabledColorItem;
              var n2 = i2 * this._checkSizeRatio, o2 = r2 * this._checkSizeRatio;
              t4.fillRect(this._currentMeasure.left + this._thickness / 2 + (i2 - n2) / 2, this._currentMeasure.top + this._thickness / 2 + (r2 - o2) / 2, n2, o2);
            }
            t4.strokeStyle = this.color, t4.lineWidth = this._thickness, t4.strokeRect(this._currentMeasure.left + this._thickness / 2, this._currentMeasure.top + this._thickness / 2, i2, r2), t4.restore();
          }, e2.prototype._onPointerDown = function(e3, i2, r2, n2, o2) {
            return !!t3.prototype._onPointerDown.call(this, e3, i2, r2, n2, o2) && (this.isChecked = !this.isChecked, true);
          }, e2.AddCheckBoxWithHeader = function(t4, i2) {
            var r2 = new C();
            r2.isVertical = false, r2.height = "30px";
            var n2 = new e2();
            n2.width = "20px", n2.height = "20px", n2.isChecked = true, n2.color = "green", n2.onIsCheckedChangedObservable.add(i2), r2.addControl(n2);
            var o2 = new y();
            return o2.text = t4, o2.width = "180px", o2.paddingLeft = "5px", o2.textHorizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, o2.color = "white", r2.addControl(o2), r2;
          }, e2;
        }(f);
        s._TypeStore.RegisteredTypes["BABYLON.GUI.Checkbox"] = T;
        var w = function() {
          function t3() {
          }
          return Object.defineProperty(t3.prototype, "text", { get: function() {
            return this._characters ? this._characters.join("") : this._text;
          }, set: function(t4) {
            this._text = t4, this._characters = Array.from && Array.from(t4);
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "length", { get: function() {
            return this._characters ? this._characters.length : this._text.length;
          }, enumerable: false, configurable: true }), t3.prototype.removePart = function(t4, e2, i2) {
            var r2;
            if (this._text = this._text.slice(0, t4) + (i2 || "") + this._text.slice(e2), this._characters) {
              var n2 = i2 ? Array.from(i2) : [];
              (r2 = this._characters).splice.apply(r2, function() {
                for (var t5 = 0, e3 = 0, i3 = arguments.length; e3 < i3; e3++)
                  t5 += arguments[e3].length;
                var r3 = Array(t5), n3 = 0;
                for (e3 = 0; e3 < i3; e3++)
                  for (var o2 = arguments[e3], s2 = 0, a2 = o2.length; s2 < a2; s2++, n3++)
                    r3[n3] = o2[s2];
                return r3;
              }([t4, e2 - t4], n2));
            }
          }, t3.prototype.charAt = function(t4) {
            return this._characters ? this._characters[t4] : this._text.charAt(t4);
          }, t3.prototype.substr = function(t4, e2) {
            if (this._characters) {
              t4 = isNaN(t4) ? 0 : t4 >= 0 ? Math.min(t4, this._characters.length) : this._characters.length + Math.max(t4, -this._characters.length), e2 === void 0 ? e2 = this._characters.length - t4 : (isNaN(e2) || e2 < 0) && (e2 = 0);
              for (var i2 = []; --e2 >= 0; )
                i2[e2] = this._characters[t4 + e2];
              return i2.join("");
            }
            return this._text.substr(t4, e2);
          }, t3.prototype.substring = function(t4, e2) {
            if (this._characters) {
              isNaN(t4) ? t4 = 0 : t4 > this._characters.length ? t4 = this._characters.length : t4 < 0 && (t4 = 0), e2 === void 0 ? e2 = this._characters.length : isNaN(e2) ? e2 = 0 : e2 > this._characters.length ? e2 = this._characters.length : e2 < 0 && (e2 = 0);
              for (var i2 = [], r2 = 0; t4 < e2; )
                i2[r2++] = this._characters[t4++];
              return i2.join("");
            }
            return this._text.substring(t4, e2);
          }, t3.prototype.isWord = function(t4) {
            var e2 = /\w/g;
            return this._characters ? this._characters[t4].search(e2) !== -1 : this._text.search(e2) !== -1;
          }, t3;
        }(), x = function(t3) {
          function e2(e3, i2) {
            i2 === void 0 && (i2 = "");
            var r2 = t3.call(this, e3) || this;
            return r2.name = e3, r2._placeholderText = "", r2._background = "#222222", r2._focusedBackground = "#000000", r2._focusedColor = "white", r2._placeholderColor = "gray", r2._thickness = 1, r2._margin = new a(10, a.UNITMODE_PIXEL), r2._autoStretchWidth = true, r2._maxWidth = new a(1, a.UNITMODE_PERCENTAGE, false), r2._isFocused = false, r2._blinkIsEven = false, r2._cursorOffset = 0, r2._deadKey = false, r2._addKey = true, r2._currentKey = "", r2._isTextHighlightOn = false, r2._textHighlightColor = "#d5e0ff", r2._highligherOpacity = 0.4, r2._highlightedText = "", r2._startHighlightIndex = 0, r2._endHighlightIndex = 0, r2._cursorIndex = -1, r2._onFocusSelectAll = false, r2._isPointerDown = false, r2.promptMessage = "Please enter text:", r2.disableMobilePrompt = false, r2.onTextChangedObservable = new s.Observable(), r2.onBeforeKeyAddObservable = new s.Observable(), r2.onFocusObservable = new s.Observable(), r2.onBlurObservable = new s.Observable(), r2.onTextHighlightObservable = new s.Observable(), r2.onTextCopyObservable = new s.Observable(), r2.onTextCutObservable = new s.Observable(), r2.onTextPasteObservable = new s.Observable(), r2.onKeyboardEventProcessedObservable = new s.Observable(), r2.text = i2, r2.isPointerBlocker = true, r2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "maxWidth", { get: function() {
            return this._maxWidth.toString(this._host);
          }, set: function(t4) {
            this._maxWidth.toString(this._host) !== t4 && this._maxWidth.fromString(t4) && this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "maxWidthInPixels", { get: function() {
            return this._maxWidth.getValueInPixel(this._host, this._cachedParentMeasure.width);
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "highligherOpacity", { get: function() {
            return this._highligherOpacity;
          }, set: function(t4) {
            this._highligherOpacity !== t4 && (this._highligherOpacity = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "onFocusSelectAll", { get: function() {
            return this._onFocusSelectAll;
          }, set: function(t4) {
            this._onFocusSelectAll !== t4 && (this._onFocusSelectAll = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "textHighlightColor", { get: function() {
            return this._textHighlightColor;
          }, set: function(t4) {
            this._textHighlightColor !== t4 && (this._textHighlightColor = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "margin", { get: function() {
            return this._margin.toString(this._host);
          }, set: function(t4) {
            this._margin.toString(this._host) !== t4 && this._margin.fromString(t4) && this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "marginInPixels", { get: function() {
            return this._margin.getValueInPixel(this._host, this._cachedParentMeasure.width);
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "autoStretchWidth", { get: function() {
            return this._autoStretchWidth;
          }, set: function(t4) {
            this._autoStretchWidth !== t4 && (this._autoStretchWidth = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "thickness", { get: function() {
            return this._thickness;
          }, set: function(t4) {
            this._thickness !== t4 && (this._thickness = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "focusedBackground", { get: function() {
            return this._focusedBackground;
          }, set: function(t4) {
            this._focusedBackground !== t4 && (this._focusedBackground = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "focusedColor", { get: function() {
            return this._focusedColor;
          }, set: function(t4) {
            this._focusedColor !== t4 && (this._focusedColor = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "background", { get: function() {
            return this._background;
          }, set: function(t4) {
            this._background !== t4 && (this._background = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "placeholderColor", { get: function() {
            return this._placeholderColor;
          }, set: function(t4) {
            this._placeholderColor !== t4 && (this._placeholderColor = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "placeholderText", { get: function() {
            return this._placeholderText;
          }, set: function(t4) {
            this._placeholderText !== t4 && (this._placeholderText = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "deadKey", { get: function() {
            return this._deadKey;
          }, set: function(t4) {
            this._deadKey = t4;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "highlightedText", { get: function() {
            return this._highlightedText;
          }, set: function(t4) {
            this._highlightedText !== t4 && (this._highlightedText = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "addKey", { get: function() {
            return this._addKey;
          }, set: function(t4) {
            this._addKey = t4;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "currentKey", { get: function() {
            return this._currentKey;
          }, set: function(t4) {
            this._currentKey = t4;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "text", { get: function() {
            return this._textWrapper.text;
          }, set: function(t4) {
            var e3 = t4.toString();
            this._textWrapper || (this._textWrapper = new w()), this._textWrapper.text !== e3 && (this._textWrapper.text = e3, this._textHasChanged());
          }, enumerable: false, configurable: true }), e2.prototype._textHasChanged = function() {
            this._markAsDirty(), this.onTextChangedObservable.notifyObservers(this);
          }, Object.defineProperty(e2.prototype, "width", { get: function() {
            return this._width.toString(this._host);
          }, set: function(t4) {
            this._width.toString(this._host) !== t4 && (this._width.fromString(t4) && this._markAsDirty(), this.autoStretchWidth = false);
          }, enumerable: false, configurable: true }), e2.prototype.onBlur = function() {
            this._isFocused = false, this._scrollLeft = null, this._cursorOffset = 0, clearTimeout(this._blinkTimeout), this._markAsDirty(), this.onBlurObservable.notifyObservers(this), this._host.unRegisterClipboardEvents(), this._onClipboardObserver && this._host.onClipboardObservable.remove(this._onClipboardObserver);
            var t4 = this._host.getScene();
            this._onPointerDblTapObserver && t4 && t4.onPointerObservable.remove(this._onPointerDblTapObserver);
          }, e2.prototype.onFocus = function() {
            var t4 = this;
            if (this._isEnabled) {
              if (this._scrollLeft = null, this._isFocused = true, this._blinkIsEven = false, this._cursorOffset = 0, this._markAsDirty(), this.onFocusObservable.notifyObservers(this), navigator.userAgent.indexOf("Mobile") !== -1 && !this.disableMobilePrompt) {
                var e3 = prompt(this.promptMessage);
                return e3 !== null && (this.text = e3), void (this._host.focusedControl = null);
              }
              this._host.registerClipboardEvents(), this._onClipboardObserver = this._host.onClipboardObservable.add(function(e4) {
                switch (e4.type) {
                  case s.ClipboardEventTypes.COPY:
                    t4._onCopyText(e4.event), t4.onTextCopyObservable.notifyObservers(t4);
                    break;
                  case s.ClipboardEventTypes.CUT:
                    t4._onCutText(e4.event), t4.onTextCutObservable.notifyObservers(t4);
                    break;
                  case s.ClipboardEventTypes.PASTE:
                    t4._onPasteText(e4.event), t4.onTextPasteObservable.notifyObservers(t4);
                    break;
                  default:
                    return;
                }
              });
              var i2 = this._host.getScene();
              i2 && (this._onPointerDblTapObserver = i2.onPointerObservable.add(function(e4) {
                t4._isFocused && e4.type === s.PointerEventTypes.POINTERDOUBLETAP && t4._processDblClick(e4);
              })), this._onFocusSelectAll && this._selectAllText();
            }
          }, e2.prototype._getTypeName = function() {
            return "InputText";
          }, e2.prototype.keepsFocusWith = function() {
            return this._connectedVirtualKeyboard ? [this._connectedVirtualKeyboard] : null;
          }, e2.prototype.processKey = function(t4, e3, i2) {
            if (!i2 || !i2.ctrlKey && !i2.metaKey || t4 !== 67 && t4 !== 86 && t4 !== 88) {
              if (i2 && (i2.ctrlKey || i2.metaKey) && t4 === 65)
                return this._selectAllText(), void i2.preventDefault();
              switch (t4) {
                case 32:
                  e3 = " ";
                  break;
                case 191:
                  i2 && i2.preventDefault();
                  break;
                case 8:
                  if (this._textWrapper.text && this._textWrapper.length > 0) {
                    if (this._isTextHighlightOn)
                      return this._textWrapper.removePart(this._startHighlightIndex, this._endHighlightIndex), this._textHasChanged(), this._isTextHighlightOn = false, this._cursorOffset = this._textWrapper.length - this._startHighlightIndex, this._blinkIsEven = false, void (i2 && i2.preventDefault());
                    if (this._cursorOffset === 0)
                      this.text = this._textWrapper.substr(0, this._textWrapper.length - 1);
                    else
                      (r2 = this._textWrapper.length - this._cursorOffset) > 0 && (this._textWrapper.removePart(r2 - 1, r2), this._textHasChanged());
                  }
                  return void (i2 && i2.preventDefault());
                case 46:
                  if (this._isTextHighlightOn)
                    return this._textWrapper.removePart(this._startHighlightIndex, this._endHighlightIndex), this._textHasChanged(), this._isTextHighlightOn = false, this._cursorOffset = this._textWrapper.length - this._startHighlightIndex, void (i2 && i2.preventDefault());
                  if (this._textWrapper.text && this._textWrapper.length > 0 && this._cursorOffset > 0) {
                    var r2 = this._textWrapper.length - this._cursorOffset;
                    this._textWrapper.removePart(r2, r2 + 1), this._textHasChanged(), this._cursorOffset--;
                  }
                  return void (i2 && i2.preventDefault());
                case 13:
                  return this._host.focusedControl = null, void (this._isTextHighlightOn = false);
                case 35:
                  return this._cursorOffset = 0, this._blinkIsEven = false, this._isTextHighlightOn = false, void this._markAsDirty();
                case 36:
                  return this._cursorOffset = this._textWrapper.length, this._blinkIsEven = false, this._isTextHighlightOn = false, void this._markAsDirty();
                case 37:
                  if (this._cursorOffset++, this._cursorOffset > this._textWrapper.length && (this._cursorOffset = this._textWrapper.length), i2 && i2.shiftKey) {
                    if (this._blinkIsEven = false, i2.ctrlKey || i2.metaKey) {
                      if (!this._isTextHighlightOn) {
                        if (this._textWrapper.length === this._cursorOffset)
                          return;
                        this._endHighlightIndex = this._textWrapper.length - this._cursorOffset + 1;
                      }
                      return this._startHighlightIndex = 0, this._cursorIndex = this._textWrapper.length - this._endHighlightIndex, this._cursorOffset = this._textWrapper.length, this._isTextHighlightOn = true, void this._markAsDirty();
                    }
                    return this._isTextHighlightOn ? this._cursorIndex === -1 && (this._cursorIndex = this._textWrapper.length - this._endHighlightIndex, this._cursorOffset = this._startHighlightIndex === 0 ? this._textWrapper.length : this._textWrapper.length - this._startHighlightIndex + 1) : (this._isTextHighlightOn = true, this._cursorIndex = this._cursorOffset >= this._textWrapper.length ? this._textWrapper.length : this._cursorOffset - 1), this._cursorIndex < this._cursorOffset ? (this._endHighlightIndex = this._textWrapper.length - this._cursorIndex, this._startHighlightIndex = this._textWrapper.length - this._cursorOffset) : this._cursorIndex > this._cursorOffset ? (this._endHighlightIndex = this._textWrapper.length - this._cursorOffset, this._startHighlightIndex = this._textWrapper.length - this._cursorIndex) : this._isTextHighlightOn = false, void this._markAsDirty();
                  }
                  return this._isTextHighlightOn && (this._cursorOffset = this._textWrapper.length - this._startHighlightIndex, this._isTextHighlightOn = false), i2 && (i2.ctrlKey || i2.metaKey) && (this._cursorOffset = this._textWrapper.length, i2.preventDefault()), this._blinkIsEven = false, this._isTextHighlightOn = false, this._cursorIndex = -1, void this._markAsDirty();
                case 39:
                  if (this._cursorOffset--, this._cursorOffset < 0 && (this._cursorOffset = 0), i2 && i2.shiftKey) {
                    if (this._blinkIsEven = false, i2.ctrlKey || i2.metaKey) {
                      if (!this._isTextHighlightOn) {
                        if (this._cursorOffset === 0)
                          return;
                        this._startHighlightIndex = this._textWrapper.length - this._cursorOffset - 1;
                      }
                      return this._endHighlightIndex = this._textWrapper.length, this._isTextHighlightOn = true, this._cursorIndex = this._textWrapper.length - this._startHighlightIndex, this._cursorOffset = 0, void this._markAsDirty();
                    }
                    return this._isTextHighlightOn ? this._cursorIndex === -1 && (this._cursorIndex = this._textWrapper.length - this._startHighlightIndex, this._cursorOffset = this._textWrapper.length === this._endHighlightIndex ? 0 : this._textWrapper.length - this._endHighlightIndex - 1) : (this._isTextHighlightOn = true, this._cursorIndex = this._cursorOffset <= 0 ? 0 : this._cursorOffset + 1), this._cursorIndex < this._cursorOffset ? (this._endHighlightIndex = this._textWrapper.length - this._cursorIndex, this._startHighlightIndex = this._textWrapper.length - this._cursorOffset) : this._cursorIndex > this._cursorOffset ? (this._endHighlightIndex = this._textWrapper.length - this._cursorOffset, this._startHighlightIndex = this._textWrapper.length - this._cursorIndex) : this._isTextHighlightOn = false, void this._markAsDirty();
                  }
                  return this._isTextHighlightOn && (this._cursorOffset = this._textWrapper.length - this._endHighlightIndex, this._isTextHighlightOn = false), i2 && (i2.ctrlKey || i2.metaKey) && (this._cursorOffset = 0, i2.preventDefault()), this._blinkIsEven = false, this._isTextHighlightOn = false, this._cursorIndex = -1, void this._markAsDirty();
                case 222:
                  i2 && i2.preventDefault(), this._cursorIndex = -1, this.deadKey = true;
              }
              if (e3 && (t4 === -1 || t4 === 32 || t4 > 47 && t4 < 64 || t4 > 64 && t4 < 91 || t4 > 159 && t4 < 193 || t4 > 218 && t4 < 223 || t4 > 95 && t4 < 112) && (this._currentKey = e3, this.onBeforeKeyAddObservable.notifyObservers(this), e3 = this._currentKey, this._addKey))
                if (this._isTextHighlightOn)
                  this._textWrapper.removePart(this._startHighlightIndex, this._endHighlightIndex, e3), this._textHasChanged(), this._cursorOffset = this._textWrapper.length - (this._startHighlightIndex + 1), this._isTextHighlightOn = false, this._blinkIsEven = false, this._markAsDirty();
                else if (this._cursorOffset === 0)
                  this.text += e3;
                else {
                  var n2 = this._textWrapper.length - this._cursorOffset;
                  this._textWrapper.removePart(n2, n2, e3), this._textHasChanged();
                }
            }
          }, e2.prototype._updateValueFromCursorIndex = function(t4) {
            if (this._blinkIsEven = false, this._cursorIndex === -1)
              this._cursorIndex = t4;
            else if (this._cursorIndex < this._cursorOffset)
              this._endHighlightIndex = this._textWrapper.length - this._cursorIndex, this._startHighlightIndex = this._textWrapper.length - this._cursorOffset;
            else {
              if (!(this._cursorIndex > this._cursorOffset))
                return this._isTextHighlightOn = false, void this._markAsDirty();
              this._endHighlightIndex = this._textWrapper.length - this._cursorOffset, this._startHighlightIndex = this._textWrapper.length - this._cursorIndex;
            }
            this._isTextHighlightOn = true, this._markAsDirty();
          }, e2.prototype._processDblClick = function(t4) {
            var e3, i2;
            this._startHighlightIndex = this._textWrapper.length - this._cursorOffset, this._endHighlightIndex = this._startHighlightIndex;
            do {
              i2 = this._endHighlightIndex < this._textWrapper.length && this._textWrapper.isWord(this._endHighlightIndex) ? ++this._endHighlightIndex : 0, e3 = this._startHighlightIndex > 0 && this._textWrapper.isWord(this._startHighlightIndex - 1) ? --this._startHighlightIndex : 0;
            } while (e3 || i2);
            this._cursorOffset = this._textWrapper.length - this._startHighlightIndex, this.onTextHighlightObservable.notifyObservers(this), this._isTextHighlightOn = true, this._clickedCoordinate = null, this._blinkIsEven = true, this._cursorIndex = -1, this._markAsDirty();
          }, e2.prototype._selectAllText = function() {
            this._blinkIsEven = true, this._isTextHighlightOn = true, this._startHighlightIndex = 0, this._endHighlightIndex = this._textWrapper.length, this._cursorOffset = this._textWrapper.length, this._cursorIndex = -1, this._markAsDirty();
          }, e2.prototype.processKeyboard = function(t4) {
            this.processKey(t4.keyCode, t4.key, t4), this.onKeyboardEventProcessedObservable.notifyObservers(t4);
          }, e2.prototype._onCopyText = function(t4) {
            this._isTextHighlightOn = false;
            try {
              t4.clipboardData && t4.clipboardData.setData("text/plain", this._highlightedText);
            } catch (t5) {
            }
            this._host.clipboardData = this._highlightedText;
          }, e2.prototype._onCutText = function(t4) {
            if (this._highlightedText) {
              this._textWrapper.removePart(this._startHighlightIndex, this._endHighlightIndex), this._textHasChanged(), this._isTextHighlightOn = false, this._cursorOffset = this._textWrapper.length - this._startHighlightIndex;
              try {
                t4.clipboardData && t4.clipboardData.setData("text/plain", this._highlightedText);
              } catch (t5) {
              }
              this._host.clipboardData = this._highlightedText, this._highlightedText = "";
            }
          }, e2.prototype._onPasteText = function(t4) {
            var e3 = "";
            e3 = t4.clipboardData && t4.clipboardData.types.indexOf("text/plain") !== -1 ? t4.clipboardData.getData("text/plain") : this._host.clipboardData;
            var i2 = this._textWrapper.length - this._cursorOffset;
            this._textWrapper.removePart(i2, i2, e3), this._textHasChanged();
          }, e2.prototype._draw = function(t4, e3) {
            var i2 = this;
            t4.save(), this._applyStates(t4), (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (t4.shadowColor = this.shadowColor, t4.shadowBlur = this.shadowBlur, t4.shadowOffsetX = this.shadowOffsetX, t4.shadowOffsetY = this.shadowOffsetY), this._isFocused ? this._focusedBackground && (t4.fillStyle = this._isEnabled ? this._focusedBackground : this._disabledColor, t4.fillRect(this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height)) : this._background && (t4.fillStyle = this._isEnabled ? this._background : this._disabledColor, t4.fillRect(this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height)), (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (t4.shadowBlur = 0, t4.shadowOffsetX = 0, t4.shadowOffsetY = 0), this._fontOffset || (this._fontOffset = f._GetFontOffset(t4.font));
            var r2 = this._currentMeasure.left + this._margin.getValueInPixel(this._host, this._tempParentMeasure.width);
            this.color && (t4.fillStyle = this.color);
            var n2 = this._beforeRenderText(this._textWrapper);
            this._isFocused || this._textWrapper.text || !this._placeholderText || ((n2 = new w()).text = this._placeholderText, this._placeholderColor && (t4.fillStyle = this._placeholderColor)), this._textWidth = t4.measureText(n2.text).width;
            var o2 = 2 * this._margin.getValueInPixel(this._host, this._tempParentMeasure.width);
            this._autoStretchWidth && (this.width = Math.min(this._maxWidth.getValueInPixel(this._host, this._tempParentMeasure.width), this._textWidth + o2) + "px");
            var s2 = this._fontOffset.ascent + (this._currentMeasure.height - this._fontOffset.height) / 2, a2 = this._width.getValueInPixel(this._host, this._tempParentMeasure.width) - o2;
            if (t4.save(), t4.beginPath(), t4.rect(r2, this._currentMeasure.top + (this._currentMeasure.height - this._fontOffset.height) / 2, a2 + 2, this._currentMeasure.height), t4.clip(), this._isFocused && this._textWidth > a2) {
              var h2 = r2 - this._textWidth + a2;
              this._scrollLeft || (this._scrollLeft = h2);
            } else
              this._scrollLeft = r2;
            if (t4.fillText(n2.text, this._scrollLeft, this._currentMeasure.top + s2), this._isFocused) {
              if (this._clickedCoordinate) {
                var l2 = this._scrollLeft + this._textWidth - this._clickedCoordinate, u2 = 0;
                this._cursorOffset = 0;
                var c2 = 0;
                do {
                  this._cursorOffset && (c2 = Math.abs(l2 - u2)), this._cursorOffset++, u2 = t4.measureText(n2.substr(n2.length - this._cursorOffset, this._cursorOffset)).width;
                } while (u2 < l2 && n2.length >= this._cursorOffset);
                Math.abs(l2 - u2) > c2 && this._cursorOffset--, this._blinkIsEven = false, this._clickedCoordinate = null;
              }
              if (!this._blinkIsEven) {
                var _2 = n2.substr(n2.length - this._cursorOffset), d2 = t4.measureText(_2).width, p2 = this._scrollLeft + this._textWidth - d2;
                p2 < r2 ? (this._scrollLeft += r2 - p2, p2 = r2, this._markAsDirty()) : p2 > r2 + a2 && (this._scrollLeft += r2 + a2 - p2, p2 = r2 + a2, this._markAsDirty()), this._isTextHighlightOn || t4.fillRect(p2, this._currentMeasure.top + (this._currentMeasure.height - this._fontOffset.height) / 2, 2, this._fontOffset.height);
              }
              if (clearTimeout(this._blinkTimeout), this._blinkTimeout = setTimeout(function() {
                i2._blinkIsEven = !i2._blinkIsEven, i2._markAsDirty();
              }, 500), this._isTextHighlightOn) {
                clearTimeout(this._blinkTimeout);
                var g2 = t4.measureText(n2.substring(this._startHighlightIndex)).width, m2 = this._scrollLeft + this._textWidth - g2;
                this._highlightedText = n2.substring(this._startHighlightIndex, this._endHighlightIndex);
                var b2 = t4.measureText(n2.substring(this._startHighlightIndex, this._endHighlightIndex)).width;
                m2 < r2 && ((b2 -= r2 - m2) || (b2 = t4.measureText(n2.charAt(n2.length - this._cursorOffset)).width), m2 = r2), t4.globalAlpha = this._highligherOpacity, t4.fillStyle = this._textHighlightColor, t4.fillRect(m2, this._currentMeasure.top + (this._currentMeasure.height - this._fontOffset.height) / 2, b2, this._fontOffset.height), t4.globalAlpha = 1;
              }
            }
            t4.restore(), this._thickness && (this._isFocused ? this.focusedColor && (t4.strokeStyle = this.focusedColor) : this.color && (t4.strokeStyle = this.color), t4.lineWidth = this._thickness, t4.strokeRect(this._currentMeasure.left + this._thickness / 2, this._currentMeasure.top + this._thickness / 2, this._currentMeasure.width - this._thickness, this._currentMeasure.height - this._thickness)), t4.restore();
          }, e2.prototype._onPointerDown = function(e3, i2, r2, n2, o2) {
            return !!t3.prototype._onPointerDown.call(this, e3, i2, r2, n2, o2) && (this._clickedCoordinate = i2.x, this._isTextHighlightOn = false, this._highlightedText = "", this._cursorIndex = -1, this._isPointerDown = true, this._host._capturingControl[r2] = this, this._host.focusedControl === this ? (clearTimeout(this._blinkTimeout), this._markAsDirty(), true) : !!this._isEnabled && (this._host.focusedControl = this, true));
          }, e2.prototype._onPointerMove = function(e3, i2, r2, n2) {
            this._host.focusedControl === this && this._isPointerDown && (this._clickedCoordinate = i2.x, this._markAsDirty(), this._updateValueFromCursorIndex(this._cursorOffset)), t3.prototype._onPointerMove.call(this, e3, i2, r2, n2);
          }, e2.prototype._onPointerUp = function(e3, i2, r2, n2, o2) {
            this._isPointerDown = false, delete this._host._capturingControl[r2], t3.prototype._onPointerUp.call(this, e3, i2, r2, n2, o2);
          }, e2.prototype._beforeRenderText = function(t4) {
            return t4;
          }, e2.prototype.dispose = function() {
            t3.prototype.dispose.call(this), this.onBlurObservable.clear(), this.onFocusObservable.clear(), this.onTextChangedObservable.clear(), this.onTextCopyObservable.clear(), this.onTextCutObservable.clear(), this.onTextPasteObservable.clear(), this.onTextHighlightObservable.clear(), this.onKeyboardEventProcessedObservable.clear();
          }, e2;
        }(f);
        s._TypeStore.RegisteredTypes["BABYLON.GUI.InputText"] = x;
        var P = function(t3) {
          function e2(e3) {
            var i2 = t3.call(this, e3) || this;
            return i2.name = e3, i2._rowDefinitions = new Array(), i2._columnDefinitions = new Array(), i2._cells = {}, i2._childControls = new Array(), i2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "columnCount", { get: function() {
            return this._columnDefinitions.length;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "rowCount", { get: function() {
            return this._rowDefinitions.length;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "children", { get: function() {
            return this._childControls;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "cells", { get: function() {
            return this._cells;
          }, enumerable: false, configurable: true }), e2.prototype.getRowDefinition = function(t4) {
            return t4 < 0 || t4 >= this._rowDefinitions.length ? null : this._rowDefinitions[t4];
          }, e2.prototype.getColumnDefinition = function(t4) {
            return t4 < 0 || t4 >= this._columnDefinitions.length ? null : this._columnDefinitions[t4];
          }, e2.prototype.addRowDefinition = function(t4, e3) {
            return e3 === void 0 && (e3 = false), this._rowDefinitions.push(new a(t4, e3 ? a.UNITMODE_PIXEL : a.UNITMODE_PERCENTAGE)), this._markAsDirty(), this;
          }, e2.prototype.addColumnDefinition = function(t4, e3) {
            return e3 === void 0 && (e3 = false), this._columnDefinitions.push(new a(t4, e3 ? a.UNITMODE_PIXEL : a.UNITMODE_PERCENTAGE)), this._markAsDirty(), this;
          }, e2.prototype.setRowDefinition = function(t4, e3, i2) {
            if (i2 === void 0 && (i2 = false), t4 < 0 || t4 >= this._rowDefinitions.length)
              return this;
            var r2 = this._rowDefinitions[t4];
            return r2 && r2.isPixel === i2 && r2.internalValue === e3 || (this._rowDefinitions[t4] = new a(e3, i2 ? a.UNITMODE_PIXEL : a.UNITMODE_PERCENTAGE), this._markAsDirty()), this;
          }, e2.prototype.setColumnDefinition = function(t4, e3, i2) {
            if (i2 === void 0 && (i2 = false), t4 < 0 || t4 >= this._columnDefinitions.length)
              return this;
            var r2 = this._columnDefinitions[t4];
            return r2 && r2.isPixel === i2 && r2.internalValue === e3 || (this._columnDefinitions[t4] = new a(e3, i2 ? a.UNITMODE_PIXEL : a.UNITMODE_PERCENTAGE), this._markAsDirty()), this;
          }, e2.prototype.getChildrenAt = function(t4, e3) {
            var i2 = this._cells[t4 + ":" + e3];
            return i2 ? i2.children : null;
          }, e2.prototype.getChildCellInfo = function(t4) {
            return t4._tag;
          }, e2.prototype._removeCell = function(e3, i2) {
            if (e3) {
              t3.prototype.removeControl.call(this, e3);
              for (var r2 = 0, n2 = e3.children; r2 < n2.length; r2++) {
                var o2 = n2[r2], s2 = this._childControls.indexOf(o2);
                s2 !== -1 && this._childControls.splice(s2, 1);
              }
              delete this._cells[i2];
            }
          }, e2.prototype._offsetCell = function(t4, e3) {
            if (this._cells[e3]) {
              this._cells[t4] = this._cells[e3];
              for (var i2 = 0, r2 = this._cells[t4].children; i2 < r2.length; i2++) {
                r2[i2]._tag = t4;
              }
              delete this._cells[e3];
            }
          }, e2.prototype.removeColumnDefinition = function(t4) {
            if (t4 < 0 || t4 >= this._columnDefinitions.length)
              return this;
            for (var e3 = 0; e3 < this._rowDefinitions.length; e3++) {
              var i2 = e3 + ":" + t4, r2 = this._cells[i2];
              this._removeCell(r2, i2);
            }
            for (e3 = 0; e3 < this._rowDefinitions.length; e3++)
              for (var n2 = t4 + 1; n2 < this._columnDefinitions.length; n2++) {
                var o2 = e3 + ":" + (n2 - 1);
                i2 = e3 + ":" + n2;
                this._offsetCell(o2, i2);
              }
            return this._columnDefinitions.splice(t4, 1), this._markAsDirty(), this;
          }, e2.prototype.removeRowDefinition = function(t4) {
            if (t4 < 0 || t4 >= this._rowDefinitions.length)
              return this;
            for (var e3 = 0; e3 < this._columnDefinitions.length; e3++) {
              var i2 = t4 + ":" + e3, r2 = this._cells[i2];
              this._removeCell(r2, i2);
            }
            for (e3 = 0; e3 < this._columnDefinitions.length; e3++)
              for (var n2 = t4 + 1; n2 < this._rowDefinitions.length; n2++) {
                var o2 = n2 - 1 + ":" + e3;
                i2 = n2 + ":" + e3;
                this._offsetCell(o2, i2);
              }
            return this._rowDefinitions.splice(t4, 1), this._markAsDirty(), this;
          }, e2.prototype.addControl = function(e3, i2, r2) {
            if (i2 === void 0 && (i2 = 0), r2 === void 0 && (r2 = 0), this._rowDefinitions.length === 0 && this.addRowDefinition(1, false), this._columnDefinitions.length === 0 && this.addColumnDefinition(1, false), this._childControls.indexOf(e3) !== -1)
              return s.Tools.Warn("Control (Name:" + e3.name + ", UniqueId:" + e3.uniqueId + ") is already associated with this grid. You must remove it before reattaching it"), this;
            var n2 = Math.min(i2, this._rowDefinitions.length - 1) + ":" + Math.min(r2, this._columnDefinitions.length - 1), o2 = this._cells[n2];
            return o2 || (o2 = new g(n2), this._cells[n2] = o2, o2.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, o2.verticalAlignment = f.VERTICAL_ALIGNMENT_TOP, t3.prototype.addControl.call(this, o2)), o2.addControl(e3), this._childControls.push(e3), e3._tag = n2, e3.parent = this, this._markAsDirty(), this;
          }, e2.prototype.removeControl = function(t4) {
            var e3 = this._childControls.indexOf(t4);
            e3 !== -1 && this._childControls.splice(e3, 1);
            var i2 = this._cells[t4._tag];
            return i2 && (i2.removeControl(t4), t4._tag = null), this._markAsDirty(), this;
          }, e2.prototype._getTypeName = function() {
            return "Grid";
          }, e2.prototype._getGridDefinitions = function(t4) {
            for (var e3 = [], i2 = [], r2 = [], n2 = [], o2 = this._currentMeasure.width, s2 = 0, a2 = this._currentMeasure.height, h2 = 0, l2 = 0, u2 = 0, c2 = this._rowDefinitions; u2 < c2.length; u2++) {
              if ((g2 = c2[u2]).isPixel)
                a2 -= f2 = g2.getValue(this._host), i2[l2] = f2;
              else
                h2 += g2.internalValue;
              l2++;
            }
            var _2 = 0;
            l2 = 0;
            for (var d2 = 0, p2 = this._rowDefinitions; d2 < p2.length; d2++) {
              var f2, g2 = p2[d2];
              if (n2.push(_2), g2.isPixel)
                _2 += g2.getValue(this._host);
              else
                _2 += f2 = g2.internalValue / h2 * a2, i2[l2] = f2;
              l2++;
            }
            l2 = 0;
            for (var m2 = 0, b2 = this._columnDefinitions; m2 < b2.length; m2++) {
              if ((g2 = b2[m2]).isPixel)
                o2 -= C2 = g2.getValue(this._host), e3[l2] = C2;
              else
                s2 += g2.internalValue;
              l2++;
            }
            var y2 = 0;
            l2 = 0;
            for (var v2 = 0, O2 = this._columnDefinitions; v2 < O2.length; v2++) {
              var C2;
              g2 = O2[v2];
              if (r2.push(y2), g2.isPixel)
                y2 += g2.getValue(this._host);
              else
                y2 += C2 = g2.internalValue / s2 * o2, e3[l2] = C2;
              l2++;
            }
            t4(r2, n2, e3, i2);
          }, e2.prototype._additionalProcessing = function(e3, i2) {
            var r2 = this;
            this._getGridDefinitions(function(t4, e4, i3, n2) {
              for (var o2 in r2._cells)
                if (r2._cells.hasOwnProperty(o2)) {
                  var s2 = o2.split(":"), a2 = parseInt(s2[0]), h2 = parseInt(s2[1]), l2 = r2._cells[o2];
                  l2.left = t4[h2] + "px", l2.top = e4[a2] + "px", l2.width = i3[h2] + "px", l2.height = n2[a2] + "px", l2._left.ignoreAdaptiveScaling = true, l2._top.ignoreAdaptiveScaling = true, l2._width.ignoreAdaptiveScaling = true, l2._height.ignoreAdaptiveScaling = true;
                }
            }), t3.prototype._additionalProcessing.call(this, e3, i2);
          }, e2.prototype._flagDescendantsAsMatrixDirty = function() {
            for (var t4 in this._cells) {
              if (this._cells.hasOwnProperty(t4))
                this._cells[t4]._markMatrixAsDirty();
            }
          }, e2.prototype._renderHighlightSpecific = function(e3) {
            var i2 = this;
            t3.prototype._renderHighlightSpecific.call(this, e3), this._getGridDefinitions(function(t4, r2, n2, o2) {
              for (var s2 = 0; s2 < t4.length; s2++) {
                var a2 = i2._currentMeasure.left + t4[s2] + n2[s2];
                e3.beginPath(), e3.moveTo(a2, i2._currentMeasure.top), e3.lineTo(a2, i2._currentMeasure.top + i2._currentMeasure.height), e3.stroke();
              }
              for (s2 = 0; s2 < r2.length; s2++) {
                var h2 = i2._currentMeasure.top + r2[s2] + o2[s2];
                e3.beginPath(), e3.moveTo(i2._currentMeasure.left, h2), e3.lineTo(i2._currentMeasure.left + i2._currentMeasure.width, h2), e3.stroke();
              }
            }), e3.restore();
          }, e2.prototype.dispose = function() {
            t3.prototype.dispose.call(this);
            for (var e3 = 0, i2 = this._childControls; e3 < i2.length; e3++) {
              i2[e3].dispose();
            }
            this._childControls = [];
          }, e2;
        }(g);
        s._TypeStore.RegisteredTypes["BABYLON.GUI.Grid"] = P;
        var M = function(t3) {
          function e2(e3) {
            var i2 = t3.call(this, e3) || this;
            return i2.name = e3, i2._value = s.Color3.Red(), i2._tmpColor = new s.Color3(), i2._pointerStartedOnSquare = false, i2._pointerStartedOnWheel = false, i2._squareLeft = 0, i2._squareTop = 0, i2._squareSize = 0, i2._h = 360, i2._s = 1, i2._v = 1, i2._lastPointerDownID = -1, i2.onValueChangedObservable = new s.Observable(), i2._pointerIsDown = false, i2.value = new s.Color3(0.88, 0.1, 0.1), i2.size = "200px", i2.isPointerBlocker = true, i2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "value", { get: function() {
            return this._value;
          }, set: function(t4) {
            this._value.equals(t4) || (this._value.copyFrom(t4), this._value.toHSVToRef(this._tmpColor), this._h = this._tmpColor.r, this._s = Math.max(this._tmpColor.g, 1e-5), this._v = Math.max(this._tmpColor.b, 1e-5), this._markAsDirty(), this._value.r <= e2._Epsilon && (this._value.r = 0), this._value.g <= e2._Epsilon && (this._value.g = 0), this._value.b <= e2._Epsilon && (this._value.b = 0), this._value.r >= 1 - e2._Epsilon && (this._value.r = 1), this._value.g >= 1 - e2._Epsilon && (this._value.g = 1), this._value.b >= 1 - e2._Epsilon && (this._value.b = 1), this.onValueChangedObservable.notifyObservers(this._value));
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "width", { get: function() {
            return this._width.toString(this._host);
          }, set: function(t4) {
            this._width.toString(this._host) !== t4 && this._width.fromString(t4) && (this._height.fromString(t4), this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "height", { get: function() {
            return this._height.toString(this._host);
          }, set: function(t4) {
            this._height.toString(this._host) !== t4 && this._height.fromString(t4) && (this._width.fromString(t4), this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "size", { get: function() {
            return this.width;
          }, set: function(t4) {
            this.width = t4;
          }, enumerable: false, configurable: true }), e2.prototype._getTypeName = function() {
            return "ColorPicker";
          }, e2.prototype._preMeasure = function(t4, e3) {
            t4.width < t4.height ? this._currentMeasure.height = t4.width : this._currentMeasure.width = t4.height;
          }, e2.prototype._updateSquareProps = function() {
            var t4 = 0.5 * Math.min(this._currentMeasure.width, this._currentMeasure.height), e3 = 2 * (t4 - 0.2 * t4) / Math.sqrt(2), i2 = t4 - 0.5 * e3;
            this._squareLeft = this._currentMeasure.left + i2, this._squareTop = this._currentMeasure.top + i2, this._squareSize = e3;
          }, e2.prototype._drawGradientSquare = function(t4, e3, i2, r2, n2, o2) {
            var s2 = o2.createLinearGradient(e3, i2, r2 + e3, i2);
            s2.addColorStop(0, "#fff"), s2.addColorStop(1, "hsl(" + t4 + ", 100%, 50%)"), o2.fillStyle = s2, o2.fillRect(e3, i2, r2, n2);
            var a2 = o2.createLinearGradient(e3, i2, e3, n2 + i2);
            a2.addColorStop(0, "rgba(0,0,0,0)"), a2.addColorStop(1, "#000"), o2.fillStyle = a2, o2.fillRect(e3, i2, r2, n2);
          }, e2.prototype._drawCircle = function(t4, e3, i2, r2) {
            r2.beginPath(), r2.arc(t4, e3, i2 + 1, 0, 2 * Math.PI, false), r2.lineWidth = 3, r2.strokeStyle = "#333333", r2.stroke(), r2.beginPath(), r2.arc(t4, e3, i2, 0, 2 * Math.PI, false), r2.lineWidth = 3, r2.strokeStyle = "#ffffff", r2.stroke();
          }, e2.prototype._createColorWheelCanvas = function(t4, e3) {
            var i2 = document.createElement("canvas");
            i2.width = 2 * t4, i2.height = 2 * t4;
            for (var r2 = i2.getContext("2d"), n2 = r2.getImageData(0, 0, 2 * t4, 2 * t4), o2 = n2.data, a2 = this._tmpColor, h2 = t4 * t4, l2 = t4 - e3, u2 = l2 * l2, c2 = -t4; c2 < t4; c2++)
              for (var _2 = -t4; _2 < t4; _2++) {
                var d2 = c2 * c2 + _2 * _2;
                if (!(d2 > h2 || d2 < u2)) {
                  var p2 = Math.sqrt(d2), f2 = Math.atan2(_2, c2);
                  s.Color3.HSVtoRGBToRef(180 * f2 / Math.PI + 180, p2 / t4, 1, a2);
                  var g2 = 4 * (c2 + t4 + 2 * (_2 + t4) * t4);
                  o2[g2] = 255 * a2.r, o2[g2 + 1] = 255 * a2.g, o2[g2 + 2] = 255 * a2.b;
                  var m2 = 0.2;
                  m2 = t4 < 50 ? 0.2 : t4 > 150 ? 0.04 : -0.16 * (t4 - 50) / 100 + 0.2;
                  var b2 = (p2 - l2) / (t4 - l2);
                  o2[g2 + 3] = b2 < m2 ? b2 / m2 * 255 : b2 > 1 - m2 ? 255 * (1 - (b2 - (1 - m2)) / m2) : 255;
                }
              }
            return r2.putImageData(n2, 0, 0), i2;
          }, e2.prototype._draw = function(t4) {
            t4.save(), this._applyStates(t4);
            var e3 = 0.5 * Math.min(this._currentMeasure.width, this._currentMeasure.height), i2 = 0.2 * e3, r2 = this._currentMeasure.left, n2 = this._currentMeasure.top;
            this._colorWheelCanvas && this._colorWheelCanvas.width == 2 * e3 || (this._colorWheelCanvas = this._createColorWheelCanvas(e3, i2)), this._updateSquareProps(), (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (t4.shadowColor = this.shadowColor, t4.shadowBlur = this.shadowBlur, t4.shadowOffsetX = this.shadowOffsetX, t4.shadowOffsetY = this.shadowOffsetY, t4.fillRect(this._squareLeft, this._squareTop, this._squareSize, this._squareSize)), t4.drawImage(this._colorWheelCanvas, r2, n2), (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (t4.shadowBlur = 0, t4.shadowOffsetX = 0, t4.shadowOffsetY = 0), this._drawGradientSquare(this._h, this._squareLeft, this._squareTop, this._squareSize, this._squareSize, t4);
            var o2 = this._squareLeft + this._squareSize * this._s, s2 = this._squareTop + this._squareSize * (1 - this._v);
            this._drawCircle(o2, s2, 0.04 * e3, t4);
            var a2 = e3 - 0.5 * i2;
            o2 = r2 + e3 + Math.cos((this._h - 180) * Math.PI / 180) * a2, s2 = n2 + e3 + Math.sin((this._h - 180) * Math.PI / 180) * a2, this._drawCircle(o2, s2, 0.35 * i2, t4), t4.restore();
          }, e2.prototype._updateValueFromPointer = function(t4, i2) {
            if (this._pointerStartedOnWheel) {
              var r2 = 0.5 * Math.min(this._currentMeasure.width, this._currentMeasure.height), n2 = r2 + this._currentMeasure.left, o2 = r2 + this._currentMeasure.top;
              this._h = 180 * Math.atan2(i2 - o2, t4 - n2) / Math.PI + 180;
            } else
              this._pointerStartedOnSquare && (this._updateSquareProps(), this._s = (t4 - this._squareLeft) / this._squareSize, this._v = 1 - (i2 - this._squareTop) / this._squareSize, this._s = Math.min(this._s, 1), this._s = Math.max(this._s, e2._Epsilon), this._v = Math.min(this._v, 1), this._v = Math.max(this._v, e2._Epsilon));
            s.Color3.HSVtoRGBToRef(this._h, this._s, this._v, this._tmpColor), this.value = this._tmpColor;
          }, e2.prototype._isPointOnSquare = function(t4, e3) {
            this._updateSquareProps();
            var i2 = this._squareLeft, r2 = this._squareTop, n2 = this._squareSize;
            return t4 >= i2 && t4 <= i2 + n2 && e3 >= r2 && e3 <= r2 + n2;
          }, e2.prototype._isPointOnWheel = function(t4, e3) {
            var i2 = 0.5 * Math.min(this._currentMeasure.width, this._currentMeasure.height), r2 = i2 - 0.2 * i2, n2 = t4 - (i2 + this._currentMeasure.left), o2 = e3 - (i2 + this._currentMeasure.top), s2 = n2 * n2 + o2 * o2;
            return s2 <= i2 * i2 && s2 >= r2 * r2;
          }, e2.prototype._onPointerDown = function(e3, i2, r2, n2, o2) {
            if (!t3.prototype._onPointerDown.call(this, e3, i2, r2, n2, o2))
              return false;
            this._pointerIsDown = true, this._pointerStartedOnSquare = false, this._pointerStartedOnWheel = false, this._invertTransformMatrix.transformCoordinates(i2.x, i2.y, this._transformedPosition);
            var s2 = this._transformedPosition.x, a2 = this._transformedPosition.y;
            return this._isPointOnSquare(s2, a2) ? this._pointerStartedOnSquare = true : this._isPointOnWheel(s2, a2) && (this._pointerStartedOnWheel = true), this._updateValueFromPointer(s2, a2), this._host._capturingControl[r2] = this, this._lastPointerDownID = r2, true;
          }, e2.prototype._onPointerMove = function(e3, i2, r2, n2) {
            if (r2 == this._lastPointerDownID) {
              this._invertTransformMatrix.transformCoordinates(i2.x, i2.y, this._transformedPosition);
              var o2 = this._transformedPosition.x, s2 = this._transformedPosition.y;
              this._pointerIsDown && this._updateValueFromPointer(o2, s2), t3.prototype._onPointerMove.call(this, e3, i2, r2, n2);
            }
          }, e2.prototype._onPointerUp = function(e3, i2, r2, n2, o2, s2) {
            this._pointerIsDown = false, delete this._host._capturingControl[r2], t3.prototype._onPointerUp.call(this, e3, i2, r2, n2, o2, s2);
          }, e2.prototype._onCanvasBlur = function() {
            this._forcePointerUp(), t3.prototype._onCanvasBlur.call(this);
          }, e2.ShowPickerDialogAsync = function(t4, i2) {
            return new Promise(function(r2, n2) {
              i2.pickerWidth = i2.pickerWidth || "640px", i2.pickerHeight = i2.pickerHeight || "400px", i2.headerHeight = i2.headerHeight || "35px", i2.lastColor = i2.lastColor || "#000000", i2.swatchLimit = i2.swatchLimit || 20, i2.numSwatchesPerLine = i2.numSwatchesPerLine || 10;
              var o2, a2, h2, l2, u2, c2, _2, d2, p2, g2, m2, v2, C2, T2, w2, M2, I2, k2, A2, S2 = i2.swatchLimit / i2.numSwatchesPerLine, E2 = parseFloat(i2.pickerWidth) / i2.numSwatchesPerLine, D2 = Math.floor(0.25 * E2), L2 = D2 * (i2.numSwatchesPerLine + 1), R2 = Math.floor((parseFloat(i2.pickerWidth) - L2) / i2.numSwatchesPerLine), B2 = R2 * S2 + D2 * (S2 + 1), N2 = (parseInt(i2.pickerHeight) + B2 + Math.floor(0.25 * R2)).toString() + "px", H2 = s.Color3.FromHexString("#dddddd"), V2 = H2.r + H2.g + H2.b, W2 = ["R", "G", "B"], F2 = false;
              function j2(t5, e3) {
                A2 = e3;
                var i3 = t5.toHexString();
                if (I2.background = i3, g2.name != A2 && (g2.text = Math.floor(255 * t5.r).toString()), m2.name != A2 && (m2.text = Math.floor(255 * t5.g).toString()), v2.name != A2 && (v2.text = Math.floor(255 * t5.b).toString()), C2.name != A2 && (C2.text = t5.r.toString()), T2.name != A2 && (T2.text = t5.g.toString()), w2.name != A2 && (w2.text = t5.b.toString()), M2.name != A2) {
                  var r3 = i3.split("#");
                  M2.text = r3[1];
                }
                p2.name != A2 && (p2.value = t5);
              }
              function z2(t5, e3) {
                var i3 = t5.text;
                if (/[^0-9]/g.test(i3))
                  t5.text = k2;
                else if (i3 != "" && (Math.floor(parseInt(i3)) < 0 ? i3 = "0" : Math.floor(parseInt(i3)) > 255 ? i3 = "255" : isNaN(parseInt(i3)) && (i3 = "0")), A2 == t5.name && (k2 = i3), i3 != "") {
                  i3 = parseInt(i3).toString(), t5.text = i3;
                  var r3 = s.Color3.FromHexString(I2.background);
                  A2 == t5.name && j2(e3 == "r" ? new s.Color3(parseInt(i3) / 255, r3.g, r3.b) : e3 == "g" ? new s.Color3(r3.r, parseInt(i3) / 255, r3.b) : new s.Color3(r3.r, r3.g, parseInt(i3) / 255), t5.name);
                }
              }
              function G2(t5, e3) {
                var i3 = t5.text;
                if (/[^0-9\.]/g.test(i3))
                  t5.text = k2;
                else {
                  i3 != "" && i3 != "." && parseFloat(i3) != 0 && (parseFloat(i3) < 0 ? i3 = "0.0" : parseFloat(i3) > 1 ? i3 = "1.0" : isNaN(parseFloat(i3)) && (i3 = "0.0")), A2 == t5.name && (k2 = i3), i3 != "" && i3 != "." && parseFloat(i3) != 0 ? (i3 = parseFloat(i3).toString(), t5.text = i3) : i3 = "0.0";
                  var r3 = s.Color3.FromHexString(I2.background);
                  A2 == t5.name && j2(e3 == "r" ? new s.Color3(parseFloat(i3), r3.g, r3.b) : e3 == "g" ? new s.Color3(r3.r, parseFloat(i3), r3.b) : new s.Color3(r3.r, r3.g, parseFloat(i3)), t5.name);
                }
              }
              function X2() {
                if (i2.savedColors && i2.savedColors[_2]) {
                  if (F2)
                    var t5 = "b";
                  else
                    t5 = "";
                  var e3 = O.CreateSimpleButton("Swatch_" + _2, t5);
                  e3.fontFamily = "BabylonJSglyphs";
                  var r3 = s.Color3.FromHexString(i2.savedColors[_2]), n3 = r3.r + r3.g + r3.b;
                  e3.color = n3 > V2 ? "#aaaaaa" : "#ffffff", e3.fontSize = Math.floor(0.7 * R2), e3.textBlock.verticalAlignment = f.VERTICAL_ALIGNMENT_CENTER, e3.height = e3.width = R2.toString() + "px", e3.background = i2.savedColors[_2], e3.thickness = 2;
                  var o3 = _2;
                  return e3.pointerDownAnimation = function() {
                    e3.thickness = 4;
                  }, e3.pointerUpAnimation = function() {
                    e3.thickness = 3;
                  }, e3.pointerEnterAnimation = function() {
                    e3.thickness = 3;
                  }, e3.pointerOutAnimation = function() {
                    e3.thickness = 2;
                  }, e3.onPointerClickObservable.add(function() {
                    var t6;
                    F2 ? (t6 = o3, i2.savedColors && i2.savedColors.splice(t6, 1), i2.savedColors && i2.savedColors.length == 0 && (q2(false), F2 = false), Y2("", It)) : i2.savedColors && j2(s.Color3.FromHexString(i2.savedColors[o3]), e3.name);
                  }), e3;
                }
                return null;
              }
              function U2(t5) {
                if (t5 !== void 0 && (F2 = t5), F2) {
                  for (var e3 = 0; e3 < d2.children.length; e3++) {
                    d2.children[e3].textBlock.text = "b";
                  }
                  h2 !== void 0 && (h2.textBlock.text = "Done");
                } else {
                  for (e3 = 0; e3 < d2.children.length; e3++) {
                    d2.children[e3].textBlock.text = "";
                  }
                  h2 !== void 0 && (h2.textBlock.text = "Edit");
                }
              }
              function Y2(t5, e3) {
                if (i2.savedColors) {
                  t5 != "" && i2.savedColors.push(t5), _2 = 0, d2.clearControls();
                  var r3 = Math.ceil(i2.savedColors.length / i2.numSwatchesPerLine);
                  if (r3 == 0)
                    var n3 = 0;
                  else
                    n3 = r3 + 1;
                  if (d2.rowCount != r3 + n3) {
                    for (var o3 = d2.rowCount, s2 = 0; s2 < o3; s2++)
                      d2.removeRowDefinition(0);
                    for (s2 = 0; s2 < r3 + n3; s2++)
                      s2 % 2 ? d2.addRowDefinition(R2, true) : d2.addRowDefinition(D2, true);
                  }
                  d2.height = (R2 * r3 + n3 * D2).toString() + "px";
                  for (var a3 = 1, h3 = 1; a3 < r3 + n3; a3 += 2, h3++) {
                    if (i2.savedColors.length > h3 * i2.numSwatchesPerLine)
                      var l3 = i2.numSwatchesPerLine;
                    else
                      l3 = i2.savedColors.length - (h3 - 1) * i2.numSwatchesPerLine;
                    for (var u3 = Math.min(Math.max(l3, 0), i2.numSwatchesPerLine), c3 = 0, p3 = 1; c3 < u3; c3++)
                      if (!(c3 > i2.numSwatchesPerLine)) {
                        var f2 = X2();
                        f2 != null && (d2.addControl(f2, a3, p3), p3 += 2, _2++);
                      }
                  }
                  i2.savedColors.length >= i2.swatchLimit ? K2(e3, true) : K2(e3, false);
                }
              }
              function q2(t5) {
                t5 ? ((h2 = O.CreateSimpleButton("butEdit", "Edit")).width = l2, h2.height = u2, h2.left = Math.floor(0.1 * parseInt(l2)).toString() + "px", h2.top = (-1 * parseFloat(h2.left)).toString() + "px", h2.verticalAlignment = f.VERTICAL_ALIGNMENT_BOTTOM, h2.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, h2.thickness = 2, h2.color = "#c0c0c0", h2.fontSize = a2, h2.background = "#535353", h2.onPointerEnterObservable.add(function() {
                  h2.background = "#414141";
                }), h2.onPointerOutObservable.add(function() {
                  h2.background = "#535353";
                }), h2.pointerDownAnimation = function() {
                  h2.background = "515151";
                }, h2.pointerUpAnimation = function() {
                  h2.background = "#414141";
                }, h2.onPointerClickObservable.add(function() {
                  F2 = !F2, U2();
                }), ut2.addControl(h2, 1, 0)) : ut2.removeControl(h2);
              }
              function K2(t5, e3) {
                e3 ? (t5.color = "#555555", t5.background = "#454545") : (t5.color = "#c0c0c0", t5.background = "#535353");
              }
              function Z2(e3) {
                i2.savedColors && i2.savedColors.length > 0 ? r2({ savedColors: i2.savedColors, pickedColor: e3 }) : r2({ pickedColor: e3 }), t4.removeControl(J2);
              }
              var J2 = new P();
              if (J2.name = "Dialog Container", J2.width = i2.pickerWidth, i2.savedColors) {
                J2.height = N2;
                var Q2 = parseInt(i2.pickerHeight) / parseInt(N2);
                J2.addRowDefinition(Q2, false), J2.addRowDefinition(1 - Q2, false);
              } else
                J2.height = i2.pickerHeight, J2.addRowDefinition(1, false);
              if (t4.addControl(J2), i2.savedColors) {
                (d2 = new P()).name = "Swatch Drawer", d2.verticalAlignment = f.VERTICAL_ALIGNMENT_TOP, d2.background = "#535353", d2.width = i2.pickerWidth;
                var $2 = i2.savedColors.length / i2.numSwatchesPerLine;
                if ($2 == 0)
                  var tt2 = 0;
                else
                  tt2 = $2 + 1;
                d2.height = (R2 * $2 + tt2 * D2).toString() + "px", d2.top = Math.floor(0.25 * R2).toString() + "px";
                for (var et2 = 0; et2 < 2 * Math.ceil(i2.savedColors.length / i2.numSwatchesPerLine) + 1; et2++)
                  et2 % 2 != 0 ? d2.addRowDefinition(R2, true) : d2.addRowDefinition(D2, true);
                for (et2 = 0; et2 < 2 * i2.numSwatchesPerLine + 1; et2++)
                  et2 % 2 != 0 ? d2.addColumnDefinition(R2, true) : d2.addColumnDefinition(D2, true);
                J2.addControl(d2, 1, 0);
              }
              var it2 = new P();
              it2.name = "Picker Panel", it2.height = i2.pickerHeight;
              var rt2 = parseInt(i2.headerHeight) / parseInt(i2.pickerHeight), nt2 = [rt2, 1 - rt2];
              it2.addRowDefinition(nt2[0], false), it2.addRowDefinition(nt2[1], false), J2.addControl(it2, 0, 0);
              var ot2 = new b();
              ot2.name = "Dialogue Header Bar", ot2.background = "#cccccc", ot2.thickness = 0, it2.addControl(ot2, 0, 0);
              var st2 = O.CreateSimpleButton("closeButton", "a");
              st2.fontFamily = "BabylonJSglyphs";
              var at2 = s.Color3.FromHexString(ot2.background);
              o2 = new s.Color3(1 - at2.r, 1 - at2.g, 1 - at2.b), st2.color = o2.toHexString(), st2.fontSize = Math.floor(0.6 * parseInt(i2.headerHeight)), st2.textBlock.textVerticalAlignment = f.VERTICAL_ALIGNMENT_CENTER, st2.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_RIGHT, st2.height = st2.width = i2.headerHeight, st2.background = ot2.background, st2.thickness = 0, st2.pointerDownAnimation = function() {
              }, st2.pointerUpAnimation = function() {
                st2.background = ot2.background;
              }, st2.pointerEnterAnimation = function() {
                st2.color = ot2.background, st2.background = "red";
              }, st2.pointerOutAnimation = function() {
                st2.color = o2.toHexString(), st2.background = ot2.background;
              }, st2.onPointerClickObservable.add(function() {
                Z2(Ct.background);
              }), it2.addControl(st2, 0, 0);
              var ht2 = new P();
              ht2.name = "Dialogue Body", ht2.background = "#535353";
              var lt2 = [0.4375, 0.5625];
              ht2.addRowDefinition(1, false), ht2.addColumnDefinition(lt2[0], false), ht2.addColumnDefinition(lt2[1], false), it2.addControl(ht2, 1, 0);
              var ut2 = new P();
              ut2.name = "Picker Grid", ut2.addRowDefinition(0.85, false), ut2.addRowDefinition(0.15, false), ht2.addControl(ut2, 0, 0), (p2 = new e2()).name = "GUI Color Picker", i2.pickerHeight < i2.pickerWidth ? p2.width = 0.89 : p2.height = 0.89, p2.value = s.Color3.FromHexString(i2.lastColor), p2.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_CENTER, p2.verticalAlignment = f.VERTICAL_ALIGNMENT_CENTER, p2.onPointerDownObservable.add(function() {
                A2 = p2.name, k2 = "", U2(false);
              }), p2.onValueChangedObservable.add(function(t5) {
                A2 == p2.name && j2(t5, p2.name);
              }), ut2.addControl(p2, 0, 0);
              var ct2 = new P();
              ct2.name = "Dialogue Right Half", ct2.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT;
              var _t2 = [0.514, 0.486];
              ct2.addRowDefinition(_t2[0], false), ct2.addRowDefinition(_t2[1], false), ht2.addControl(ct2, 1, 1);
              var dt2 = new P();
              dt2.name = "Swatches and Buttons";
              var pt2 = [0.417, 0.583];
              dt2.addRowDefinition(1, false), dt2.addColumnDefinition(pt2[0], false), dt2.addColumnDefinition(pt2[1], false), ct2.addControl(dt2, 0, 0);
              var ft2 = new P();
              ft2.name = "New and Current Swatches";
              var gt2 = [0.04, 0.16, 0.64, 0.16];
              ft2.addRowDefinition(gt2[0], false), ft2.addRowDefinition(gt2[1], false), ft2.addRowDefinition(gt2[2], false), ft2.addRowDefinition(gt2[3], false), dt2.addControl(ft2, 0, 0);
              var mt2 = new P();
              mt2.name = "Active Swatches", mt2.width = 0.67, mt2.addRowDefinition(0.5, false), mt2.addRowDefinition(0.5, false), ft2.addControl(mt2, 2, 0);
              var bt = Math.floor(parseInt(i2.pickerWidth) * lt2[1] * pt2[0] * 0.11), yt = Math.floor(parseInt(i2.pickerHeight) * nt2[1] * _t2[0] * gt2[1] * 0.5);
              if (i2.pickerWidth > i2.pickerHeight)
                var vt = yt;
              else
                vt = bt;
              var Ot = new y();
              Ot.text = "new", Ot.name = "New Color Label", Ot.color = "#c0c0c0", Ot.fontSize = vt, ft2.addControl(Ot, 1, 0), (I2 = new b()).name = "New Color Swatch", I2.background = i2.lastColor, I2.thickness = 0, mt2.addControl(I2, 0, 0);
              var Ct = O.CreateSimpleButton("currentSwatch", "");
              Ct.background = i2.lastColor, Ct.thickness = 0, Ct.onPointerClickObservable.add(function() {
                j2(s.Color3.FromHexString(Ct.background), Ct.name), U2(false);
              }), Ct.pointerDownAnimation = function() {
              }, Ct.pointerUpAnimation = function() {
              }, Ct.pointerEnterAnimation = function() {
              }, Ct.pointerOutAnimation = function() {
              }, mt2.addControl(Ct, 1, 0);
              var Tt = new b();
              Tt.name = "Swatch Outline", Tt.width = 0.67, Tt.thickness = 2, Tt.color = "#404040", Tt.isHitTestVisible = false, ft2.addControl(Tt, 2, 0);
              var wt = new y();
              wt.name = "Current Color Label", wt.text = "current", wt.color = "#c0c0c0", wt.fontSize = vt, ft2.addControl(wt, 3, 0);
              var xt = new P();
              xt.name = "Button Grid", xt.height = 0.8;
              xt.addRowDefinition(1 / 3, false), xt.addRowDefinition(1 / 3, false), xt.addRowDefinition(1 / 3, false), dt2.addControl(xt, 0, 1), l2 = Math.floor(parseInt(i2.pickerWidth) * lt2[1] * pt2[1] * 0.67).toString() + "px", u2 = Math.floor(parseInt(i2.pickerHeight) * nt2[1] * _t2[0] * (parseFloat(xt.height.toString()) / 100) * (1 / 3) * 0.7).toString() + "px", a2 = parseFloat(l2) > parseFloat(u2) ? Math.floor(0.45 * parseFloat(u2)) : Math.floor(0.11 * parseFloat(l2));
              var Pt = O.CreateSimpleButton("butOK", "OK");
              Pt.width = l2, Pt.height = u2, Pt.verticalAlignment = f.VERTICAL_ALIGNMENT_CENTER, Pt.thickness = 2, Pt.color = "#c0c0c0", Pt.fontSize = a2, Pt.background = "#535353", Pt.onPointerEnterObservable.add(function() {
                Pt.background = "#414141";
              }), Pt.onPointerOutObservable.add(function() {
                Pt.background = "#535353";
              }), Pt.pointerDownAnimation = function() {
                Pt.background = "515151";
              }, Pt.pointerUpAnimation = function() {
                Pt.background = "#414141";
              }, Pt.onPointerClickObservable.add(function() {
                U2(false), Z2(I2.background);
              }), xt.addControl(Pt, 0, 0);
              var Mt = O.CreateSimpleButton("butCancel", "Cancel");
              if (Mt.width = l2, Mt.height = u2, Mt.verticalAlignment = f.VERTICAL_ALIGNMENT_CENTER, Mt.thickness = 2, Mt.color = "#c0c0c0", Mt.fontSize = a2, Mt.background = "#535353", Mt.onPointerEnterObservable.add(function() {
                Mt.background = "#414141";
              }), Mt.onPointerOutObservable.add(function() {
                Mt.background = "#535353";
              }), Mt.pointerDownAnimation = function() {
                Mt.background = "515151";
              }, Mt.pointerUpAnimation = function() {
                Mt.background = "#414141";
              }, Mt.onPointerClickObservable.add(function() {
                U2(false), Z2(Ct.background);
              }), xt.addControl(Mt, 1, 0), i2.savedColors) {
                var It = O.CreateSimpleButton("butSave", "Save");
                It.width = l2, It.height = u2, It.verticalAlignment = f.VERTICAL_ALIGNMENT_CENTER, It.thickness = 2, It.fontSize = a2, i2.savedColors.length < i2.swatchLimit ? (It.color = "#c0c0c0", It.background = "#535353") : K2(It, true), It.onPointerEnterObservable.add(function() {
                  i2.savedColors && i2.savedColors.length < i2.swatchLimit && (It.background = "#414141");
                }), It.onPointerOutObservable.add(function() {
                  i2.savedColors && i2.savedColors.length < i2.swatchLimit && (It.background = "#535353");
                }), It.pointerDownAnimation = function() {
                  i2.savedColors && i2.savedColors.length < i2.swatchLimit && (It.background = "515151");
                }, It.pointerUpAnimation = function() {
                  i2.savedColors && i2.savedColors.length < i2.swatchLimit && (It.background = "#414141");
                }, It.onPointerClickObservable.add(function() {
                  i2.savedColors && (i2.savedColors.length == 0 && q2(true), i2.savedColors.length < i2.swatchLimit && Y2(I2.background, It), U2(false));
                }), i2.savedColors.length > 0 && q2(true), xt.addControl(It, 2, 0);
              }
              var kt = new P();
              kt.name = "Dialog Lower Right", kt.addRowDefinition(0.02, false), kt.addRowDefinition(0.63, false), kt.addRowDefinition(0.21, false), kt.addRowDefinition(0.14, false), ct2.addControl(kt, 1, 0), c2 = s.Color3.FromHexString(i2.lastColor);
              var At = new P();
              At.name = "RGB Values", At.width = 0.82, At.verticalAlignment = f.VERTICAL_ALIGNMENT_CENTER, At.addRowDefinition(1 / 3, false), At.addRowDefinition(1 / 3, false), At.addRowDefinition(1 / 3, false), At.addColumnDefinition(0.1, false), At.addColumnDefinition(0.2, false), At.addColumnDefinition(0.7, false), kt.addControl(At, 1, 0);
              for (et2 = 0; et2 < W2.length; et2++) {
                (St = new y()).text = W2[et2], St.color = "#c0c0c0", St.fontSize = a2, At.addControl(St, et2, 0);
              }
              (g2 = new x()).width = 0.83, g2.height = 0.72, g2.name = "rIntField", g2.fontSize = a2, g2.text = (255 * c2.r).toString(), g2.color = "#f0f0f0", g2.background = "#454545", g2.onFocusObservable.add(function() {
                A2 = g2.name, k2 = g2.text, U2(false);
              }), g2.onBlurObservable.add(function() {
                g2.text == "" && (g2.text = "0"), z2(g2, "r"), A2 == g2.name && (A2 = "");
              }), g2.onTextChangedObservable.add(function() {
                A2 == g2.name && z2(g2, "r");
              }), At.addControl(g2, 0, 1), (m2 = new x()).width = 0.83, m2.height = 0.72, m2.name = "gIntField", m2.fontSize = a2, m2.text = (255 * c2.g).toString(), m2.color = "#f0f0f0", m2.background = "#454545", m2.onFocusObservable.add(function() {
                A2 = m2.name, k2 = m2.text, U2(false);
              }), m2.onBlurObservable.add(function() {
                m2.text == "" && (m2.text = "0"), z2(m2, "g"), A2 == m2.name && (A2 = "");
              }), m2.onTextChangedObservable.add(function() {
                A2 == m2.name && z2(m2, "g");
              }), At.addControl(m2, 1, 1), (v2 = new x()).width = 0.83, v2.height = 0.72, v2.name = "bIntField", v2.fontSize = a2, v2.text = (255 * c2.b).toString(), v2.color = "#f0f0f0", v2.background = "#454545", v2.onFocusObservable.add(function() {
                A2 = v2.name, k2 = v2.text, U2(false);
              }), v2.onBlurObservable.add(function() {
                v2.text == "" && (v2.text = "0"), z2(v2, "b"), A2 == v2.name && (A2 = "");
              }), v2.onTextChangedObservable.add(function() {
                A2 == v2.name && z2(v2, "b");
              }), At.addControl(v2, 2, 1), (C2 = new x()).width = 0.95, C2.height = 0.72, C2.name = "rDecField", C2.fontSize = a2, C2.text = c2.r.toString(), C2.color = "#f0f0f0", C2.background = "#454545", C2.onFocusObservable.add(function() {
                A2 = C2.name, k2 = C2.text, U2(false);
              }), C2.onBlurObservable.add(function() {
                parseFloat(C2.text) != 0 && C2.text != "" || (C2.text = "0", G2(C2, "r")), A2 == C2.name && (A2 = "");
              }), C2.onTextChangedObservable.add(function() {
                A2 == C2.name && G2(C2, "r");
              }), At.addControl(C2, 0, 2), (T2 = new x()).width = 0.95, T2.height = 0.72, T2.name = "gDecField", T2.fontSize = a2, T2.text = c2.g.toString(), T2.color = "#f0f0f0", T2.background = "#454545", T2.onFocusObservable.add(function() {
                A2 = T2.name, k2 = T2.text, U2(false);
              }), T2.onBlurObservable.add(function() {
                parseFloat(T2.text) != 0 && T2.text != "" || (T2.text = "0", G2(T2, "g")), A2 == T2.name && (A2 = "");
              }), T2.onTextChangedObservable.add(function() {
                A2 == T2.name && G2(T2, "g");
              }), At.addControl(T2, 1, 2), (w2 = new x()).width = 0.95, w2.height = 0.72, w2.name = "bDecField", w2.fontSize = a2, w2.text = c2.b.toString(), w2.color = "#f0f0f0", w2.background = "#454545", w2.onFocusObservable.add(function() {
                A2 = w2.name, k2 = w2.text, U2(false);
              }), w2.onBlurObservable.add(function() {
                parseFloat(w2.text) != 0 && w2.text != "" || (w2.text = "0", G2(w2, "b")), A2 == w2.name && (A2 = "");
              }), w2.onTextChangedObservable.add(function() {
                A2 == w2.name && G2(w2, "b");
              }), At.addControl(w2, 2, 2);
              var St, Et = new P();
              Et.name = "Hex Value", Et.width = 0.82, Et.addRowDefinition(1, false), Et.addColumnDefinition(0.1, false), Et.addColumnDefinition(0.9, false), kt.addControl(Et, 2, 0), (St = new y()).text = "#", St.color = "#c0c0c0", St.fontSize = a2, Et.addControl(St, 0, 0), (M2 = new x()).width = 0.96, M2.height = 0.72, M2.name = "hexField", M2.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_CENTER, M2.fontSize = a2;
              var Dt = i2.lastColor.split("#");
              M2.text = Dt[1], M2.color = "#f0f0f0", M2.background = "#454545", M2.onFocusObservable.add(function() {
                A2 = M2.name, k2 = M2.text, U2(false);
              }), M2.onBlurObservable.add(function() {
                if (M2.text.length == 3) {
                  var t5 = M2.text.split("");
                  M2.text = t5[0] + t5[0] + t5[1] + t5[1] + t5[2] + t5[2];
                }
                M2.text == "" && (M2.text = "000000", j2(s.Color3.FromHexString(M2.text), "b")), A2 == M2.name && (A2 = "");
              }), M2.onTextChangedObservable.add(function() {
                var t5 = M2.text, e3 = /[^0-9A-F]/i.test(t5);
                if ((M2.text.length > 6 || e3) && A2 == M2.name)
                  M2.text = k2;
                else {
                  if (M2.text.length < 6)
                    for (var i3 = 6 - M2.text.length, r3 = 0; r3 < i3; r3++)
                      t5 = "0" + t5;
                  if (M2.text.length == 3) {
                    var n3 = M2.text.split("");
                    t5 = n3[0] + n3[0] + n3[1] + n3[1] + n3[2] + n3[2];
                  }
                  t5 = "#" + t5, A2 == M2.name && (k2 = M2.text, j2(s.Color3.FromHexString(t5), M2.name));
                }
              }), Et.addControl(M2, 0, 1), i2.savedColors && i2.savedColors.length > 0 && Y2("", It);
            });
          }, e2._Epsilon = 1e-6, e2;
        }(f);
        s._TypeStore.RegisteredTypes["BABYLON.GUI.ColorPicker"] = M;
        var I = function(t3) {
          function e2(e3) {
            var i2 = t3.call(this, e3) || this;
            return i2.name = e3, i2._thickness = 1, i2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "thickness", { get: function() {
            return this._thickness;
          }, set: function(t4) {
            this._thickness !== t4 && (this._thickness = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), e2.prototype._getTypeName = function() {
            return "Ellipse";
          }, e2.prototype._localDraw = function(t4) {
            t4.save(), (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (t4.shadowColor = this.shadowColor, t4.shadowBlur = this.shadowBlur, t4.shadowOffsetX = this.shadowOffsetX, t4.shadowOffsetY = this.shadowOffsetY), f.drawEllipse(this._currentMeasure.left + this._currentMeasure.width / 2, this._currentMeasure.top + this._currentMeasure.height / 2, this._currentMeasure.width / 2 - this._thickness / 2, this._currentMeasure.height / 2 - this._thickness / 2, t4), this._background && (t4.fillStyle = this._background, t4.fill()), (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (t4.shadowBlur = 0, t4.shadowOffsetX = 0, t4.shadowOffsetY = 0), this._thickness && (this.color && (t4.strokeStyle = this.color), t4.lineWidth = this._thickness, t4.stroke()), t4.restore();
          }, e2.prototype._additionalProcessing = function(e3, i2) {
            t3.prototype._additionalProcessing.call(this, e3, i2), this._measureForChildren.width -= 2 * this._thickness, this._measureForChildren.height -= 2 * this._thickness, this._measureForChildren.left += this._thickness, this._measureForChildren.top += this._thickness;
          }, e2.prototype._clipForChildren = function(t4) {
            f.drawEllipse(this._currentMeasure.left + this._currentMeasure.width / 2, this._currentMeasure.top + this._currentMeasure.height / 2, this._currentMeasure.width / 2, this._currentMeasure.height / 2, t4), t4.clip();
          }, e2;
        }(g);
        s._TypeStore.RegisteredTypes["BABYLON.GUI.Ellipse"] = I;
        var k = function(t3) {
          function e2() {
            return t3 !== null && t3.apply(this, arguments) || this;
          }
          return n(e2, t3), e2.prototype._beforeRenderText = function(t4) {
            for (var e3 = new w(), i2 = "", r2 = 0; r2 < t4.length; r2++)
              i2 += "\u2022";
            return e3.text = i2, e3;
          }, e2;
        }(x);
        s._TypeStore.RegisteredTypes["BABYLON.GUI.InputPassword"] = k;
        var A = function(t3) {
          function e2(e3) {
            var i2 = t3.call(this, e3) || this;
            return i2.name = e3, i2._lineWidth = 1, i2._x1 = new a(0), i2._y1 = new a(0), i2._x2 = new a(0), i2._y2 = new a(0), i2._dash = new Array(), i2._automaticSize = true, i2.isHitTestVisible = false, i2._horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, i2._verticalAlignment = f.VERTICAL_ALIGNMENT_TOP, i2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "dash", { get: function() {
            return this._dash;
          }, set: function(t4) {
            this._dash !== t4 && (this._dash = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "connectedControl", { get: function() {
            return this._connectedControl;
          }, set: function(t4) {
            var e3 = this;
            this._connectedControl !== t4 && (this._connectedControlDirtyObserver && this._connectedControl && (this._connectedControl.onDirtyObservable.remove(this._connectedControlDirtyObserver), this._connectedControlDirtyObserver = null), t4 && (this._connectedControlDirtyObserver = t4.onDirtyObservable.add(function() {
              return e3._markAsDirty();
            })), this._connectedControl = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "x1", { get: function() {
            return this._x1.toString(this._host);
          }, set: function(t4) {
            this._x1.toString(this._host) !== t4 && this._x1.fromString(t4) && this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "y1", { get: function() {
            return this._y1.toString(this._host);
          }, set: function(t4) {
            this._y1.toString(this._host) !== t4 && this._y1.fromString(t4) && this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "x2", { get: function() {
            return this._x2.toString(this._host);
          }, set: function(t4) {
            this._x2.toString(this._host) !== t4 && this._x2.fromString(t4) && this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "y2", { get: function() {
            return this._y2.toString(this._host);
          }, set: function(t4) {
            this._y2.toString(this._host) !== t4 && this._y2.fromString(t4) && this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "lineWidth", { get: function() {
            return this._lineWidth;
          }, set: function(t4) {
            this._lineWidth !== t4 && (this._lineWidth = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "horizontalAlignment", { set: function(t4) {
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "verticalAlignment", { set: function(t4) {
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "_effectiveX2", { get: function() {
            return (this._connectedControl ? this._connectedControl.centerX : 0) + this._x2.getValue(this._host);
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "_effectiveY2", { get: function() {
            return (this._connectedControl ? this._connectedControl.centerY : 0) + this._y2.getValue(this._host);
          }, enumerable: false, configurable: true }), e2.prototype._getTypeName = function() {
            return "Line";
          }, e2.prototype._draw = function(t4) {
            t4.save(), (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (t4.shadowColor = this.shadowColor, t4.shadowBlur = this.shadowBlur, t4.shadowOffsetX = this.shadowOffsetX, t4.shadowOffsetY = this.shadowOffsetY), this._applyStates(t4), t4.strokeStyle = this.color, t4.lineWidth = this._lineWidth, t4.setLineDash(this._dash), t4.beginPath(), t4.moveTo(this._cachedParentMeasure.left + this._x1.getValue(this._host), this._cachedParentMeasure.top + this._y1.getValue(this._host)), t4.lineTo(this._cachedParentMeasure.left + this._effectiveX2, this._cachedParentMeasure.top + this._effectiveY2), t4.stroke(), t4.restore();
          }, e2.prototype._measure = function() {
            this._currentMeasure.width = Math.abs(this._x1.getValue(this._host) - this._effectiveX2) + this._lineWidth, this._currentMeasure.height = Math.abs(this._y1.getValue(this._host) - this._effectiveY2) + this._lineWidth;
          }, e2.prototype._computeAlignment = function(t4, e3) {
            this._currentMeasure.left = t4.left + Math.min(this._x1.getValue(this._host), this._effectiveX2) - this._lineWidth / 2, this._currentMeasure.top = t4.top + Math.min(this._y1.getValue(this._host), this._effectiveY2) - this._lineWidth / 2;
          }, e2.prototype.moveToVector3 = function(t4, e3, i2) {
            if (i2 === void 0 && (i2 = false), this._host && this.parent === this._host._rootContainer) {
              var r2 = this._host._getGlobalViewport(e3), n2 = s.Vector3.Project(t4, s.Matrix.Identity(), e3.getTransformMatrix(), r2);
              this._moveToProjectedPosition(n2, i2), n2.z < 0 || n2.z > 1 ? this.notRenderable = true : this.notRenderable = false;
            } else
              s.Tools.Error("Cannot move a control to a vector3 if the control is not at root level");
          }, e2.prototype._moveToProjectedPosition = function(t4, e3) {
            e3 === void 0 && (e3 = false);
            var i2 = t4.x + this._linkOffsetX.getValue(this._host) + "px", r2 = t4.y + this._linkOffsetY.getValue(this._host) + "px";
            e3 ? (this.x2 = i2, this.y2 = r2, this._x2.ignoreAdaptiveScaling = true, this._y2.ignoreAdaptiveScaling = true) : (this.x1 = i2, this.y1 = r2, this._x1.ignoreAdaptiveScaling = true, this._y1.ignoreAdaptiveScaling = true);
          }, e2;
        }(f);
        s._TypeStore.RegisteredTypes["BABYLON.GUI.Line"] = A;
        var S = function() {
          function t3(t4) {
            this._multiLine = t4, this._x = new a(0), this._y = new a(0), this._point = new s.Vector3(0, 0, 0);
          }
          return Object.defineProperty(t3.prototype, "x", { get: function() {
            return this._x.toString(this._multiLine._host);
          }, set: function(t4) {
            this._x.toString(this._multiLine._host) !== t4 && this._x.fromString(t4) && this._multiLine._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "y", { get: function() {
            return this._y.toString(this._multiLine._host);
          }, set: function(t4) {
            this._y.toString(this._multiLine._host) !== t4 && this._y.fromString(t4) && this._multiLine._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "control", { get: function() {
            return this._control;
          }, set: function(t4) {
            this._control !== t4 && (this._control && this._controlObserver && (this._control.onDirtyObservable.remove(this._controlObserver), this._controlObserver = null), this._control = t4, this._control && (this._controlObserver = this._control.onDirtyObservable.add(this._multiLine.onPointUpdate)), this._multiLine._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "mesh", { get: function() {
            return this._mesh;
          }, set: function(t4) {
            this._mesh !== t4 && (this._mesh && this._meshObserver && this._mesh.getScene().onAfterCameraRenderObservable.remove(this._meshObserver), this._mesh = t4, this._mesh && (this._meshObserver = this._mesh.getScene().onAfterCameraRenderObservable.add(this._multiLine.onPointUpdate)), this._multiLine._markAsDirty());
          }, enumerable: false, configurable: true }), t3.prototype.resetLinks = function() {
            this.control = null, this.mesh = null;
          }, t3.prototype.translate = function() {
            return this._point = this._translatePoint(), this._point;
          }, t3.prototype._translatePoint = function() {
            if (this._mesh != null)
              return this._multiLine._host.getProjectedPositionWithZ(this._mesh.getBoundingInfo().boundingSphere.center, this._mesh.getWorldMatrix());
            if (this._control != null)
              return new s.Vector3(this._control.centerX, this._control.centerY, 1 - s.Epsilon);
            var t4 = this._multiLine._host, e2 = this._x.getValueInPixel(t4, Number(t4._canvas.width)), i2 = this._y.getValueInPixel(t4, Number(t4._canvas.height));
            return new s.Vector3(e2, i2, 1 - s.Epsilon);
          }, t3.prototype.dispose = function() {
            this.resetLinks();
          }, t3;
        }(), E = function(t3) {
          function e2(e3) {
            var i2 = t3.call(this, e3) || this;
            return i2.name = e3, i2._lineWidth = 1, i2.onPointUpdate = function() {
              i2._markAsDirty();
            }, i2._automaticSize = true, i2.isHitTestVisible = false, i2._horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, i2._verticalAlignment = f.VERTICAL_ALIGNMENT_TOP, i2._dash = [], i2._points = [], i2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "dash", { get: function() {
            return this._dash;
          }, set: function(t4) {
            this._dash !== t4 && (this._dash = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), e2.prototype.getAt = function(t4) {
            return this._points[t4] || (this._points[t4] = new S(this)), this._points[t4];
          }, e2.prototype.add = function() {
            for (var t4 = this, e3 = [], i2 = 0; i2 < arguments.length; i2++)
              e3[i2] = arguments[i2];
            return e3.map(function(e4) {
              return t4.push(e4);
            });
          }, e2.prototype.push = function(t4) {
            var e3 = this.getAt(this._points.length);
            return t4 == null || (t4 instanceof s.AbstractMesh ? e3.mesh = t4 : t4 instanceof f ? e3.control = t4 : t4.x != null && t4.y != null && (e3.x = t4.x, e3.y = t4.y)), e3;
          }, e2.prototype.remove = function(t4) {
            var e3;
            if (t4 instanceof S) {
              if ((e3 = this._points.indexOf(t4)) === -1)
                return;
            } else
              e3 = t4;
            var i2 = this._points[e3];
            i2 && (i2.dispose(), this._points.splice(e3, 1));
          }, e2.prototype.reset = function() {
            for (; this._points.length > 0; )
              this.remove(this._points.length - 1);
          }, e2.prototype.resetLinks = function() {
            this._points.forEach(function(t4) {
              t4 != null && t4.resetLinks();
            });
          }, Object.defineProperty(e2.prototype, "lineWidth", { get: function() {
            return this._lineWidth;
          }, set: function(t4) {
            this._lineWidth !== t4 && (this._lineWidth = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "horizontalAlignment", { set: function(t4) {
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "verticalAlignment", { set: function(t4) {
          }, enumerable: false, configurable: true }), e2.prototype._getTypeName = function() {
            return "MultiLine";
          }, e2.prototype._draw = function(t4, e3) {
            t4.save(), (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (t4.shadowColor = this.shadowColor, t4.shadowBlur = this.shadowBlur, t4.shadowOffsetX = this.shadowOffsetX, t4.shadowOffsetY = this.shadowOffsetY), this._applyStates(t4), t4.strokeStyle = this.color, t4.lineWidth = this._lineWidth, t4.setLineDash(this._dash), t4.beginPath();
            var i2, r2 = true;
            this._points.forEach(function(e4) {
              e4 && (r2 ? (t4.moveTo(e4._point.x, e4._point.y), r2 = false) : e4._point.z < 1 && i2.z < 1 ? t4.lineTo(e4._point.x, e4._point.y) : t4.moveTo(e4._point.x, e4._point.y), i2 = e4._point);
            }), t4.stroke(), t4.restore();
          }, e2.prototype._additionalProcessing = function(t4, e3) {
            var i2 = this;
            this._minX = null, this._minY = null, this._maxX = null, this._maxY = null, this._points.forEach(function(t5, e4) {
              t5 && (t5.translate(), (i2._minX == null || t5._point.x < i2._minX) && (i2._minX = t5._point.x), (i2._minY == null || t5._point.y < i2._minY) && (i2._minY = t5._point.y), (i2._maxX == null || t5._point.x > i2._maxX) && (i2._maxX = t5._point.x), (i2._maxY == null || t5._point.y > i2._maxY) && (i2._maxY = t5._point.y));
            }), this._minX == null && (this._minX = 0), this._minY == null && (this._minY = 0), this._maxX == null && (this._maxX = 0), this._maxY == null && (this._maxY = 0);
          }, e2.prototype._measure = function() {
            this._minX != null && this._maxX != null && this._minY != null && this._maxY != null && (this._currentMeasure.width = Math.abs(this._maxX - this._minX) + this._lineWidth, this._currentMeasure.height = Math.abs(this._maxY - this._minY) + this._lineWidth);
          }, e2.prototype._computeAlignment = function(t4, e3) {
            this._minX != null && this._minY != null && (this._currentMeasure.left = this._minX - this._lineWidth / 2, this._currentMeasure.top = this._minY - this._lineWidth / 2);
          }, e2.prototype.dispose = function() {
            this.reset(), t3.prototype.dispose.call(this);
          }, e2;
        }(f);
        s._TypeStore.RegisteredTypes["BABYLON.GUI.MultiLine"] = E;
        var D = function(t3) {
          function e2(e3) {
            var i2 = t3.call(this, e3) || this;
            return i2.name = e3, i2._isChecked = false, i2._background = "black", i2._checkSizeRatio = 0.8, i2._thickness = 1, i2.group = "", i2.onIsCheckedChangedObservable = new s.Observable(), i2.isPointerBlocker = true, i2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "thickness", { get: function() {
            return this._thickness;
          }, set: function(t4) {
            this._thickness !== t4 && (this._thickness = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "checkSizeRatio", { get: function() {
            return this._checkSizeRatio;
          }, set: function(t4) {
            t4 = Math.max(Math.min(1, t4), 0), this._checkSizeRatio !== t4 && (this._checkSizeRatio = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "background", { get: function() {
            return this._background;
          }, set: function(t4) {
            this._background !== t4 && (this._background = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "isChecked", { get: function() {
            return this._isChecked;
          }, set: function(t4) {
            var e3 = this;
            this._isChecked !== t4 && (this._isChecked = t4, this._markAsDirty(), this.onIsCheckedChangedObservable.notifyObservers(t4), this._isChecked && this._host && this._host.executeOnAllControls(function(t5) {
              if (t5 !== e3 && t5.group !== void 0) {
                var i2 = t5;
                i2.group === e3.group && (i2.isChecked = false);
              }
            }));
          }, enumerable: false, configurable: true }), e2.prototype._getTypeName = function() {
            return "RadioButton";
          }, e2.prototype._draw = function(t4) {
            t4.save(), this._applyStates(t4);
            var e3 = this._currentMeasure.width - this._thickness, i2 = this._currentMeasure.height - this._thickness;
            if ((this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (t4.shadowColor = this.shadowColor, t4.shadowBlur = this.shadowBlur, t4.shadowOffsetX = this.shadowOffsetX, t4.shadowOffsetY = this.shadowOffsetY), f.drawEllipse(this._currentMeasure.left + this._currentMeasure.width / 2, this._currentMeasure.top + this._currentMeasure.height / 2, this._currentMeasure.width / 2 - this._thickness / 2, this._currentMeasure.height / 2 - this._thickness / 2, t4), t4.fillStyle = this._isEnabled ? this._background : this._disabledColor, t4.fill(), (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (t4.shadowBlur = 0, t4.shadowOffsetX = 0, t4.shadowOffsetY = 0), t4.strokeStyle = this.color, t4.lineWidth = this._thickness, t4.stroke(), this._isChecked) {
              t4.fillStyle = this._isEnabled ? this.color : this._disabledColor;
              var r2 = e3 * this._checkSizeRatio, n2 = i2 * this._checkSizeRatio;
              f.drawEllipse(this._currentMeasure.left + this._currentMeasure.width / 2, this._currentMeasure.top + this._currentMeasure.height / 2, r2 / 2 - this._thickness / 2, n2 / 2 - this._thickness / 2, t4), t4.fill();
            }
            t4.restore();
          }, e2.prototype._onPointerDown = function(e3, i2, r2, n2, o2) {
            return !!t3.prototype._onPointerDown.call(this, e3, i2, r2, n2, o2) && (this.isChecked || (this.isChecked = true), true);
          }, e2.AddRadioButtonWithHeader = function(t4, i2, r2, n2) {
            var o2 = new C();
            o2.isVertical = false, o2.height = "30px";
            var s2 = new e2();
            s2.width = "20px", s2.height = "20px", s2.isChecked = r2, s2.color = "green", s2.group = i2, s2.onIsCheckedChangedObservable.add(function(t5) {
              return n2(s2, t5);
            }), o2.addControl(s2);
            var a2 = new y();
            return a2.text = t4, a2.width = "180px", a2.paddingLeft = "5px", a2.textHorizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, a2.color = "white", o2.addControl(a2), o2;
          }, e2;
        }(f);
        s._TypeStore.RegisteredTypes["BABYLON.GUI.RadioButton"] = D;
        var L = function(t3) {
          function e2(e3) {
            var i2 = t3.call(this, e3) || this;
            return i2.name = e3, i2._thumbWidth = new a(20, a.UNITMODE_PIXEL, false), i2._minimum = 0, i2._maximum = 100, i2._value = 50, i2._isVertical = false, i2._barOffset = new a(5, a.UNITMODE_PIXEL, false), i2._isThumbClamped = false, i2._displayThumb = true, i2._step = 0, i2._lastPointerDownID = -1, i2._effectiveBarOffset = 0, i2.onValueChangedObservable = new s.Observable(), i2._pointerIsDown = false, i2.isPointerBlocker = true, i2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "displayThumb", { get: function() {
            return this._displayThumb;
          }, set: function(t4) {
            this._displayThumb !== t4 && (this._displayThumb = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "step", { get: function() {
            return this._step;
          }, set: function(t4) {
            this._step !== t4 && (this._step = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "barOffset", { get: function() {
            return this._barOffset.toString(this._host);
          }, set: function(t4) {
            this._barOffset.toString(this._host) !== t4 && this._barOffset.fromString(t4) && this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "barOffsetInPixels", { get: function() {
            return this._barOffset.getValueInPixel(this._host, this._cachedParentMeasure.width);
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "thumbWidth", { get: function() {
            return this._thumbWidth.toString(this._host);
          }, set: function(t4) {
            this._thumbWidth.toString(this._host) !== t4 && this._thumbWidth.fromString(t4) && this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "thumbWidthInPixels", { get: function() {
            return this._thumbWidth.getValueInPixel(this._host, this._cachedParentMeasure.width);
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "minimum", { get: function() {
            return this._minimum;
          }, set: function(t4) {
            this._minimum !== t4 && (this._minimum = t4, this._markAsDirty(), this.value = Math.max(Math.min(this.value, this._maximum), this._minimum));
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "maximum", { get: function() {
            return this._maximum;
          }, set: function(t4) {
            this._maximum !== t4 && (this._maximum = t4, this._markAsDirty(), this.value = Math.max(Math.min(this.value, this._maximum), this._minimum));
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "value", { get: function() {
            return this._value;
          }, set: function(t4) {
            t4 = Math.max(Math.min(t4, this._maximum), this._minimum), this._value !== t4 && (this._value = t4, this._markAsDirty(), this.onValueChangedObservable.notifyObservers(this._value));
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "isVertical", { get: function() {
            return this._isVertical;
          }, set: function(t4) {
            this._isVertical !== t4 && (this._isVertical = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "isThumbClamped", { get: function() {
            return this._isThumbClamped;
          }, set: function(t4) {
            this._isThumbClamped !== t4 && (this._isThumbClamped = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), e2.prototype._getTypeName = function() {
            return "BaseSlider";
          }, e2.prototype._getThumbPosition = function() {
            return this.isVertical ? (this.maximum - this.value) / (this.maximum - this.minimum) * this._backgroundBoxLength : (this.value - this.minimum) / (this.maximum - this.minimum) * this._backgroundBoxLength;
          }, e2.prototype._getThumbThickness = function(t4) {
            var e3 = 0;
            switch (t4) {
              case "circle":
                e3 = this._thumbWidth.isPixel ? Math.max(this._thumbWidth.getValue(this._host), this._backgroundBoxThickness) : this._backgroundBoxThickness * this._thumbWidth.getValue(this._host);
                break;
              case "rectangle":
                e3 = this._thumbWidth.isPixel ? Math.min(this._thumbWidth.getValue(this._host), this._backgroundBoxThickness) : this._backgroundBoxThickness * this._thumbWidth.getValue(this._host);
            }
            return e3;
          }, e2.prototype._prepareRenderingData = function(t4) {
            this._effectiveBarOffset = 0, this._renderLeft = this._currentMeasure.left, this._renderTop = this._currentMeasure.top, this._renderWidth = this._currentMeasure.width, this._renderHeight = this._currentMeasure.height, this._backgroundBoxLength = Math.max(this._currentMeasure.width, this._currentMeasure.height), this._backgroundBoxThickness = Math.min(this._currentMeasure.width, this._currentMeasure.height), this._effectiveThumbThickness = this._getThumbThickness(t4), this.displayThumb && (this._backgroundBoxLength -= this._effectiveThumbThickness), this.isVertical && this._currentMeasure.height < this._currentMeasure.width ? console.error("Height should be greater than width") : (this._barOffset.isPixel ? this._effectiveBarOffset = Math.min(this._barOffset.getValue(this._host), this._backgroundBoxThickness) : this._effectiveBarOffset = this._backgroundBoxThickness * this._barOffset.getValue(this._host), this._backgroundBoxThickness -= 2 * this._effectiveBarOffset, this.isVertical ? (this._renderLeft += this._effectiveBarOffset, !this.isThumbClamped && this.displayThumb && (this._renderTop += this._effectiveThumbThickness / 2), this._renderHeight = this._backgroundBoxLength, this._renderWidth = this._backgroundBoxThickness) : (this._renderTop += this._effectiveBarOffset, !this.isThumbClamped && this.displayThumb && (this._renderLeft += this._effectiveThumbThickness / 2), this._renderHeight = this._backgroundBoxThickness, this._renderWidth = this._backgroundBoxLength));
          }, e2.prototype._updateValueFromPointer = function(t4, e3) {
            var i2;
            this.rotation != 0 && (this._invertTransformMatrix.transformCoordinates(t4, e3, this._transformedPosition), t4 = this._transformedPosition.x, e3 = this._transformedPosition.y), i2 = this._isVertical ? this._minimum + (1 - (e3 - this._currentMeasure.top) / this._currentMeasure.height) * (this._maximum - this._minimum) : this._minimum + (t4 - this._currentMeasure.left) / this._currentMeasure.width * (this._maximum - this._minimum);
            var r2 = 1 / this._step | 0;
            this.value = this._step ? (i2 * r2 | 0) / r2 : i2;
          }, e2.prototype._onPointerDown = function(e3, i2, r2, n2, o2) {
            return !!t3.prototype._onPointerDown.call(this, e3, i2, r2, n2, o2) && (this._pointerIsDown = true, this._updateValueFromPointer(i2.x, i2.y), this._host._capturingControl[r2] = this, this._lastPointerDownID = r2, true);
          }, e2.prototype._onPointerMove = function(e3, i2, r2, n2) {
            r2 == this._lastPointerDownID && (this._pointerIsDown && this._updateValueFromPointer(i2.x, i2.y), t3.prototype._onPointerMove.call(this, e3, i2, r2, n2));
          }, e2.prototype._onPointerUp = function(e3, i2, r2, n2, o2) {
            this._pointerIsDown = false, delete this._host._capturingControl[r2], t3.prototype._onPointerUp.call(this, e3, i2, r2, n2, o2);
          }, e2.prototype._onCanvasBlur = function() {
            this._forcePointerUp(), t3.prototype._onCanvasBlur.call(this);
          }, e2;
        }(f), R = function(t3) {
          function e2(e3) {
            var i2 = t3.call(this, e3) || this;
            return i2.name = e3, i2._background = "black", i2._borderColor = "white", i2._thumbColor = "", i2._isThumbCircle = false, i2._displayValueBar = true, i2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "displayValueBar", { get: function() {
            return this._displayValueBar;
          }, set: function(t4) {
            this._displayValueBar !== t4 && (this._displayValueBar = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "borderColor", { get: function() {
            return this._borderColor;
          }, set: function(t4) {
            this._borderColor !== t4 && (this._borderColor = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "background", { get: function() {
            return this._background;
          }, set: function(t4) {
            this._background !== t4 && (this._background = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "thumbColor", { get: function() {
            return this._thumbColor;
          }, set: function(t4) {
            this._thumbColor !== t4 && (this._thumbColor = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "isThumbCircle", { get: function() {
            return this._isThumbCircle;
          }, set: function(t4) {
            this._isThumbCircle !== t4 && (this._isThumbCircle = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), e2.prototype._getTypeName = function() {
            return "Slider";
          }, e2.prototype._draw = function(t4, e3) {
            t4.save(), this._applyStates(t4), this._prepareRenderingData(this.isThumbCircle ? "circle" : "rectangle");
            var i2 = this._renderLeft, r2 = this._renderTop, n2 = this._renderWidth, o2 = this._renderHeight, s2 = 0;
            this.isThumbClamped && this.isThumbCircle ? (this.isVertical ? r2 += this._effectiveThumbThickness / 2 : i2 += this._effectiveThumbThickness / 2, s2 = this._backgroundBoxThickness / 2) : s2 = (this._effectiveThumbThickness - this._effectiveBarOffset) / 2, (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (t4.shadowColor = this.shadowColor, t4.shadowBlur = this.shadowBlur, t4.shadowOffsetX = this.shadowOffsetX, t4.shadowOffsetY = this.shadowOffsetY);
            var a2 = this._getThumbPosition();
            t4.fillStyle = this._background, this.isVertical ? this.isThumbClamped ? this.isThumbCircle ? (t4.beginPath(), t4.arc(i2 + this._backgroundBoxThickness / 2, r2, s2, Math.PI, 2 * Math.PI), t4.fill(), t4.fillRect(i2, r2, n2, o2)) : t4.fillRect(i2, r2, n2, o2 + this._effectiveThumbThickness) : t4.fillRect(i2, r2, n2, o2) : this.isThumbClamped ? this.isThumbCircle ? (t4.beginPath(), t4.arc(i2 + this._backgroundBoxLength, r2 + this._backgroundBoxThickness / 2, s2, 0, 2 * Math.PI), t4.fill(), t4.fillRect(i2, r2, n2, o2)) : t4.fillRect(i2, r2, n2 + this._effectiveThumbThickness, o2) : t4.fillRect(i2, r2, n2, o2), (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (t4.shadowBlur = 0, t4.shadowOffsetX = 0, t4.shadowOffsetY = 0), t4.fillStyle = this.color, this._displayValueBar && (this.isVertical ? this.isThumbClamped ? this.isThumbCircle ? (t4.beginPath(), t4.arc(i2 + this._backgroundBoxThickness / 2, r2 + this._backgroundBoxLength, s2, 0, 2 * Math.PI), t4.fill(), t4.fillRect(i2, r2 + a2, n2, o2 - a2)) : t4.fillRect(i2, r2 + a2, n2, o2 - a2 + this._effectiveThumbThickness) : t4.fillRect(i2, r2 + a2, n2, o2 - a2) : this.isThumbClamped && this.isThumbCircle ? (t4.beginPath(), t4.arc(i2, r2 + this._backgroundBoxThickness / 2, s2, 0, 2 * Math.PI), t4.fill(), t4.fillRect(i2, r2, a2, o2)) : t4.fillRect(i2, r2, a2, o2)), t4.fillStyle = this._thumbColor || this.color, this.displayThumb && ((this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (t4.shadowColor = this.shadowColor, t4.shadowBlur = this.shadowBlur, t4.shadowOffsetX = this.shadowOffsetX, t4.shadowOffsetY = this.shadowOffsetY), this._isThumbCircle ? (t4.beginPath(), this.isVertical ? t4.arc(i2 + this._backgroundBoxThickness / 2, r2 + a2, s2, 0, 2 * Math.PI) : t4.arc(i2 + a2, r2 + this._backgroundBoxThickness / 2, s2, 0, 2 * Math.PI), t4.fill(), (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (t4.shadowBlur = 0, t4.shadowOffsetX = 0, t4.shadowOffsetY = 0), t4.strokeStyle = this._borderColor, t4.stroke()) : (this.isVertical ? t4.fillRect(i2 - this._effectiveBarOffset, this._currentMeasure.top + a2, this._currentMeasure.width, this._effectiveThumbThickness) : t4.fillRect(this._currentMeasure.left + a2, this._currentMeasure.top, this._effectiveThumbThickness, this._currentMeasure.height), (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) && (t4.shadowBlur = 0, t4.shadowOffsetX = 0, t4.shadowOffsetY = 0), t4.strokeStyle = this._borderColor, this.isVertical ? t4.strokeRect(i2 - this._effectiveBarOffset, this._currentMeasure.top + a2, this._currentMeasure.width, this._effectiveThumbThickness) : t4.strokeRect(this._currentMeasure.left + a2, this._currentMeasure.top, this._effectiveThumbThickness, this._currentMeasure.height))), t4.restore();
          }, e2;
        }(L);
        s._TypeStore.RegisteredTypes["BABYLON.GUI.Slider"] = R;
        var B = function() {
          function t3(t4) {
            this.name = t4, this._groupPanel = new C(), this._selectors = new Array(), this._groupPanel.verticalAlignment = f.VERTICAL_ALIGNMENT_TOP, this._groupPanel.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, this._groupHeader = this._addGroupHeader(t4);
          }
          return Object.defineProperty(t3.prototype, "groupPanel", { get: function() {
            return this._groupPanel;
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "selectors", { get: function() {
            return this._selectors;
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "header", { get: function() {
            return this._groupHeader.text;
          }, set: function(t4) {
            this._groupHeader.text !== "label" && (this._groupHeader.text = t4);
          }, enumerable: false, configurable: true }), t3.prototype._addGroupHeader = function(t4) {
            var e2 = new y("groupHead", t4);
            return e2.width = 0.9, e2.height = "30px", e2.textWrapping = true, e2.color = "black", e2.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, e2.textHorizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, e2.left = "2px", this._groupPanel.addControl(e2), e2;
          }, t3.prototype._getSelector = function(t4) {
            if (!(t4 < 0 || t4 >= this._selectors.length))
              return this._selectors[t4];
          }, t3.prototype.removeSelector = function(t4) {
            t4 < 0 || t4 >= this._selectors.length || (this._groupPanel.removeControl(this._selectors[t4]), this._selectors.splice(t4, 1));
          }, t3;
        }(), N = function(t3) {
          function e2() {
            return t3 !== null && t3.apply(this, arguments) || this;
          }
          return n(e2, t3), e2.prototype.addCheckbox = function(t4, e3, i2) {
            e3 === void 0 && (e3 = function(t5) {
            }), i2 === void 0 && (i2 = false);
            i2 = i2 || false;
            var r2 = new T();
            r2.width = "20px", r2.height = "20px", r2.color = "#364249", r2.background = "#CCCCCC", r2.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, r2.onIsCheckedChangedObservable.add(function(t5) {
              e3(t5);
            });
            var n2 = f.AddHeader(r2, t4, "200px", { isHorizontal: true, controlFirst: true });
            n2.height = "30px", n2.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, n2.left = "4px", this.groupPanel.addControl(n2), this.selectors.push(n2), r2.isChecked = i2, this.groupPanel.parent && this.groupPanel.parent.parent && (r2.color = this.groupPanel.parent.parent.buttonColor, r2.background = this.groupPanel.parent.parent.buttonBackground);
          }, e2.prototype._setSelectorLabel = function(t4, e3) {
            this.selectors[t4].children[1].text = e3;
          }, e2.prototype._setSelectorLabelColor = function(t4, e3) {
            this.selectors[t4].children[1].color = e3;
          }, e2.prototype._setSelectorButtonColor = function(t4, e3) {
            this.selectors[t4].children[0].color = e3;
          }, e2.prototype._setSelectorButtonBackground = function(t4, e3) {
            this.selectors[t4].children[0].background = e3;
          }, e2;
        }(B), H = function(t3) {
          function e2() {
            var e3 = t3 !== null && t3.apply(this, arguments) || this;
            return e3._selectNb = 0, e3;
          }
          return n(e2, t3), e2.prototype.addRadio = function(t4, e3, i2) {
            e3 === void 0 && (e3 = function(t5) {
            }), i2 === void 0 && (i2 = false);
            var r2 = this._selectNb++, n2 = new D();
            n2.name = t4, n2.width = "20px", n2.height = "20px", n2.color = "#364249", n2.background = "#CCCCCC", n2.group = this.name, n2.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, n2.onIsCheckedChangedObservable.add(function(t5) {
              t5 && e3(r2);
            });
            var o2 = f.AddHeader(n2, t4, "200px", { isHorizontal: true, controlFirst: true });
            o2.height = "30px", o2.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, o2.left = "4px", this.groupPanel.addControl(o2), this.selectors.push(o2), n2.isChecked = i2, this.groupPanel.parent && this.groupPanel.parent.parent && (n2.color = this.groupPanel.parent.parent.buttonColor, n2.background = this.groupPanel.parent.parent.buttonBackground);
          }, e2.prototype._setSelectorLabel = function(t4, e3) {
            this.selectors[t4].children[1].text = e3;
          }, e2.prototype._setSelectorLabelColor = function(t4, e3) {
            this.selectors[t4].children[1].color = e3;
          }, e2.prototype._setSelectorButtonColor = function(t4, e3) {
            this.selectors[t4].children[0].color = e3;
          }, e2.prototype._setSelectorButtonBackground = function(t4, e3) {
            this.selectors[t4].children[0].background = e3;
          }, e2;
        }(B), V = function(t3) {
          function e2() {
            return t3 !== null && t3.apply(this, arguments) || this;
          }
          return n(e2, t3), e2.prototype.addSlider = function(t4, e3, i2, r2, n2, o2, s2) {
            e3 === void 0 && (e3 = function(t5) {
            }), i2 === void 0 && (i2 = "Units"), r2 === void 0 && (r2 = 0), n2 === void 0 && (n2 = 0), o2 === void 0 && (o2 = 0), s2 === void 0 && (s2 = function(t5) {
              return 0 | t5;
            });
            var a2 = new R();
            a2.name = i2, a2.value = o2, a2.minimum = r2, a2.maximum = n2, a2.width = 0.9, a2.height = "20px", a2.color = "#364249", a2.background = "#CCCCCC", a2.borderColor = "black", a2.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, a2.left = "4px", a2.paddingBottom = "4px", a2.onValueChangedObservable.add(function(t5) {
              a2.parent.children[0].text = a2.parent.children[0].name + ": " + s2(t5) + " " + a2.name, e3(t5);
            });
            var h2 = f.AddHeader(a2, t4 + ": " + s2(o2) + " " + i2, "30px", { isHorizontal: false, controlFirst: false });
            h2.height = "60px", h2.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, h2.left = "4px", h2.children[0].name = t4, this.groupPanel.addControl(h2), this.selectors.push(h2), this.groupPanel.parent && this.groupPanel.parent.parent && (a2.color = this.groupPanel.parent.parent.buttonColor, a2.background = this.groupPanel.parent.parent.buttonBackground);
          }, e2.prototype._setSelectorLabel = function(t4, e3) {
            this.selectors[t4].children[0].name = e3, this.selectors[t4].children[0].text = e3 + ": " + this.selectors[t4].children[1].value + " " + this.selectors[t4].children[1].name;
          }, e2.prototype._setSelectorLabelColor = function(t4, e3) {
            this.selectors[t4].children[0].color = e3;
          }, e2.prototype._setSelectorButtonColor = function(t4, e3) {
            this.selectors[t4].children[1].color = e3;
          }, e2.prototype._setSelectorButtonBackground = function(t4, e3) {
            this.selectors[t4].children[1].background = e3;
          }, e2;
        }(B), W = function(t3) {
          function e2(e3, i2) {
            i2 === void 0 && (i2 = []);
            var r2 = t3.call(this, e3) || this;
            if (r2.name = e3, r2.groups = i2, r2._buttonColor = "#364249", r2._buttonBackground = "#CCCCCC", r2._headerColor = "black", r2._barColor = "white", r2._barHeight = "2px", r2._spacerHeight = "20px", r2._bars = new Array(), r2._groups = i2, r2.thickness = 2, r2._panel = new C(), r2._panel.verticalAlignment = f.VERTICAL_ALIGNMENT_TOP, r2._panel.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, r2._panel.top = 5, r2._panel.left = 5, r2._panel.width = 0.95, i2.length > 0) {
              for (var n2 = 0; n2 < i2.length - 1; n2++)
                r2._panel.addControl(i2[n2].groupPanel), r2._addSpacer();
              r2._panel.addControl(i2[i2.length - 1].groupPanel);
            }
            return r2.addControl(r2._panel), r2;
          }
          return n(e2, t3), e2.prototype._getTypeName = function() {
            return "SelectionPanel";
          }, Object.defineProperty(e2.prototype, "panel", { get: function() {
            return this._panel;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "headerColor", { get: function() {
            return this._headerColor;
          }, set: function(t4) {
            this._headerColor !== t4 && (this._headerColor = t4, this._setHeaderColor());
          }, enumerable: false, configurable: true }), e2.prototype._setHeaderColor = function() {
            for (var t4 = 0; t4 < this._groups.length; t4++)
              this._groups[t4].groupPanel.children[0].color = this._headerColor;
          }, Object.defineProperty(e2.prototype, "buttonColor", { get: function() {
            return this._buttonColor;
          }, set: function(t4) {
            this._buttonColor !== t4 && (this._buttonColor = t4, this._setbuttonColor());
          }, enumerable: false, configurable: true }), e2.prototype._setbuttonColor = function() {
            for (var t4 = 0; t4 < this._groups.length; t4++)
              for (var e3 = 0; e3 < this._groups[t4].selectors.length; e3++)
                this._groups[t4]._setSelectorButtonColor(e3, this._buttonColor);
          }, Object.defineProperty(e2.prototype, "labelColor", { get: function() {
            return this._labelColor;
          }, set: function(t4) {
            this._labelColor !== t4 && (this._labelColor = t4, this._setLabelColor());
          }, enumerable: false, configurable: true }), e2.prototype._setLabelColor = function() {
            for (var t4 = 0; t4 < this._groups.length; t4++)
              for (var e3 = 0; e3 < this._groups[t4].selectors.length; e3++)
                this._groups[t4]._setSelectorLabelColor(e3, this._labelColor);
          }, Object.defineProperty(e2.prototype, "buttonBackground", { get: function() {
            return this._buttonBackground;
          }, set: function(t4) {
            this._buttonBackground !== t4 && (this._buttonBackground = t4, this._setButtonBackground());
          }, enumerable: false, configurable: true }), e2.prototype._setButtonBackground = function() {
            for (var t4 = 0; t4 < this._groups.length; t4++)
              for (var e3 = 0; e3 < this._groups[t4].selectors.length; e3++)
                this._groups[t4]._setSelectorButtonBackground(e3, this._buttonBackground);
          }, Object.defineProperty(e2.prototype, "barColor", { get: function() {
            return this._barColor;
          }, set: function(t4) {
            this._barColor !== t4 && (this._barColor = t4, this._setBarColor());
          }, enumerable: false, configurable: true }), e2.prototype._setBarColor = function() {
            for (var t4 = 0; t4 < this._bars.length; t4++)
              this._bars[t4].children[0].background = this._barColor;
          }, Object.defineProperty(e2.prototype, "barHeight", { get: function() {
            return this._barHeight;
          }, set: function(t4) {
            this._barHeight !== t4 && (this._barHeight = t4, this._setBarHeight());
          }, enumerable: false, configurable: true }), e2.prototype._setBarHeight = function() {
            for (var t4 = 0; t4 < this._bars.length; t4++)
              this._bars[t4].children[0].height = this._barHeight;
          }, Object.defineProperty(e2.prototype, "spacerHeight", { get: function() {
            return this._spacerHeight;
          }, set: function(t4) {
            this._spacerHeight !== t4 && (this._spacerHeight = t4, this._setSpacerHeight());
          }, enumerable: false, configurable: true }), e2.prototype._setSpacerHeight = function() {
            for (var t4 = 0; t4 < this._bars.length; t4++)
              this._bars[t4].height = this._spacerHeight;
          }, e2.prototype._addSpacer = function() {
            var t4 = new g();
            t4.width = 1, t4.height = this._spacerHeight, t4.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT;
            var e3 = new b();
            e3.width = 1, e3.height = this._barHeight, e3.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, e3.verticalAlignment = f.VERTICAL_ALIGNMENT_CENTER, e3.background = this._barColor, e3.color = "transparent", t4.addControl(e3), this._panel.addControl(t4), this._bars.push(t4);
          }, e2.prototype.addGroup = function(t4) {
            this._groups.length > 0 && this._addSpacer(), this._panel.addControl(t4.groupPanel), this._groups.push(t4), t4.groupPanel.children[0].color = this._headerColor;
            for (var e3 = 0; e3 < t4.selectors.length; e3++)
              t4._setSelectorButtonColor(e3, this._buttonColor), t4._setSelectorButtonBackground(e3, this._buttonBackground);
          }, e2.prototype.removeGroup = function(t4) {
            if (!(t4 < 0 || t4 >= this._groups.length)) {
              var e3 = this._groups[t4];
              this._panel.removeControl(e3.groupPanel), this._groups.splice(t4, 1), t4 < this._bars.length && (this._panel.removeControl(this._bars[t4]), this._bars.splice(t4, 1));
            }
          }, e2.prototype.setHeaderName = function(t4, e3) {
            e3 < 0 || e3 >= this._groups.length || (this._groups[e3].groupPanel.children[0].text = t4);
          }, e2.prototype.relabel = function(t4, e3, i2) {
            if (!(e3 < 0 || e3 >= this._groups.length)) {
              var r2 = this._groups[e3];
              i2 < 0 || i2 >= r2.selectors.length || r2._setSelectorLabel(i2, t4);
            }
          }, e2.prototype.removeFromGroupSelector = function(t4, e3) {
            if (!(t4 < 0 || t4 >= this._groups.length)) {
              var i2 = this._groups[t4];
              e3 < 0 || e3 >= i2.selectors.length || i2.removeSelector(e3);
            }
          }, e2.prototype.addToGroupCheckbox = function(t4, e3, i2, r2) {
            (i2 === void 0 && (i2 = function() {
            }), r2 === void 0 && (r2 = false), t4 < 0 || t4 >= this._groups.length) || this._groups[t4].addCheckbox(e3, i2, r2);
          }, e2.prototype.addToGroupRadio = function(t4, e3, i2, r2) {
            (i2 === void 0 && (i2 = function() {
            }), r2 === void 0 && (r2 = false), t4 < 0 || t4 >= this._groups.length) || this._groups[t4].addRadio(e3, i2, r2);
          }, e2.prototype.addToGroupSlider = function(t4, e3, i2, r2, n2, o2, s2, a2) {
            (i2 === void 0 && (i2 = function() {
            }), r2 === void 0 && (r2 = "Units"), n2 === void 0 && (n2 = 0), o2 === void 0 && (o2 = 0), s2 === void 0 && (s2 = 0), a2 === void 0 && (a2 = function(t5) {
              return 0 | t5;
            }), t4 < 0 || t4 >= this._groups.length) || this._groups[t4].addSlider(e3, i2, r2, n2, o2, s2, a2);
          }, e2;
        }(b), F = function(t3) {
          function e2(e3) {
            var i2 = t3.call(this, e3) || this;
            return i2._freezeControls = false, i2._bucketWidth = 0, i2._bucketHeight = 0, i2._buckets = {}, i2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "freezeControls", { get: function() {
            return this._freezeControls;
          }, set: function(t4) {
            if (this._freezeControls !== t4) {
              t4 || this._restoreMeasures(), this._freezeControls = false;
              var e3 = this.host.getSize(), i2 = e3.width, r2 = e3.height, n2 = this.host.getContext(), o2 = new _(0, 0, i2, r2);
              this.host._numLayoutCalls = 0, this.host._rootContainer._layout(o2, n2), t4 && (this._updateMeasures(), this._useBuckets() && this._makeBuckets()), this._freezeControls = t4, this.host.markAsDirty();
            }
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "bucketWidth", { get: function() {
            return this._bucketWidth;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "bucketHeight", { get: function() {
            return this._bucketHeight;
          }, enumerable: false, configurable: true }), e2.prototype.setBucketSizes = function(t4, e3) {
            this._bucketWidth = t4, this._bucketHeight = e3, this._useBuckets() ? this._freezeControls && this._makeBuckets() : this._buckets = {};
          }, e2.prototype._useBuckets = function() {
            return this._bucketWidth > 0 && this._bucketHeight > 0;
          }, e2.prototype._makeBuckets = function() {
            this._buckets = {}, this._bucketLen = Math.ceil(this.widthInPixels / this._bucketWidth), this._dispatchInBuckets(this._children), this._oldLeft = null, this._oldTop = null;
          }, e2.prototype._dispatchInBuckets = function(t4) {
            for (var e3 = 0; e3 < t4.length; ++e3) {
              for (var i2 = t4[e3], r2 = Math.max(0, Math.floor((i2._customData._origLeft - this._customData.origLeft) / this._bucketWidth)), n2 = Math.floor((i2._customData._origLeft - this._customData.origLeft + i2._currentMeasure.width - 1) / this._bucketWidth), o2 = Math.max(0, Math.floor((i2._customData._origTop - this._customData.origTop) / this._bucketHeight)), s2 = Math.floor((i2._customData._origTop - this._customData.origTop + i2._currentMeasure.height - 1) / this._bucketHeight); o2 <= s2; ) {
                for (var a2 = r2; a2 <= n2; ++a2) {
                  var h2 = o2 * this._bucketLen + a2, l2 = this._buckets[h2];
                  l2 || (l2 = [], this._buckets[h2] = l2), l2.push(i2);
                }
                o2++;
              }
              i2 instanceof g && i2._children.length > 0 && this._dispatchInBuckets(i2._children);
            }
          }, e2.prototype._updateMeasures = function() {
            var t4 = 0 | this.leftInPixels, e3 = 0 | this.topInPixels;
            this._measureForChildren.left -= t4, this._measureForChildren.top -= e3, this._currentMeasure.left -= t4, this._currentMeasure.top -= e3, this._customData.origLeftForChildren = this._measureForChildren.left, this._customData.origTopForChildren = this._measureForChildren.top, this._customData.origLeft = this._currentMeasure.left, this._customData.origTop = this._currentMeasure.top, this._updateChildrenMeasures(this._children, t4, e3);
          }, e2.prototype._updateChildrenMeasures = function(t4, e3, i2) {
            for (var r2 = 0; r2 < t4.length; ++r2) {
              var n2 = t4[r2];
              n2._currentMeasure.left -= e3, n2._currentMeasure.top -= i2, n2._customData._origLeft = n2._currentMeasure.left, n2._customData._origTop = n2._currentMeasure.top, n2 instanceof g && n2._children.length > 0 && this._updateChildrenMeasures(n2._children, e3, i2);
            }
          }, e2.prototype._restoreMeasures = function() {
            var t4 = 0 | this.leftInPixels, e3 = 0 | this.topInPixels;
            this._measureForChildren.left = this._customData.origLeftForChildren + t4, this._measureForChildren.top = this._customData.origTopForChildren + e3, this._currentMeasure.left = this._customData.origLeft + t4, this._currentMeasure.top = this._customData.origTop + e3;
          }, e2.prototype._getTypeName = function() {
            return "ScrollViewerWindow";
          }, e2.prototype._additionalProcessing = function(e3, i2) {
            t3.prototype._additionalProcessing.call(this, e3, i2), this._parentMeasure = e3, this._measureForChildren.left = this._currentMeasure.left, this._measureForChildren.top = this._currentMeasure.top, this._measureForChildren.width = e3.width, this._measureForChildren.height = e3.height;
          }, e2.prototype._layout = function(e3, i2) {
            return this._freezeControls ? (this.invalidateRect(), false) : t3.prototype._layout.call(this, e3, i2);
          }, e2.prototype._scrollChildren = function(t4, e3, i2) {
            for (var r2 = 0; r2 < t4.length; ++r2) {
              var n2 = t4[r2];
              n2._currentMeasure.left = n2._customData._origLeft + e3, n2._currentMeasure.top = n2._customData._origTop + i2, n2._isClipped = false, n2 instanceof g && n2._children.length > 0 && this._scrollChildren(n2._children, e3, i2);
            }
          }, e2.prototype._scrollChildrenWithBuckets = function(t4, e3, i2, r2) {
            for (var n2 = Math.max(0, Math.floor(-t4 / this._bucketWidth)), o2 = Math.floor((-t4 + this._parentMeasure.width - 1) / this._bucketWidth), s2 = Math.max(0, Math.floor(-e3 / this._bucketHeight)), a2 = Math.floor((-e3 + this._parentMeasure.height - 1) / this._bucketHeight); s2 <= a2; ) {
              for (var h2 = n2; h2 <= o2; ++h2) {
                var l2 = s2 * this._bucketLen + h2, u2 = this._buckets[l2];
                if (u2)
                  for (var c2 = 0; c2 < u2.length; ++c2) {
                    var _2 = u2[c2];
                    _2._currentMeasure.left = _2._customData._origLeft + i2, _2._currentMeasure.top = _2._customData._origTop + r2, _2._isClipped = false;
                  }
              }
              s2++;
            }
          }, e2.prototype._draw = function(e3, i2) {
            if (this._freezeControls) {
              this._localDraw(e3), this.clipChildren && this._clipForChildren(e3);
              var r2 = 0 | this.leftInPixels, n2 = 0 | this.topInPixels;
              this._useBuckets() && this._oldLeft !== null && this._oldTop !== null ? (this._scrollChildrenWithBuckets(this._oldLeft, this._oldTop, r2, n2), this._scrollChildrenWithBuckets(r2, n2, r2, n2)) : this._scrollChildren(this._children, r2, n2), this._oldLeft = r2, this._oldTop = n2;
              for (var o2 = 0, s2 = this._children; o2 < s2.length; o2++) {
                var a2 = s2[o2];
                a2._intersectsRect(this._parentMeasure) && a2._render(e3, this._parentMeasure);
              }
            } else
              t3.prototype._draw.call(this, e3, i2);
          }, e2.prototype._postMeasure = function() {
            if (this._freezeControls)
              t3.prototype._postMeasure.call(this);
            else {
              for (var e3 = this.parentClientWidth, i2 = this.parentClientHeight, r2 = 0, n2 = this.children; r2 < n2.length; r2++) {
                var o2 = n2[r2];
                o2.isVisible && !o2.notRenderable && (o2.horizontalAlignment === f.HORIZONTAL_ALIGNMENT_CENTER && o2._offsetLeft(this._currentMeasure.left - o2._currentMeasure.left), o2.verticalAlignment === f.VERTICAL_ALIGNMENT_CENTER && o2._offsetTop(this._currentMeasure.top - o2._currentMeasure.top), e3 = Math.max(e3, o2._currentMeasure.left - this._currentMeasure.left + o2._currentMeasure.width + o2.paddingRightInPixels), i2 = Math.max(i2, o2._currentMeasure.top - this._currentMeasure.top + o2._currentMeasure.height + o2.paddingBottomInPixels));
              }
              this._currentMeasure.width !== e3 && (this._width.updateInPlace(e3, a.UNITMODE_PIXEL), this._currentMeasure.width = e3, this._rebuildLayout = true, this._isDirty = true), this._currentMeasure.height !== i2 && (this._height.updateInPlace(i2, a.UNITMODE_PIXEL), this._currentMeasure.height = i2, this._rebuildLayout = true, this._isDirty = true), t3.prototype._postMeasure.call(this);
            }
          }, e2;
        }(g), j = function(t3) {
          function e2(e3) {
            var i2 = t3.call(this, e3) || this;
            return i2.name = e3, i2._background = "black", i2._borderColor = "white", i2._tempMeasure = new _(0, 0, 0, 0), i2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "borderColor", { get: function() {
            return this._borderColor;
          }, set: function(t4) {
            this._borderColor !== t4 && (this._borderColor = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "background", { get: function() {
            return this._background;
          }, set: function(t4) {
            this._background !== t4 && (this._background = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), e2.prototype._getTypeName = function() {
            return "Scrollbar";
          }, e2.prototype._getThumbThickness = function() {
            return this._thumbWidth.isPixel ? this._thumbWidth.getValue(this._host) : this._backgroundBoxThickness * this._thumbWidth.getValue(this._host);
          }, e2.prototype._draw = function(t4) {
            t4.save(), this._applyStates(t4), this._prepareRenderingData("rectangle");
            var e3 = this._renderLeft, i2 = this._getThumbPosition();
            t4.fillStyle = this._background, t4.fillRect(this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height), t4.fillStyle = this.color, this.isVertical ? (this._tempMeasure.left = e3 - this._effectiveBarOffset, this._tempMeasure.top = this._currentMeasure.top + i2, this._tempMeasure.width = this._currentMeasure.width, this._tempMeasure.height = this._effectiveThumbThickness) : (this._tempMeasure.left = this._currentMeasure.left + i2, this._tempMeasure.top = this._currentMeasure.top, this._tempMeasure.width = this._effectiveThumbThickness, this._tempMeasure.height = this._currentMeasure.height), t4.fillRect(this._tempMeasure.left, this._tempMeasure.top, this._tempMeasure.width, this._tempMeasure.height), t4.restore();
          }, e2.prototype._updateValueFromPointer = function(t4, e3) {
            this.rotation != 0 && (this._invertTransformMatrix.transformCoordinates(t4, e3, this._transformedPosition), t4 = this._transformedPosition.x, e3 = this._transformedPosition.y), this._first && (this._first = false, this._originX = t4, this._originY = e3, (t4 < this._tempMeasure.left || t4 > this._tempMeasure.left + this._tempMeasure.width || e3 < this._tempMeasure.top || e3 > this._tempMeasure.top + this._tempMeasure.height) && (this.isVertical ? this.value = this.minimum + (1 - (e3 - this._currentMeasure.top) / this._currentMeasure.height) * (this.maximum - this.minimum) : this.value = this.minimum + (t4 - this._currentMeasure.left) / this._currentMeasure.width * (this.maximum - this.minimum)));
            var i2 = 0;
            i2 = this.isVertical ? -(e3 - this._originY) / (this._currentMeasure.height - this._effectiveThumbThickness) : (t4 - this._originX) / (this._currentMeasure.width - this._effectiveThumbThickness), this.value += i2 * (this.maximum - this.minimum), this._originX = t4, this._originY = e3;
          }, e2.prototype._onPointerDown = function(e3, i2, r2, n2, o2) {
            return this._first = true, t3.prototype._onPointerDown.call(this, e3, i2, r2, n2, o2);
          }, e2;
        }(L), z = function(t3) {
          function e2(e3) {
            var i2 = t3.call(this, e3) || this;
            return i2.name = e3, i2._thumbLength = 0.5, i2._thumbHeight = 1, i2._barImageHeight = 1, i2._tempMeasure = new _(0, 0, 0, 0), i2.num90RotationInVerticalMode = 1, i2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "backgroundImage", { get: function() {
            return this._backgroundBaseImage;
          }, set: function(t4) {
            var e3 = this;
            this._backgroundBaseImage !== t4 && (this._backgroundBaseImage = t4, this.isVertical && this.num90RotationInVerticalMode !== 0 ? t4.isLoaded ? (this._backgroundImage = t4._rotate90(this.num90RotationInVerticalMode, true), this._markAsDirty()) : t4.onImageLoadedObservable.addOnce(function() {
              var i2 = t4._rotate90(e3.num90RotationInVerticalMode, true);
              e3._backgroundImage = i2, i2.isLoaded || i2.onImageLoadedObservable.addOnce(function() {
                e3._markAsDirty();
              }), e3._markAsDirty();
            }) : (this._backgroundImage = t4, t4 && !t4.isLoaded && t4.onImageLoadedObservable.addOnce(function() {
              e3._markAsDirty();
            }), this._markAsDirty()));
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "thumbImage", { get: function() {
            return this._thumbBaseImage;
          }, set: function(t4) {
            var e3 = this;
            this._thumbBaseImage !== t4 && (this._thumbBaseImage = t4, this.isVertical && this.num90RotationInVerticalMode !== 0 ? t4.isLoaded ? (this._thumbImage = t4._rotate90(-this.num90RotationInVerticalMode, true), this._markAsDirty()) : t4.onImageLoadedObservable.addOnce(function() {
              var i2 = t4._rotate90(-e3.num90RotationInVerticalMode, true);
              e3._thumbImage = i2, i2.isLoaded || i2.onImageLoadedObservable.addOnce(function() {
                e3._markAsDirty();
              }), e3._markAsDirty();
            }) : (this._thumbImage = t4, t4 && !t4.isLoaded && t4.onImageLoadedObservable.addOnce(function() {
              e3._markAsDirty();
            }), this._markAsDirty()));
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "thumbLength", { get: function() {
            return this._thumbLength;
          }, set: function(t4) {
            this._thumbLength !== t4 && (this._thumbLength = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "thumbHeight", { get: function() {
            return this._thumbHeight;
          }, set: function(t4) {
            this._thumbLength !== t4 && (this._thumbHeight = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "barImageHeight", { get: function() {
            return this._barImageHeight;
          }, set: function(t4) {
            this._barImageHeight !== t4 && (this._barImageHeight = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), e2.prototype._getTypeName = function() {
            return "ImageScrollBar";
          }, e2.prototype._getThumbThickness = function() {
            return this._thumbWidth.isPixel ? this._thumbWidth.getValue(this._host) : this._backgroundBoxThickness * this._thumbWidth.getValue(this._host);
          }, e2.prototype._draw = function(t4) {
            t4.save(), this._applyStates(t4), this._prepareRenderingData("rectangle");
            var e3 = this._getThumbPosition(), i2 = this._renderLeft, r2 = this._renderTop, n2 = this._renderWidth, o2 = this._renderHeight;
            this._backgroundImage && (this._tempMeasure.copyFromFloats(i2, r2, n2, o2), this.isVertical ? (this._tempMeasure.copyFromFloats(i2 + n2 * (1 - this._barImageHeight) * 0.5, this._currentMeasure.top, n2 * this._barImageHeight, o2), this._tempMeasure.height += this._effectiveThumbThickness, this._backgroundImage._currentMeasure.copyFrom(this._tempMeasure)) : (this._tempMeasure.copyFromFloats(this._currentMeasure.left, r2 + o2 * (1 - this._barImageHeight) * 0.5, n2, o2 * this._barImageHeight), this._tempMeasure.width += this._effectiveThumbThickness, this._backgroundImage._currentMeasure.copyFrom(this._tempMeasure)), this._backgroundImage._draw(t4)), this.isVertical ? this._tempMeasure.copyFromFloats(i2 - this._effectiveBarOffset + this._currentMeasure.width * (1 - this._thumbHeight) * 0.5, this._currentMeasure.top + e3, this._currentMeasure.width * this._thumbHeight, this._effectiveThumbThickness) : this._tempMeasure.copyFromFloats(this._currentMeasure.left + e3, this._currentMeasure.top + this._currentMeasure.height * (1 - this._thumbHeight) * 0.5, this._effectiveThumbThickness, this._currentMeasure.height * this._thumbHeight), this._thumbImage && (this._thumbImage._currentMeasure.copyFrom(this._tempMeasure), this._thumbImage._draw(t4)), t4.restore();
          }, e2.prototype._updateValueFromPointer = function(t4, e3) {
            this.rotation != 0 && (this._invertTransformMatrix.transformCoordinates(t4, e3, this._transformedPosition), t4 = this._transformedPosition.x, e3 = this._transformedPosition.y), this._first && (this._first = false, this._originX = t4, this._originY = e3, (t4 < this._tempMeasure.left || t4 > this._tempMeasure.left + this._tempMeasure.width || e3 < this._tempMeasure.top || e3 > this._tempMeasure.top + this._tempMeasure.height) && (this.isVertical ? this.value = this.minimum + (1 - (e3 - this._currentMeasure.top) / this._currentMeasure.height) * (this.maximum - this.minimum) : this.value = this.minimum + (t4 - this._currentMeasure.left) / this._currentMeasure.width * (this.maximum - this.minimum)));
            var i2 = 0;
            i2 = this.isVertical ? -(e3 - this._originY) / (this._currentMeasure.height - this._effectiveThumbThickness) : (t4 - this._originX) / (this._currentMeasure.width - this._effectiveThumbThickness), this.value += i2 * (this.maximum - this.minimum), this._originX = t4, this._originY = e3;
          }, e2.prototype._onPointerDown = function(e3, i2, r2, n2, o2) {
            return this._first = true, t3.prototype._onPointerDown.call(this, e3, i2, r2, n2, o2);
          }, e2;
        }(L), G = function(t3) {
          function e2(e3, i2) {
            var r2 = t3.call(this, e3) || this;
            return r2._barSize = 20, r2._pointerIsOver = false, r2._wheelPrecision = 0.05, r2._thumbLength = 0.5, r2._thumbHeight = 1, r2._barImageHeight = 1, r2._horizontalBarImageHeight = 1, r2._verticalBarImageHeight = 1, r2._oldWindowContentsWidth = 0, r2._oldWindowContentsHeight = 0, r2._forceHorizontalBar = false, r2._forceVerticalBar = false, r2._useImageBar = i2 || false, r2.onDirtyObservable.add(function() {
              r2._horizontalBarSpace.color = r2.color, r2._verticalBarSpace.color = r2.color, r2._dragSpace.color = r2.color;
            }), r2.onPointerEnterObservable.add(function() {
              r2._pointerIsOver = true;
            }), r2.onPointerOutObservable.add(function() {
              r2._pointerIsOver = false;
            }), r2._grid = new P(), r2._useImageBar ? (r2._horizontalBar = new z(), r2._verticalBar = new z()) : (r2._horizontalBar = new j(), r2._verticalBar = new j()), r2._window = new F("scrollViewer_window"), r2._window.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, r2._window.verticalAlignment = f.VERTICAL_ALIGNMENT_TOP, r2._grid.addColumnDefinition(1), r2._grid.addColumnDefinition(0, true), r2._grid.addRowDefinition(1), r2._grid.addRowDefinition(0, true), t3.prototype.addControl.call(r2, r2._grid), r2._grid.addControl(r2._window, 0, 0), r2._verticalBarSpace = new b(), r2._verticalBarSpace.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, r2._verticalBarSpace.verticalAlignment = f.VERTICAL_ALIGNMENT_TOP, r2._verticalBarSpace.thickness = 1, r2._grid.addControl(r2._verticalBarSpace, 0, 1), r2._addBar(r2._verticalBar, r2._verticalBarSpace, true, Math.PI), r2._horizontalBarSpace = new b(), r2._horizontalBarSpace.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, r2._horizontalBarSpace.verticalAlignment = f.VERTICAL_ALIGNMENT_TOP, r2._horizontalBarSpace.thickness = 1, r2._grid.addControl(r2._horizontalBarSpace, 1, 0), r2._addBar(r2._horizontalBar, r2._horizontalBarSpace, false, 0), r2._dragSpace = new b(), r2._dragSpace.thickness = 1, r2._grid.addControl(r2._dragSpace, 1, 1), r2._useImageBar || (r2.barColor = "grey", r2.barBackground = "transparent"), r2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "horizontalBar", { get: function() {
            return this._horizontalBar;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "verticalBar", { get: function() {
            return this._verticalBar;
          }, enumerable: false, configurable: true }), e2.prototype.addControl = function(t4) {
            return t4 ? (this._window.addControl(t4), this) : this;
          }, e2.prototype.removeControl = function(t4) {
            return this._window.removeControl(t4), this;
          }, Object.defineProperty(e2.prototype, "children", { get: function() {
            return this._window.children;
          }, enumerable: false, configurable: true }), e2.prototype._flagDescendantsAsMatrixDirty = function() {
            for (var t4 = 0, e3 = this._children; t4 < e3.length; t4++) {
              e3[t4]._markMatrixAsDirty();
            }
          }, Object.defineProperty(e2.prototype, "freezeControls", { get: function() {
            return this._window.freezeControls;
          }, set: function(t4) {
            this._window.freezeControls = t4;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "bucketWidth", { get: function() {
            return this._window.bucketWidth;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "bucketHeight", { get: function() {
            return this._window.bucketHeight;
          }, enumerable: false, configurable: true }), e2.prototype.setBucketSizes = function(t4, e3) {
            this._window.setBucketSizes(t4, e3);
          }, Object.defineProperty(e2.prototype, "forceHorizontalBar", { get: function() {
            return this._forceHorizontalBar;
          }, set: function(t4) {
            this._grid.setRowDefinition(1, t4 ? this._barSize : 0, true), this._horizontalBar.isVisible = t4, this._forceHorizontalBar = t4;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "forceVerticalBar", { get: function() {
            return this._forceVerticalBar;
          }, set: function(t4) {
            this._grid.setColumnDefinition(1, t4 ? this._barSize : 0, true), this._verticalBar.isVisible = t4, this._forceVerticalBar = t4;
          }, enumerable: false, configurable: true }), e2.prototype.resetWindow = function() {
            this._window.width = "100%", this._window.height = "100%";
          }, e2.prototype._getTypeName = function() {
            return "ScrollViewer";
          }, e2.prototype._buildClientSizes = function() {
            var t4 = this.host.idealRatio;
            this._window.parentClientWidth = this._currentMeasure.width - (this._verticalBar.isVisible || this.forceVerticalBar ? this._barSize * t4 : 0) - 2 * this.thickness, this._window.parentClientHeight = this._currentMeasure.height - (this._horizontalBar.isVisible || this.forceHorizontalBar ? this._barSize * t4 : 0) - 2 * this.thickness, this._clientWidth = this._window.parentClientWidth, this._clientHeight = this._window.parentClientHeight;
          }, e2.prototype._additionalProcessing = function(e3, i2) {
            t3.prototype._additionalProcessing.call(this, e3, i2), this._buildClientSizes();
          }, e2.prototype._postMeasure = function() {
            t3.prototype._postMeasure.call(this), this._updateScroller(), this._setWindowPosition(false);
          }, Object.defineProperty(e2.prototype, "wheelPrecision", { get: function() {
            return this._wheelPrecision;
          }, set: function(t4) {
            this._wheelPrecision !== t4 && (t4 < 0 && (t4 = 0), t4 > 1 && (t4 = 1), this._wheelPrecision = t4);
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "scrollBackground", { get: function() {
            return this._horizontalBarSpace.background;
          }, set: function(t4) {
            this._horizontalBarSpace.background !== t4 && (this._horizontalBarSpace.background = t4, this._verticalBarSpace.background = t4);
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "barColor", { get: function() {
            return this._barColor;
          }, set: function(t4) {
            this._barColor !== t4 && (this._barColor = t4, this._horizontalBar.color = t4, this._verticalBar.color = t4);
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "thumbImage", { get: function() {
            return this._barImage;
          }, set: function(t4) {
            if (this._barImage !== t4) {
              this._barImage = t4;
              var e3 = this._horizontalBar, i2 = this._verticalBar;
              e3.thumbImage = t4, i2.thumbImage = t4;
            }
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "horizontalThumbImage", { get: function() {
            return this._horizontalBarImage;
          }, set: function(t4) {
            this._horizontalBarImage !== t4 && (this._horizontalBarImage = t4, this._horizontalBar.thumbImage = t4);
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "verticalThumbImage", { get: function() {
            return this._verticalBarImage;
          }, set: function(t4) {
            this._verticalBarImage !== t4 && (this._verticalBarImage = t4, this._verticalBar.thumbImage = t4);
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "barSize", { get: function() {
            return this._barSize;
          }, set: function(t4) {
            this._barSize !== t4 && (this._barSize = t4, this._markAsDirty(), this._horizontalBar.isVisible && this._grid.setRowDefinition(1, this._barSize, true), this._verticalBar.isVisible && this._grid.setColumnDefinition(1, this._barSize, true));
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "thumbLength", { get: function() {
            return this._thumbLength;
          }, set: function(t4) {
            if (this._thumbLength !== t4) {
              t4 <= 0 && (t4 = 0.1), t4 > 1 && (t4 = 1), this._thumbLength = t4;
              var e3 = this._horizontalBar, i2 = this._verticalBar;
              e3.thumbLength = t4, i2.thumbLength = t4, this._markAsDirty();
            }
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "thumbHeight", { get: function() {
            return this._thumbHeight;
          }, set: function(t4) {
            if (this._thumbHeight !== t4) {
              t4 <= 0 && (t4 = 0.1), t4 > 1 && (t4 = 1), this._thumbHeight = t4;
              var e3 = this._horizontalBar, i2 = this._verticalBar;
              e3.thumbHeight = t4, i2.thumbHeight = t4, this._markAsDirty();
            }
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "barImageHeight", { get: function() {
            return this._barImageHeight;
          }, set: function(t4) {
            if (this._barImageHeight !== t4) {
              t4 <= 0 && (t4 = 0.1), t4 > 1 && (t4 = 1), this._barImageHeight = t4;
              var e3 = this._horizontalBar, i2 = this._verticalBar;
              e3.barImageHeight = t4, i2.barImageHeight = t4, this._markAsDirty();
            }
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "horizontalBarImageHeight", { get: function() {
            return this._horizontalBarImageHeight;
          }, set: function(t4) {
            this._horizontalBarImageHeight !== t4 && (t4 <= 0 && (t4 = 0.1), t4 > 1 && (t4 = 1), this._horizontalBarImageHeight = t4, this._horizontalBar.barImageHeight = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "verticalBarImageHeight", { get: function() {
            return this._verticalBarImageHeight;
          }, set: function(t4) {
            this._verticalBarImageHeight !== t4 && (t4 <= 0 && (t4 = 0.1), t4 > 1 && (t4 = 1), this._verticalBarImageHeight = t4, this._verticalBar.barImageHeight = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "barBackground", { get: function() {
            return this._barBackground;
          }, set: function(t4) {
            if (this._barBackground !== t4) {
              this._barBackground = t4;
              var e3 = this._horizontalBar, i2 = this._verticalBar;
              e3.background = t4, i2.background = t4, this._dragSpace.background = t4;
            }
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "barImage", { get: function() {
            return this._barBackgroundImage;
          }, set: function(t4) {
            this._barBackgroundImage, this._barBackgroundImage = t4;
            var e3 = this._horizontalBar, i2 = this._verticalBar;
            e3.backgroundImage = t4, i2.backgroundImage = t4;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "horizontalBarImage", { get: function() {
            return this._horizontalBarBackgroundImage;
          }, set: function(t4) {
            this._horizontalBarBackgroundImage, this._horizontalBarBackgroundImage = t4, this._horizontalBar.backgroundImage = t4;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "verticalBarImage", { get: function() {
            return this._verticalBarBackgroundImage;
          }, set: function(t4) {
            this._verticalBarBackgroundImage, this._verticalBarBackgroundImage = t4, this._verticalBar.backgroundImage = t4;
          }, enumerable: false, configurable: true }), e2.prototype._setWindowPosition = function(t4) {
            t4 === void 0 && (t4 = true);
            var e3 = this.host.idealRatio, i2 = this._window._currentMeasure.width, r2 = this._window._currentMeasure.height;
            if (t4 || this._oldWindowContentsWidth !== i2 || this._oldWindowContentsHeight !== r2) {
              this._oldWindowContentsWidth = i2, this._oldWindowContentsHeight = r2;
              var n2 = this._clientWidth - i2, o2 = this._clientHeight - r2, s2 = this._horizontalBar.value / e3 * n2 + "px", a2 = this._verticalBar.value / e3 * o2 + "px";
              s2 !== this._window.left && (this._window.left = s2, this.freezeControls || (this._rebuildLayout = true)), a2 !== this._window.top && (this._window.top = a2, this.freezeControls || (this._rebuildLayout = true));
            }
          }, e2.prototype._updateScroller = function() {
            var t4 = this._window._currentMeasure.width, e3 = this._window._currentMeasure.height;
            this._horizontalBar.isVisible && t4 <= this._clientWidth && !this.forceHorizontalBar ? (this._grid.setRowDefinition(1, 0, true), this._horizontalBar.isVisible = false, this._horizontalBar.value = 0, this._rebuildLayout = true) : !this._horizontalBar.isVisible && (t4 > this._clientWidth || this.forceHorizontalBar) && (this._grid.setRowDefinition(1, this._barSize, true), this._horizontalBar.isVisible = true, this._rebuildLayout = true), this._verticalBar.isVisible && e3 <= this._clientHeight && !this.forceVerticalBar ? (this._grid.setColumnDefinition(1, 0, true), this._verticalBar.isVisible = false, this._verticalBar.value = 0, this._rebuildLayout = true) : !this._verticalBar.isVisible && (e3 > this._clientHeight || this.forceVerticalBar) && (this._grid.setColumnDefinition(1, this._barSize, true), this._verticalBar.isVisible = true, this._rebuildLayout = true), this._buildClientSizes();
            var i2 = this.host.idealRatio;
            this._horizontalBar.thumbWidth = 0.9 * this._thumbLength * (this._clientWidth / i2) + "px", this._verticalBar.thumbWidth = 0.9 * this._thumbLength * (this._clientHeight / i2) + "px";
          }, e2.prototype._link = function(e3) {
            t3.prototype._link.call(this, e3), this._attachWheel();
          }, e2.prototype._addBar = function(t4, e3, i2, r2) {
            var n2 = this;
            t4.paddingLeft = 0, t4.width = "100%", t4.height = "100%", t4.barOffset = 0, t4.value = 0, t4.maximum = 1, t4.horizontalAlignment = f.HORIZONTAL_ALIGNMENT_CENTER, t4.verticalAlignment = f.VERTICAL_ALIGNMENT_CENTER, t4.isVertical = i2, t4.rotation = r2, t4.isVisible = false, e3.addControl(t4), t4.onValueChangedObservable.add(function(t5) {
              n2._setWindowPosition();
            });
          }, e2.prototype._attachWheel = function() {
            var t4 = this;
            this._host && !this._onWheelObserver && (this._onWheelObserver = this.onWheelObservable.add(function(e3) {
              t4._pointerIsOver && (t4._verticalBar.isVisible == 1 && (e3.y < 0 && t4._verticalBar.value > 0 ? t4._verticalBar.value -= t4._wheelPrecision : e3.y > 0 && t4._verticalBar.value < t4._verticalBar.maximum && (t4._verticalBar.value += t4._wheelPrecision)), t4._horizontalBar.isVisible == 1 && (e3.x < 0 && t4._horizontalBar.value < t4._horizontalBar.maximum ? t4._horizontalBar.value += t4._wheelPrecision : e3.x > 0 && t4._horizontalBar.value > 0 && (t4._horizontalBar.value -= t4._wheelPrecision)));
            }));
          }, e2.prototype._renderHighlightSpecific = function(e3) {
            this.isHighlighted && (t3.prototype._renderHighlightSpecific.call(this, e3), this._grid._renderHighlightSpecific(e3), e3.restore());
          }, e2.prototype.dispose = function() {
            this.onWheelObservable.remove(this._onWheelObserver), this._onWheelObserver = null, t3.prototype.dispose.call(this);
          }, e2;
        }(b);
        s._TypeStore.RegisteredTypes["BABYLON.GUI.ScrollViewer"] = G;
        var X = function() {
        }, U = function(t3) {
          function e2() {
            var e3 = t3 !== null && t3.apply(this, arguments) || this;
            return e3.onKeyPressObservable = new s.Observable(), e3.defaultButtonWidth = "40px", e3.defaultButtonHeight = "40px", e3.defaultButtonPaddingLeft = "2px", e3.defaultButtonPaddingRight = "2px", e3.defaultButtonPaddingTop = "2px", e3.defaultButtonPaddingBottom = "2px", e3.defaultButtonColor = "#DDD", e3.defaultButtonBackground = "#070707", e3.shiftButtonColor = "#7799FF", e3.selectedShiftThickness = 1, e3.shiftState = 0, e3._currentlyConnectedInputText = null, e3._connectedInputTexts = [], e3._onKeyPressObserver = null, e3;
          }
          return n(e2, t3), e2.prototype._getTypeName = function() {
            return "VirtualKeyboard";
          }, e2.prototype._createKey = function(t4, e3) {
            var i2 = this, r2 = O.CreateSimpleButton(t4, t4);
            return r2.width = e3 && e3.width ? e3.width : this.defaultButtonWidth, r2.height = e3 && e3.height ? e3.height : this.defaultButtonHeight, r2.color = e3 && e3.color ? e3.color : this.defaultButtonColor, r2.background = e3 && e3.background ? e3.background : this.defaultButtonBackground, r2.paddingLeft = e3 && e3.paddingLeft ? e3.paddingLeft : this.defaultButtonPaddingLeft, r2.paddingRight = e3 && e3.paddingRight ? e3.paddingRight : this.defaultButtonPaddingRight, r2.paddingTop = e3 && e3.paddingTop ? e3.paddingTop : this.defaultButtonPaddingTop, r2.paddingBottom = e3 && e3.paddingBottom ? e3.paddingBottom : this.defaultButtonPaddingBottom, r2.thickness = 0, r2.isFocusInvisible = true, r2.shadowColor = this.shadowColor, r2.shadowBlur = this.shadowBlur, r2.shadowOffsetX = this.shadowOffsetX, r2.shadowOffsetY = this.shadowOffsetY, r2.onPointerUpObservable.add(function() {
              i2.onKeyPressObservable.notifyObservers(t4);
            }), r2;
          }, e2.prototype.addKeysRow = function(t4, e3) {
            var i2 = new C();
            i2.isVertical = false, i2.isFocusInvisible = true;
            for (var r2 = null, n2 = 0; n2 < t4.length; n2++) {
              var o2 = null;
              e3 && e3.length === t4.length && (o2 = e3[n2]);
              var s2 = this._createKey(t4[n2], o2);
              (!r2 || s2.heightInPixels > r2.heightInPixels) && (r2 = s2), i2.addControl(s2);
            }
            i2.height = r2 ? r2.height : this.defaultButtonHeight, this.addControl(i2);
          }, e2.prototype.applyShiftState = function(t4) {
            if (this.children)
              for (var e3 = 0; e3 < this.children.length; e3++) {
                var i2 = this.children[e3];
                if (i2 && i2.children)
                  for (var r2 = i2, n2 = 0; n2 < r2.children.length; n2++) {
                    var o2 = r2.children[n2];
                    if (o2 && o2.children[0]) {
                      var s2 = o2.children[0];
                      s2.text === "\u21E7" && (o2.color = t4 ? this.shiftButtonColor : this.defaultButtonColor, o2.thickness = t4 > 1 ? this.selectedShiftThickness : 0), s2.text = t4 > 0 ? s2.text.toUpperCase() : s2.text.toLowerCase();
                    }
                  }
              }
          }, Object.defineProperty(e2.prototype, "connectedInputText", { get: function() {
            return this._currentlyConnectedInputText;
          }, enumerable: false, configurable: true }), e2.prototype.connect = function(t4) {
            var e3 = this;
            if (!this._connectedInputTexts.some(function(e4) {
              return e4.input === t4;
            })) {
              this._onKeyPressObserver === null && (this._onKeyPressObserver = this.onKeyPressObservable.add(function(t5) {
                if (e3._currentlyConnectedInputText) {
                  switch (e3._currentlyConnectedInputText._host.focusedControl = e3._currentlyConnectedInputText, t5) {
                    case "\u21E7":
                      return e3.shiftState++, e3.shiftState > 2 && (e3.shiftState = 0), void e3.applyShiftState(e3.shiftState);
                    case "\u2190":
                      return void e3._currentlyConnectedInputText.processKey(8);
                    case "\u21B5":
                      return void e3._currentlyConnectedInputText.processKey(13);
                  }
                  e3._currentlyConnectedInputText.processKey(-1, e3.shiftState ? t5.toUpperCase() : t5), e3.shiftState === 1 && (e3.shiftState = 0, e3.applyShiftState(e3.shiftState));
                }
              })), this.isVisible = false, this._currentlyConnectedInputText = t4, t4._connectedVirtualKeyboard = this;
              var i2 = t4.onFocusObservable.add(function() {
                e3._currentlyConnectedInputText = t4, t4._connectedVirtualKeyboard = e3, e3.isVisible = true;
              }), r2 = t4.onBlurObservable.add(function() {
                t4._connectedVirtualKeyboard = null, e3._currentlyConnectedInputText = null, e3.isVisible = false;
              });
              this._connectedInputTexts.push({ input: t4, onBlurObserver: r2, onFocusObserver: i2 });
            }
          }, e2.prototype.disconnect = function(t4) {
            var e3 = this;
            if (t4) {
              var i2 = this._connectedInputTexts.filter(function(e4) {
                return e4.input === t4;
              });
              i2.length === 1 && (this._removeConnectedInputObservables(i2[0]), this._connectedInputTexts = this._connectedInputTexts.filter(function(e4) {
                return e4.input !== t4;
              }), this._currentlyConnectedInputText === t4 && (this._currentlyConnectedInputText = null));
            } else
              this._connectedInputTexts.forEach(function(t5) {
                e3._removeConnectedInputObservables(t5);
              }), this._connectedInputTexts = [];
            this._connectedInputTexts.length === 0 && (this._currentlyConnectedInputText = null, this.onKeyPressObservable.remove(this._onKeyPressObserver), this._onKeyPressObserver = null);
          }, e2.prototype._removeConnectedInputObservables = function(t4) {
            t4.input._connectedVirtualKeyboard = null, t4.input.onFocusObservable.remove(t4.onFocusObserver), t4.input.onBlurObservable.remove(t4.onBlurObserver);
          }, e2.prototype.dispose = function() {
            t3.prototype.dispose.call(this), this.disconnect();
          }, e2.CreateDefaultLayout = function(t4) {
            var i2 = new e2(t4);
            return i2.addKeysRow(["1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "\u2190"]), i2.addKeysRow(["q", "w", "e", "r", "t", "y", "u", "i", "o", "p"]), i2.addKeysRow(["a", "s", "d", "f", "g", "h", "j", "k", "l", ";", "'", "\u21B5"]), i2.addKeysRow(["\u21E7", "z", "x", "c", "v", "b", "n", "m", ",", ".", "/"]), i2.addKeysRow([" "], [{ width: "200px" }]), i2;
          }, e2;
        }(C);
        s._TypeStore.RegisteredTypes["BABYLON.GUI.VirtualKeyboard"] = U;
        var Y = function(t3) {
          function e2(e3) {
            var i2 = t3.call(this, e3) || this;
            return i2.name = e3, i2._cellWidth = 20, i2._cellHeight = 20, i2._minorLineTickness = 1, i2._minorLineColor = "DarkGray", i2._majorLineTickness = 2, i2._majorLineColor = "White", i2._majorLineFrequency = 5, i2._background = "Black", i2._displayMajorLines = true, i2._displayMinorLines = true, i2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "displayMinorLines", { get: function() {
            return this._displayMinorLines;
          }, set: function(t4) {
            this._displayMinorLines !== t4 && (this._displayMinorLines = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "displayMajorLines", { get: function() {
            return this._displayMajorLines;
          }, set: function(t4) {
            this._displayMajorLines !== t4 && (this._displayMajorLines = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "background", { get: function() {
            return this._background;
          }, set: function(t4) {
            this._background !== t4 && (this._background = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "cellWidth", { get: function() {
            return this._cellWidth;
          }, set: function(t4) {
            this._cellWidth = t4, this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "cellHeight", { get: function() {
            return this._cellHeight;
          }, set: function(t4) {
            this._cellHeight = t4, this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "minorLineTickness", { get: function() {
            return this._minorLineTickness;
          }, set: function(t4) {
            this._minorLineTickness = t4, this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "minorLineColor", { get: function() {
            return this._minorLineColor;
          }, set: function(t4) {
            this._minorLineColor = t4, this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "majorLineTickness", { get: function() {
            return this._majorLineTickness;
          }, set: function(t4) {
            this._majorLineTickness = t4, this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "majorLineColor", { get: function() {
            return this._majorLineColor;
          }, set: function(t4) {
            this._majorLineColor = t4, this._markAsDirty();
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "majorLineFrequency", { get: function() {
            return this._majorLineFrequency;
          }, set: function(t4) {
            this._majorLineFrequency = t4, this._markAsDirty();
          }, enumerable: false, configurable: true }), e2.prototype._draw = function(t4, e3) {
            if (t4.save(), this._applyStates(t4), this._isEnabled) {
              this._background && (t4.fillStyle = this._background, t4.fillRect(this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height));
              var i2 = this._currentMeasure.width / this._cellWidth, r2 = this._currentMeasure.height / this._cellHeight, n2 = this._currentMeasure.left + this._currentMeasure.width / 2, o2 = this._currentMeasure.top + this._currentMeasure.height / 2;
              if (this._displayMinorLines) {
                t4.strokeStyle = this._minorLineColor, t4.lineWidth = this._minorLineTickness;
                for (var s2 = -i2 / 2; s2 < i2 / 2; s2++) {
                  var a2 = n2 + s2 * this.cellWidth;
                  t4.beginPath(), t4.moveTo(a2, this._currentMeasure.top), t4.lineTo(a2, this._currentMeasure.top + this._currentMeasure.height), t4.stroke();
                }
                for (var h2 = -r2 / 2; h2 < r2 / 2; h2++) {
                  var l2 = o2 + h2 * this.cellHeight;
                  t4.beginPath(), t4.moveTo(this._currentMeasure.left, l2), t4.lineTo(this._currentMeasure.left + this._currentMeasure.width, l2), t4.stroke();
                }
              }
              if (this._displayMajorLines) {
                t4.strokeStyle = this._majorLineColor, t4.lineWidth = this._majorLineTickness;
                for (s2 = -i2 / 2 + this._majorLineFrequency; s2 < i2 / 2; s2 += this._majorLineFrequency) {
                  a2 = n2 + s2 * this.cellWidth;
                  t4.beginPath(), t4.moveTo(a2, this._currentMeasure.top), t4.lineTo(a2, this._currentMeasure.top + this._currentMeasure.height), t4.stroke();
                }
                for (h2 = -r2 / 2 + this._majorLineFrequency; h2 < r2 / 2; h2 += this._majorLineFrequency) {
                  l2 = o2 + h2 * this.cellHeight;
                  t4.moveTo(this._currentMeasure.left, l2), t4.lineTo(this._currentMeasure.left + this._currentMeasure.width, l2), t4.closePath(), t4.stroke();
                }
              }
            }
            t4.restore();
          }, e2.prototype._getTypeName = function() {
            return "DisplayGrid";
          }, e2;
        }(f);
        s._TypeStore.RegisteredTypes["BABYLON.GUI.DisplayGrid"] = Y;
        var q = function(t3) {
          function e2(e3) {
            var i2 = t3.call(this, e3) || this;
            return i2.name = e3, i2._tempMeasure = new _(0, 0, 0, 0), i2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "displayThumb", { get: function() {
            return this._displayThumb && this.thumbImage != null;
          }, set: function(t4) {
            this._displayThumb !== t4 && (this._displayThumb = t4, this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "backgroundImage", { get: function() {
            return this._backgroundImage;
          }, set: function(t4) {
            var e3 = this;
            this._backgroundImage !== t4 && (this._backgroundImage = t4, t4 && !t4.isLoaded && t4.onImageLoadedObservable.addOnce(function() {
              return e3._markAsDirty();
            }), this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "valueBarImage", { get: function() {
            return this._valueBarImage;
          }, set: function(t4) {
            var e3 = this;
            this._valueBarImage !== t4 && (this._valueBarImage = t4, t4 && !t4.isLoaded && t4.onImageLoadedObservable.addOnce(function() {
              return e3._markAsDirty();
            }), this._markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "thumbImage", { get: function() {
            return this._thumbImage;
          }, set: function(t4) {
            var e3 = this;
            this._thumbImage !== t4 && (this._thumbImage = t4, t4 && !t4.isLoaded && t4.onImageLoadedObservable.addOnce(function() {
              return e3._markAsDirty();
            }), this._markAsDirty());
          }, enumerable: false, configurable: true }), e2.prototype._getTypeName = function() {
            return "ImageBasedSlider";
          }, e2.prototype._draw = function(t4, e3) {
            t4.save(), this._applyStates(t4), this._prepareRenderingData("rectangle");
            var i2 = this._getThumbPosition(), r2 = this._renderLeft, n2 = this._renderTop, o2 = this._renderWidth, s2 = this._renderHeight;
            this._backgroundImage && (this._tempMeasure.copyFromFloats(r2, n2, o2, s2), this.isThumbClamped && this.displayThumb && (this.isVertical ? this._tempMeasure.height += this._effectiveThumbThickness : this._tempMeasure.width += this._effectiveThumbThickness), this._backgroundImage._currentMeasure.copyFrom(this._tempMeasure), this._backgroundImage._draw(t4)), this._valueBarImage && (this.isVertical ? this.isThumbClamped && this.displayThumb ? this._tempMeasure.copyFromFloats(r2, n2 + i2, o2, s2 - i2 + this._effectiveThumbThickness) : this._tempMeasure.copyFromFloats(r2, n2 + i2, o2, s2 - i2) : this.isThumbClamped && this.displayThumb ? this._tempMeasure.copyFromFloats(r2, n2, i2 + this._effectiveThumbThickness / 2, s2) : this._tempMeasure.copyFromFloats(r2, n2, i2, s2), this._valueBarImage._currentMeasure.copyFrom(this._tempMeasure), this._valueBarImage._draw(t4)), this.displayThumb && (this.isVertical ? this._tempMeasure.copyFromFloats(r2 - this._effectiveBarOffset, this._currentMeasure.top + i2, this._currentMeasure.width, this._effectiveThumbThickness) : this._tempMeasure.copyFromFloats(this._currentMeasure.left + i2, this._currentMeasure.top, this._effectiveThumbThickness, this._currentMeasure.height), this._thumbImage._currentMeasure.copyFrom(this._tempMeasure), this._thumbImage._draw(t4)), t4.restore();
          }, e2;
        }(L);
        s._TypeStore.RegisteredTypes["BABYLON.GUI.ImageBasedSlider"] = q;
        var K = "Statics";
        f.AddHeader = function(t3, e2, i2, r2) {
          var n2 = new C("panel"), o2 = !r2 || r2.isHorizontal, s2 = !r2 || r2.controlFirst;
          n2.isVertical = !o2;
          var a2 = new y("header");
          return a2.text = e2, a2.textHorizontalAlignment = f.HORIZONTAL_ALIGNMENT_LEFT, o2 ? a2.width = i2 : a2.height = i2, s2 ? (n2.addControl(t3), n2.addControl(a2), a2.paddingLeft = "5px") : (n2.addControl(a2), n2.addControl(t3), a2.paddingRight = "5px"), a2.shadowBlur = t3.shadowBlur, a2.shadowColor = t3.shadowColor, a2.shadowOffsetX = t3.shadowOffsetX, a2.shadowOffsetY = t3.shadowOffsetY, n2;
        };
        var Z = function() {
          function t3(t4) {
            this._fontFamily = "Arial", this._fontStyle = "", this._fontWeight = "", this._fontSize = new a(18, a.UNITMODE_PIXEL, false), this.onChangedObservable = new s.Observable(), this._host = t4;
          }
          return Object.defineProperty(t3.prototype, "fontSize", { get: function() {
            return this._fontSize.toString(this._host);
          }, set: function(t4) {
            this._fontSize.toString(this._host) !== t4 && this._fontSize.fromString(t4) && this.onChangedObservable.notifyObservers(this);
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "fontFamily", { get: function() {
            return this._fontFamily;
          }, set: function(t4) {
            this._fontFamily !== t4 && (this._fontFamily = t4, this.onChangedObservable.notifyObservers(this));
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "fontStyle", { get: function() {
            return this._fontStyle;
          }, set: function(t4) {
            this._fontStyle !== t4 && (this._fontStyle = t4, this.onChangedObservable.notifyObservers(this));
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "fontWeight", { get: function() {
            return this._fontWeight;
          }, set: function(t4) {
            this._fontWeight !== t4 && (this._fontWeight = t4, this.onChangedObservable.notifyObservers(this));
          }, enumerable: false, configurable: true }), t3.prototype.dispose = function() {
            this.onChangedObservable.clear();
          }, t3;
        }(), J = function(t3) {
          function e2(e3, i2, r2, n2, o2, a2, h2) {
            i2 === void 0 && (i2 = 0), r2 === void 0 && (r2 = 0), o2 === void 0 && (o2 = false), a2 === void 0 && (a2 = s.Texture.NEAREST_SAMPLINGMODE);
            var l2 = t3.call(this, e3, { width: i2, height: r2 }, n2, o2, a2, s.Constants.TEXTUREFORMAT_RGBA, h2) || this;
            return l2._isDirty = false, l2._rootContainer = new g("root"), l2._lastControlOver = {}, l2._lastControlDown = {}, l2._capturingControl = {}, l2._linkedControls = new Array(), l2._isFullscreen = false, l2._fullscreenViewport = new s.Viewport(0, 0, 1, 1), l2._idealWidth = 0, l2._idealHeight = 0, l2._useSmallestIdeal = false, l2._renderAtIdealSize = false, l2._blockNextFocusCheck = false, l2._renderScale = 1, l2._cursorChanged = false, l2._defaultMousePointerId = 0, l2._numLayoutCalls = 0, l2._numRenderCalls = 0, l2._clipboardData = "", l2.onClipboardObservable = new s.Observable(), l2.onControlPickedObservable = new s.Observable(), l2.onBeginLayoutObservable = new s.Observable(), l2.onEndLayoutObservable = new s.Observable(), l2.onBeginRenderObservable = new s.Observable(), l2.onEndRenderObservable = new s.Observable(), l2.premulAlpha = false, l2.applyYInversionOnUpdate = true, l2._useInvalidateRectOptimization = true, l2._invalidatedRectangle = null, l2._clearMeasure = new _(0, 0, 0, 0), l2.onClipboardCopy = function(t4) {
              var e4 = t4, i3 = new s.ClipboardInfo(s.ClipboardEventTypes.COPY, e4);
              l2.onClipboardObservable.notifyObservers(i3), e4.preventDefault();
            }, l2.onClipboardCut = function(t4) {
              var e4 = t4, i3 = new s.ClipboardInfo(s.ClipboardEventTypes.CUT, e4);
              l2.onClipboardObservable.notifyObservers(i3), e4.preventDefault();
            }, l2.onClipboardPaste = function(t4) {
              var e4 = t4, i3 = new s.ClipboardInfo(s.ClipboardEventTypes.PASTE, e4);
              l2.onClipboardObservable.notifyObservers(i3), e4.preventDefault();
            }, (n2 = l2.getScene()) && l2._texture ? (l2._rootElement = n2.getEngine().getInputElement(), l2._renderObserver = n2.onBeforeCameraRenderObservable.add(function(t4) {
              return l2._checkUpdate(t4);
            }), l2._preKeyboardObserver = n2.onPreKeyboardObservable.add(function(t4) {
              l2._focusedControl && (t4.type === s.KeyboardEventTypes.KEYDOWN && l2._focusedControl.processKeyboard(t4.event), t4.skipOnPointerObservable = true);
            }), l2._rootContainer._link(l2), l2.hasAlpha = true, i2 && r2 || (l2._resizeObserver = n2.getEngine().onResizeObservable.add(function() {
              return l2._onResize();
            }), l2._onResize()), l2._texture.isReady = true, l2) : l2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "numLayoutCalls", { get: function() {
            return this._numLayoutCalls;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "numRenderCalls", { get: function() {
            return this._numRenderCalls;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "renderScale", { get: function() {
            return this._renderScale;
          }, set: function(t4) {
            t4 !== this._renderScale && (this._renderScale = t4, this._onResize());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "background", { get: function() {
            return this._background;
          }, set: function(t4) {
            this._background !== t4 && (this._background = t4, this.markAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "idealWidth", { get: function() {
            return this._idealWidth;
          }, set: function(t4) {
            this._idealWidth !== t4 && (this._idealWidth = t4, this.markAsDirty(), this._rootContainer._markAllAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "idealHeight", { get: function() {
            return this._idealHeight;
          }, set: function(t4) {
            this._idealHeight !== t4 && (this._idealHeight = t4, this.markAsDirty(), this._rootContainer._markAllAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "useSmallestIdeal", { get: function() {
            return this._useSmallestIdeal;
          }, set: function(t4) {
            this._useSmallestIdeal !== t4 && (this._useSmallestIdeal = t4, this.markAsDirty(), this._rootContainer._markAllAsDirty());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "renderAtIdealSize", { get: function() {
            return this._renderAtIdealSize;
          }, set: function(t4) {
            this._renderAtIdealSize !== t4 && (this._renderAtIdealSize = t4, this._onResize());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "idealRatio", { get: function() {
            var t4 = 0, e3 = 0;
            return this._idealWidth && (t4 = this.getSize().width / this._idealWidth), this._idealHeight && (e3 = this.getSize().height / this._idealHeight), this._useSmallestIdeal && this._idealWidth && this._idealHeight ? window.innerWidth < window.innerHeight ? t4 : e3 : this._idealWidth ? t4 : this._idealHeight ? e3 : 1;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "layer", { get: function() {
            return this._layerToDispose;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "rootContainer", { get: function() {
            return this._rootContainer;
          }, enumerable: false, configurable: true }), e2.prototype.getChildren = function() {
            return [this._rootContainer];
          }, e2.prototype.getDescendants = function(t4, e3) {
            return this._rootContainer.getDescendants(t4, e3);
          }, Object.defineProperty(e2.prototype, "focusedControl", { get: function() {
            return this._focusedControl;
          }, set: function(t4) {
            this._focusedControl != t4 && (this._focusedControl && this._focusedControl.onBlur(), t4 && t4.onFocus(), this._focusedControl = t4);
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "isForeground", { get: function() {
            return !this.layer || !this.layer.isBackground;
          }, set: function(t4) {
            this.layer && this.layer.isBackground !== !t4 && (this.layer.isBackground = !t4);
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "clipboardData", { get: function() {
            return this._clipboardData;
          }, set: function(t4) {
            this._clipboardData = t4;
          }, enumerable: false, configurable: true }), e2.prototype.getClassName = function() {
            return "AdvancedDynamicTexture";
          }, e2.prototype.executeOnAllControls = function(t4, e3) {
            e3 || (e3 = this._rootContainer), t4(e3);
            for (var i2 = 0, r2 = e3.children; i2 < r2.length; i2++) {
              var n2 = r2[i2];
              n2.children ? this.executeOnAllControls(t4, n2) : t4(n2);
            }
          }, Object.defineProperty(e2.prototype, "useInvalidateRectOptimization", { get: function() {
            return this._useInvalidateRectOptimization;
          }, set: function(t4) {
            this._useInvalidateRectOptimization = t4;
          }, enumerable: false, configurable: true }), e2.prototype.invalidateRect = function(t4, e3, i2, r2) {
            if (this._useInvalidateRectOptimization)
              if (this._invalidatedRectangle) {
                var n2 = Math.ceil(Math.max(this._invalidatedRectangle.left + this._invalidatedRectangle.width - 1, i2)), o2 = Math.ceil(Math.max(this._invalidatedRectangle.top + this._invalidatedRectangle.height - 1, r2));
                this._invalidatedRectangle.left = Math.floor(Math.min(this._invalidatedRectangle.left, t4)), this._invalidatedRectangle.top = Math.floor(Math.min(this._invalidatedRectangle.top, e3)), this._invalidatedRectangle.width = n2 - this._invalidatedRectangle.left + 1, this._invalidatedRectangle.height = o2 - this._invalidatedRectangle.top + 1;
              } else
                this._invalidatedRectangle = new _(t4, e3, i2 - t4 + 1, r2 - e3 + 1);
          }, e2.prototype.markAsDirty = function() {
            this._isDirty = true;
          }, e2.prototype.createStyle = function() {
            return new Z(this);
          }, e2.prototype.addControl = function(t4) {
            return this._rootContainer.addControl(t4), this;
          }, e2.prototype.removeControl = function(t4) {
            return this._rootContainer.removeControl(t4), this;
          }, e2.prototype.dispose = function() {
            var e3 = this.getScene();
            e3 && (this._rootElement = null, e3.onBeforeCameraRenderObservable.remove(this._renderObserver), this._resizeObserver && e3.getEngine().onResizeObservable.remove(this._resizeObserver), this._pointerMoveObserver && e3.onPrePointerObservable.remove(this._pointerMoveObserver), this._pointerObserver && e3.onPointerObservable.remove(this._pointerObserver), this._preKeyboardObserver && e3.onPreKeyboardObservable.remove(this._preKeyboardObserver), this._canvasPointerOutObserver && e3.getEngine().onCanvasPointerOutObservable.remove(this._canvasPointerOutObserver), this._canvasBlurObserver && e3.getEngine().onCanvasBlurObservable.remove(this._canvasBlurObserver), this._layerToDispose && (this._layerToDispose.texture = null, this._layerToDispose.dispose(), this._layerToDispose = null), this._rootContainer.dispose(), this.onClipboardObservable.clear(), this.onControlPickedObservable.clear(), this.onBeginRenderObservable.clear(), this.onEndRenderObservable.clear(), this.onBeginLayoutObservable.clear(), this.onEndLayoutObservable.clear(), t3.prototype.dispose.call(this));
          }, e2.prototype._onResize = function() {
            var t4 = this.getScene();
            if (t4) {
              var e3 = t4.getEngine(), i2 = this.getSize(), r2 = e3.getRenderWidth() * this._renderScale, n2 = e3.getRenderHeight() * this._renderScale;
              this._renderAtIdealSize && (this._idealWidth ? (n2 = n2 * this._idealWidth / r2, r2 = this._idealWidth) : this._idealHeight && (r2 = r2 * this._idealHeight / n2, n2 = this._idealHeight)), i2.width === r2 && i2.height === n2 || (this.scaleTo(r2, n2), this.markAsDirty(), (this._idealWidth || this._idealHeight) && this._rootContainer._markAllAsDirty()), this.invalidateRect(0, 0, i2.width - 1, i2.height - 1);
            }
          }, e2.prototype._getGlobalViewport = function(t4) {
            var e3 = t4.getEngine();
            return this._fullscreenViewport.toGlobal(e3.getRenderWidth(), e3.getRenderHeight());
          }, e2.prototype.getProjectedPosition = function(t4, e3) {
            var i2 = this.getScene();
            if (!i2)
              return s.Vector2.Zero();
            var r2 = this._getGlobalViewport(i2), n2 = s.Vector3.Project(t4, e3, i2.getTransformMatrix(), r2);
            return n2.scaleInPlace(this.renderScale), new s.Vector2(n2.x, n2.y);
          }, e2.prototype.getProjectedPositionWithZ = function(t4, e3) {
            var i2 = this.getScene();
            if (!i2)
              return s.Vector3.Zero();
            var r2 = this._getGlobalViewport(i2), n2 = s.Vector3.Project(t4, e3, i2.getTransformMatrix(), r2);
            return n2.scaleInPlace(this.renderScale), new s.Vector3(n2.x, n2.y, n2.z);
          }, e2.prototype._checkUpdate = function(t4) {
            if (!this._layerToDispose || (t4.layerMask & this._layerToDispose.layerMask) != 0) {
              if (this._isFullscreen && this._linkedControls.length) {
                var e3 = this.getScene();
                if (!e3)
                  return;
                for (var i2 = this._getGlobalViewport(e3), r2 = function(t5) {
                  if (!t5.isVisible)
                    return "continue";
                  var r3 = t5._linkedMesh;
                  if (!r3 || r3.isDisposed())
                    return s.Tools.SetImmediate(function() {
                      t5.linkWithMesh(null);
                    }), "continue";
                  var o3 = r3.getBoundingInfo ? r3.getBoundingInfo().boundingSphere.center : s.Vector3.ZeroReadOnly, a3 = s.Vector3.Project(o3, r3.getWorldMatrix(), e3.getTransformMatrix(), i2);
                  if (a3.z < 0 || a3.z > 1)
                    return t5.notRenderable = true, "continue";
                  t5.notRenderable = false, a3.scaleInPlace(n2.renderScale), t5._moveToProjectedPosition(a3);
                }, n2 = this, o2 = 0, a2 = this._linkedControls; o2 < a2.length; o2++) {
                  r2(a2[o2]);
                }
              }
              (this._isDirty || this._rootContainer.isDirty) && (this._isDirty = false, this._render(), this.update(this.applyYInversionOnUpdate, this.premulAlpha));
            }
          }, e2.prototype._render = function() {
            var t4 = this.getSize(), e3 = t4.width, i2 = t4.height, r2 = this.getContext();
            r2.font = "18px Arial", r2.strokeStyle = "white", this.onBeginLayoutObservable.notifyObservers(this);
            var n2 = new _(0, 0, e3, i2);
            this._numLayoutCalls = 0, this._rootContainer._layout(n2, r2), this.onEndLayoutObservable.notifyObservers(this), this._isDirty = false, this._invalidatedRectangle ? this._clearMeasure.copyFrom(this._invalidatedRectangle) : this._clearMeasure.copyFromFloats(0, 0, e3, i2), r2.clearRect(this._clearMeasure.left, this._clearMeasure.top, this._clearMeasure.width, this._clearMeasure.height), this._background && (r2.save(), r2.fillStyle = this._background, r2.fillRect(this._clearMeasure.left, this._clearMeasure.top, this._clearMeasure.width, this._clearMeasure.height), r2.restore()), this.onBeginRenderObservable.notifyObservers(this), this._numRenderCalls = 0, this._rootContainer._render(r2, this._invalidatedRectangle), this.onEndRenderObservable.notifyObservers(this), this._invalidatedRectangle = null;
          }, e2.prototype._changeCursor = function(t4) {
            this._rootElement && (this._rootElement.style.cursor = t4, this._cursorChanged = true);
          }, e2.prototype._registerLastControlDown = function(t4, e3) {
            this._lastControlDown[e3] = t4, this.onControlPickedObservable.notifyObservers(t4);
          }, e2.prototype._doPicking = function(t4, e3, i2, r2, n2, o2, a2, h2) {
            var l2 = this.getScene();
            if (l2) {
              var u2 = l2.getEngine(), c2 = this.getSize();
              if (this._isFullscreen) {
                var _2 = (l2.cameraToUseForPointers || l2.activeCamera).viewport;
                t4 *= c2.width / (u2.getRenderWidth() * _2.width), e3 *= c2.height / (u2.getRenderHeight() * _2.height);
              }
              this._capturingControl[n2] ? this._capturingControl[n2]._processObservables(r2, t4, e3, i2, n2, o2) : (this._cursorChanged = false, this._rootContainer._processPicking(t4, e3, i2, r2, n2, o2, a2, h2) || (this._changeCursor(""), r2 === s.PointerEventTypes.POINTERMOVE && this._lastControlOver[n2] && (this._lastControlOver[n2]._onPointerOut(this._lastControlOver[n2], i2), delete this._lastControlOver[n2])), this._cursorChanged || this._changeCursor(""), this._manageFocus());
            }
          }, e2.prototype._cleanControlAfterRemovalFromList = function(t4, e3) {
            for (var i2 in t4) {
              if (t4.hasOwnProperty(i2))
                t4[i2] === e3 && delete t4[i2];
            }
          }, e2.prototype._cleanControlAfterRemoval = function(t4) {
            this._cleanControlAfterRemovalFromList(this._lastControlDown, t4), this._cleanControlAfterRemovalFromList(this._lastControlOver, t4);
          }, e2.prototype.attach = function() {
            var t4 = this, e3 = this.getScene();
            if (e3) {
              var i2 = new s.Viewport(0, 0, 0, 0);
              this._pointerMoveObserver = e3.onPrePointerObservable.add(function(r2, n2) {
                if (!e3.isPointerCaptured(r2.event.pointerId) && (r2.type === s.PointerEventTypes.POINTERMOVE || r2.type === s.PointerEventTypes.POINTERUP || r2.type === s.PointerEventTypes.POINTERDOWN || r2.type === s.PointerEventTypes.POINTERWHEEL) && e3) {
                  r2.type === s.PointerEventTypes.POINTERMOVE && r2.event.pointerId && (t4._defaultMousePointerId = r2.event.pointerId);
                  var o2 = e3.cameraToUseForPointers || e3.activeCamera, a2 = e3.getEngine();
                  o2 ? o2.viewport.toGlobalToRef(a2.getRenderWidth(), a2.getRenderHeight(), i2) : (i2.x = 0, i2.y = 0, i2.width = a2.getRenderWidth(), i2.height = a2.getRenderHeight());
                  var h2 = e3.pointerX / a2.getHardwareScalingLevel() - i2.x, l2 = e3.pointerY / a2.getHardwareScalingLevel() - (a2.getRenderHeight() - i2.y - i2.height);
                  t4._shouldBlockPointer = false;
                  var u2 = r2.event.pointerId || t4._defaultMousePointerId;
                  t4._doPicking(h2, l2, r2, r2.type, u2, r2.event.button, r2.event.deltaX, r2.event.deltaY), t4._shouldBlockPointer && (r2.skipOnPointerObservable = t4._shouldBlockPointer);
                }
              }), this._attachToOnPointerOut(e3), this._attachToOnBlur(e3);
            }
          }, e2.prototype.registerClipboardEvents = function() {
            self.addEventListener("copy", this.onClipboardCopy, false), self.addEventListener("cut", this.onClipboardCut, false), self.addEventListener("paste", this.onClipboardPaste, false);
          }, e2.prototype.unRegisterClipboardEvents = function() {
            self.removeEventListener("copy", this.onClipboardCopy), self.removeEventListener("cut", this.onClipboardCut), self.removeEventListener("paste", this.onClipboardPaste);
          }, e2.prototype.attachToMesh = function(t4, e3) {
            var i2 = this;
            e3 === void 0 && (e3 = true);
            var r2 = this.getScene();
            r2 && (this._pointerObserver = r2.onPointerObservable.add(function(e4, r3) {
              if (e4.type === s.PointerEventTypes.POINTERMOVE || e4.type === s.PointerEventTypes.POINTERUP || e4.type === s.PointerEventTypes.POINTERDOWN) {
                var n2 = e4.event.pointerId || i2._defaultMousePointerId;
                if (e4.pickInfo && e4.pickInfo.hit && e4.pickInfo.pickedMesh === t4) {
                  var o2 = e4.pickInfo.getTextureCoordinates();
                  if (o2) {
                    var a2 = i2.getSize();
                    i2._doPicking(o2.x * a2.width, (i2.applyYInversionOnUpdate ? 1 - o2.y : o2.y) * a2.height, e4, e4.type, n2, e4.event.button);
                  }
                } else if (e4.type === s.PointerEventTypes.POINTERUP) {
                  if (i2._lastControlDown[n2] && i2._lastControlDown[n2]._forcePointerUp(n2), delete i2._lastControlDown[n2], i2.focusedControl) {
                    var h2 = i2.focusedControl.keepsFocusWith(), l2 = true;
                    if (h2)
                      for (var u2 = 0, c2 = h2; u2 < c2.length; u2++) {
                        var _2 = c2[u2];
                        if (i2 !== _2._host) {
                          var d2 = _2._host;
                          if (d2._lastControlOver[n2] && d2._lastControlOver[n2].isAscendant(_2)) {
                            l2 = false;
                            break;
                          }
                        }
                      }
                    l2 && (i2.focusedControl = null);
                  }
                } else
                  e4.type === s.PointerEventTypes.POINTERMOVE && (i2._lastControlOver[n2] && i2._lastControlOver[n2]._onPointerOut(i2._lastControlOver[n2], e4, true), delete i2._lastControlOver[n2]);
              }
            }), t4.enablePointerMoveEvents = e3, this._attachToOnPointerOut(r2), this._attachToOnBlur(r2));
          }, e2.prototype.moveFocusToControl = function(t4) {
            this.focusedControl = t4, this._lastPickedControl = t4, this._blockNextFocusCheck = true;
          }, e2.prototype._manageFocus = function() {
            if (this._blockNextFocusCheck)
              return this._blockNextFocusCheck = false, void (this._lastPickedControl = this._focusedControl);
            if (this._focusedControl && this._focusedControl !== this._lastPickedControl) {
              if (this._lastPickedControl.isFocusInvisible)
                return;
              this.focusedControl = null;
            }
          }, e2.prototype._attachToOnPointerOut = function(t4) {
            var e3 = this;
            this._canvasPointerOutObserver = t4.getEngine().onCanvasPointerOutObservable.add(function(t5) {
              e3._lastControlOver[t5.pointerId] && e3._lastControlOver[t5.pointerId]._onPointerOut(e3._lastControlOver[t5.pointerId], null), delete e3._lastControlOver[t5.pointerId], e3._lastControlDown[t5.pointerId] && e3._lastControlDown[t5.pointerId] !== e3._capturingControl[t5.pointerId] && (e3._lastControlDown[t5.pointerId]._forcePointerUp(), delete e3._lastControlDown[t5.pointerId]);
            });
          }, e2.prototype._attachToOnBlur = function(t4) {
            var e3 = this;
            this._canvasBlurObserver = t4.getEngine().onCanvasBlurObservable.add(function(t5) {
              Object.entries(e3._lastControlDown).forEach(function(t6) {
                t6[0];
                t6[1]._onCanvasBlur();
              }), e3._lastControlDown = {};
            });
          }, e2.CreateForMesh = function(t4, i2, r2, n2, o2, a2) {
            i2 === void 0 && (i2 = 1024), r2 === void 0 && (r2 = 1024), n2 === void 0 && (n2 = true), o2 === void 0 && (o2 = false);
            var h2 = new e2(t4.name + " AdvancedDynamicTexture", i2, r2, t4.getScene(), true, s.Texture.TRILINEAR_SAMPLINGMODE, a2), l2 = new s.StandardMaterial("AdvancedDynamicTextureMaterial", t4.getScene());
            return l2.backFaceCulling = false, l2.diffuseColor = s.Color3.Black(), l2.specularColor = s.Color3.Black(), o2 ? (l2.diffuseTexture = h2, l2.emissiveTexture = h2, h2.hasAlpha = true) : (l2.emissiveTexture = h2, l2.opacityTexture = h2), t4.material = l2, h2.attachToMesh(t4, n2), h2;
          }, e2.CreateForMeshTexture = function(t4, i2, r2, n2, o2) {
            i2 === void 0 && (i2 = 1024), r2 === void 0 && (r2 = 1024), n2 === void 0 && (n2 = true);
            var a2 = new e2(t4.name + " AdvancedDynamicTexture", i2, r2, t4.getScene(), true, s.Texture.TRILINEAR_SAMPLINGMODE, o2);
            return a2.attachToMesh(t4, n2), a2;
          }, e2.CreateFullscreenUI = function(t4, i2, r2, n2) {
            i2 === void 0 && (i2 = true), r2 === void 0 && (r2 = null), n2 === void 0 && (n2 = s.Texture.BILINEAR_SAMPLINGMODE);
            var o2 = new e2(t4, 0, 0, r2, false, n2), a2 = new s.Layer(t4 + "_layer", null, r2, !i2);
            return a2.texture = o2, o2._layerToDispose = a2, o2._isFullscreen = true, o2.attach(), o2;
          }, e2;
        }(s.DynamicTexture), Q = function() {
          function t3(t4) {
            this.texture = t4, this._captureRenderTime = false, this._renderTime = new s.PerfCounter(), this._captureLayoutTime = false, this._layoutTime = new s.PerfCounter(), this._onBeginRenderObserver = null, this._onEndRenderObserver = null, this._onBeginLayoutObserver = null, this._onEndLayoutObserver = null;
          }
          return Object.defineProperty(t3.prototype, "renderTimeCounter", { get: function() {
            return this._renderTime;
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "layoutTimeCounter", { get: function() {
            return this._layoutTime;
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "captureRenderTime", { get: function() {
            return this._captureRenderTime;
          }, set: function(t4) {
            var e2 = this;
            t4 !== this._captureRenderTime && (this._captureRenderTime = t4, t4 ? (this._onBeginRenderObserver = this.texture.onBeginRenderObservable.add(function() {
              e2._renderTime.beginMonitoring();
            }), this._onEndRenderObserver = this.texture.onEndRenderObservable.add(function() {
              e2._renderTime.endMonitoring(true);
            })) : (this.texture.onBeginRenderObservable.remove(this._onBeginRenderObserver), this._onBeginRenderObserver = null, this.texture.onEndRenderObservable.remove(this._onEndRenderObserver), this._onEndRenderObserver = null));
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "captureLayoutTime", { get: function() {
            return this._captureLayoutTime;
          }, set: function(t4) {
            var e2 = this;
            t4 !== this._captureLayoutTime && (this._captureLayoutTime = t4, t4 ? (this._onBeginLayoutObserver = this.texture.onBeginLayoutObservable.add(function() {
              e2._layoutTime.beginMonitoring();
            }), this._onEndLayoutObserver = this.texture.onEndLayoutObservable.add(function() {
              e2._layoutTime.endMonitoring(true);
            })) : (this.texture.onBeginLayoutObservable.remove(this._onBeginLayoutObserver), this._onBeginLayoutObserver = null, this.texture.onEndLayoutObservable.remove(this._onEndLayoutObserver), this._onEndLayoutObserver = null));
          }, enumerable: false, configurable: true }), t3.prototype.dispose = function() {
            this.texture.onBeginRenderObservable.remove(this._onBeginRenderObserver), this._onBeginRenderObserver = null, this.texture.onEndRenderObservable.remove(this._onEndRenderObserver), this._onEndRenderObserver = null, this.texture.onBeginLayoutObservable.remove(this._onBeginLayoutObserver), this._onBeginLayoutObserver = null, this.texture.onEndLayoutObservable.remove(this._onEndLayoutObserver), this._onEndLayoutObserver = null, this.texture = null;
          }, t3;
        }(), $ = function() {
          function t3(t4) {
            t4 === void 0 && (t4 = null), this._nodes = {}, this._nodeTypes = { element: 1, attribute: 2, text: 3 }, this._isLoaded = false, this._objectAttributes = { textHorizontalAlignment: 1, textVerticalAlignment: 2, horizontalAlignment: 3, verticalAlignment: 4, stretch: 5 }, t4 && (this._parentClass = t4);
          }
          return t3.prototype._getChainElement = function(t4) {
            var e2 = window;
            this._parentClass && (e2 = this._parentClass);
            var i2 = t4;
            i2 = i2.split(".");
            for (var r2 = 0; r2 < i2.length; r2++)
              e2 = e2[i2[r2]];
            return e2;
          }, t3.prototype._getClassAttribute = function(t4) {
            var e2 = t4.split(".");
            return s._TypeStore.GetClass("BABYLON.GUI." + e2[0])[e2[1]];
          }, t3.prototype._createGuiElement = function(t4, e2, i2) {
            i2 === void 0 && (i2 = true);
            try {
              var r2 = new (s._TypeStore.GetClass("BABYLON.GUI." + t4.nodeName))();
              e2 && i2 && e2.addControl(r2);
              for (var n2 = 0; n2 < t4.attributes.length; n2++)
                if (!t4.attributes[n2].name.toLowerCase().includes("datasource"))
                  if (t4.attributes[n2].name.toLowerCase().includes("observable")) {
                    var o2 = this._getChainElement(t4.attributes[n2].value);
                    r2[t4.attributes[n2].name].add(o2);
                  } else if (t4.attributes[n2].name == "linkWithMesh")
                    this._parentClass ? r2.linkWithMesh(this._parentClass[t4.attributes[n2].value]) : r2.linkWithMesh(window[t4.attributes[n2].value]);
                  else if (t4.attributes[n2].value.startsWith("{{") && t4.attributes[n2].value.endsWith("}}")) {
                    o2 = this._getChainElement(t4.attributes[n2].value.substring(2, t4.attributes[n2].value.length - 2));
                    r2[t4.attributes[n2].name] = o2;
                  } else
                    this._objectAttributes[t4.attributes[n2].name] ? r2[t4.attributes[n2].name] = this._getClassAttribute(t4.attributes[n2].value) : t4.attributes[n2].value == "true" || t4.attributes[n2].value == "false" ? r2[t4.attributes[n2].name] = t4.attributes[n2].value == "true" : r2[t4.attributes[n2].name] = isNaN(Number(t4.attributes[n2].value)) ? t4.attributes[n2].value : Number(t4.attributes[n2].value);
              if (!t4.attributes.getNamedItem("id"))
                return this._nodes[t4.nodeName + Object.keys(this._nodes).length + "_gen"] = r2, r2;
              var a2 = t4.attributes.getNamedItem("id").value;
              if (a2.startsWith("{{") && a2.endsWith("}}") && (a2 = this._getChainElement(a2.substring(2, a2.length - 2))), this._nodes[a2])
                throw "XmlLoader Exception : Duplicate ID, every element should have an unique ID attribute";
              return this._nodes[a2] = r2, r2;
            } catch (e3) {
              throw "XmlLoader Exception : Error parsing Control " + t4.nodeName + "," + e3 + ".";
            }
          }, t3.prototype._parseGrid = function(t4, e2, i2) {
            for (var r2, n2, o2, s2, a2, h2 = t4.children, l2 = false, u2 = -1, c2 = -1, _2 = 0, d2 = 0; d2 < h2.length; d2++)
              if (h2[d2].nodeType == this._nodeTypes.element) {
                if (h2[d2].nodeName != "Row")
                  throw "XmlLoader Exception : Expecting Row node, received " + h2[d2].nodeName;
                if (u2 += 1, o2 = h2[d2].children, !h2[d2].attributes.getNamedItem("height"))
                  throw "XmlLoader Exception : Height must be defined for grid rows";
                n2 = Number(h2[d2].attributes.getNamedItem("height").nodeValue), l2 = !!h2[d2].attributes.getNamedItem("isPixel") && JSON.parse(h2[d2].attributes.getNamedItem("isPixel").nodeValue), e2.addRowDefinition(n2, l2);
                for (var p2 = 0; p2 < o2.length; p2++)
                  if (o2[p2].nodeType == this._nodeTypes.element) {
                    if (o2[p2].nodeName != "Column")
                      throw "XmlLoader Exception : Expecting Column node, received " + o2[p2].nodeName;
                    if (c2 += 1, u2 > 0 && c2 > _2)
                      throw "XmlLoader Exception : In the Grid element, the number of columns is defined in the first row, do not add more columns in the subsequent rows.";
                    if (u2 == 0) {
                      if (!o2[p2].attributes.getNamedItem("width"))
                        throw "XmlLoader Exception : Width must be defined for all the grid columns in the first row";
                      r2 = Number(o2[p2].attributes.getNamedItem("width").nodeValue), l2 = !!o2[p2].attributes.getNamedItem("isPixel") && JSON.parse(o2[p2].attributes.getNamedItem("isPixel").nodeValue), e2.addColumnDefinition(r2, l2);
                    }
                    s2 = o2[p2].children;
                    for (var f2 = 0; f2 < s2.length; f2++)
                      s2[f2].nodeType == this._nodeTypes.element && (a2 = this._createGuiElement(s2[f2], e2, false), e2.addControl(a2, u2, c2), s2[f2].firstChild && this._parseXml(s2[f2].firstChild, a2));
                  }
                u2 == 0 && (_2 = c2), c2 = -1;
              }
            t4.nextSibling && this._parseXml(t4.nextSibling, i2);
          }, t3.prototype._parseElement = function(t4, e2, i2) {
            t4.firstChild && this._parseXml(t4.firstChild, e2), t4.nextSibling && this._parseXml(t4.nextSibling, i2);
          }, t3.prototype._prepareSourceElement = function(t4, e2, i2, r2, n2) {
            this._parentClass ? this._parentClass[i2] = r2[n2] : window[i2] = r2[n2], t4.firstChild && this._parseXml(t4.firstChild, e2, true);
          }, t3.prototype._parseElementsFromSource = function(t4, e2, i2) {
            var r2 = t4.attributes.getNamedItem("dataSource").value;
            if (!r2.includes(" in "))
              throw "XmlLoader Exception : Malformed XML, Data Source must include an in";
            var n2 = true, o2 = r2.split(" in ");
            if (o2.length < 2)
              throw "XmlLoader Exception : Malformed XML, Data Source must an iterator and a source";
            var s2 = o2[1];
            if (s2.startsWith("{") && s2.endsWith("}") && (n2 = false), (!n2 || s2.startsWith("[") && s2.endsWith("]")) && (s2 = s2.substring(1, s2.length - 1)), s2 = this._parentClass ? this._parentClass[s2] : window[s2], n2)
              for (var a2 = 0; a2 < s2.length; a2++)
                this._prepareSourceElement(t4, e2, o2[0], s2, a2);
            else
              for (var a2 in s2)
                this._prepareSourceElement(t4, e2, o2[0], s2, a2);
            t4.nextSibling && this._parseXml(t4.nextSibling, i2);
          }, t3.prototype._parseXml = function(t4, e2, i2) {
            if (i2 === void 0 && (i2 = false), t4.nodeType == this._nodeTypes.element) {
              i2 && t4.setAttribute("id", e2.id + (e2._children.length + 1));
              var r2 = this._createGuiElement(t4, e2);
              t4.nodeName == "Grid" ? this._parseGrid(t4, r2, e2) : t4.attributes.getNamedItem("dataSource") ? this._parseElementsFromSource(t4, r2, e2) : this._parseElement(t4, r2, e2);
            } else
              t4.nextSibling && this._parseXml(t4.nextSibling, e2, i2);
          }, t3.prototype.isLoaded = function() {
            return this._isLoaded;
          }, t3.prototype.getNodeById = function(t4) {
            return this._nodes[t4];
          }, t3.prototype.getNodes = function() {
            return this._nodes;
          }, t3.prototype.loadLayout = function(t4, e2, i2) {
            var r2 = new XMLHttpRequest();
            r2.onreadystatechange = function() {
              if (r2.readyState == 4 && r2.status == 200) {
                if (!r2.responseXML)
                  throw "XmlLoader Exception : XML file is malformed or corrupted.";
                var t5 = r2.responseXML.documentElement;
                this._parseXml(t5.firstChild, e2), this._isLoaded = true, i2 && i2();
              }
            }.bind(this), r2.open("GET", t4, true), r2.send();
          }, t3;
        }(), tt = function(t3) {
          function e2(e3, i2) {
            i2 === void 0 && (i2 = 0);
            var r2 = t3.call(this, e3.x, e3.y, e3.z) || this;
            return r2.buttonIndex = i2, r2;
          }
          return n(e2, t3), e2;
        }(s.Vector3), et = function() {
          function t3(t4) {
            this.name = t4, this._downCount = 0, this._enterCount = -1, this._downPointerIds = {}, this._isVisible = true, this.onPointerMoveObservable = new s.Observable(), this.onPointerOutObservable = new s.Observable(), this.onPointerDownObservable = new s.Observable(), this.onPointerUpObservable = new s.Observable(), this.onPointerClickObservable = new s.Observable(), this.onPointerEnterObservable = new s.Observable(), this._behaviors = new Array();
          }
          return Object.defineProperty(t3.prototype, "position", { get: function() {
            return this._node ? this._node.position : s.Vector3.Zero();
          }, set: function(t4) {
            this._node && (this._node.position = t4);
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "scaling", { get: function() {
            return this._node ? this._node.scaling : new s.Vector3(1, 1, 1);
          }, set: function(t4) {
            this._node && (this._node.scaling = t4);
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "behaviors", { get: function() {
            return this._behaviors;
          }, enumerable: false, configurable: true }), t3.prototype.addBehavior = function(t4) {
            var e2 = this;
            if (this._behaviors.indexOf(t4) !== -1)
              return this;
            t4.init();
            var i2 = this._host.scene;
            return i2.isLoading ? i2.onDataLoadedObservable.addOnce(function() {
              t4.attach(e2);
            }) : t4.attach(this), this._behaviors.push(t4), this;
          }, t3.prototype.removeBehavior = function(t4) {
            var e2 = this._behaviors.indexOf(t4);
            return e2 === -1 || (this._behaviors[e2].detach(), this._behaviors.splice(e2, 1)), this;
          }, t3.prototype.getBehaviorByName = function(t4) {
            for (var e2 = 0, i2 = this._behaviors; e2 < i2.length; e2++) {
              var r2 = i2[e2];
              if (r2.name === t4)
                return r2;
            }
            return null;
          }, Object.defineProperty(t3.prototype, "isVisible", { get: function() {
            return this._isVisible;
          }, set: function(t4) {
            if (this._isVisible !== t4) {
              this._isVisible = t4;
              var e2 = this.mesh;
              e2 && e2.setEnabled(t4);
            }
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "typeName", { get: function() {
            return this._getTypeName();
          }, enumerable: false, configurable: true }), t3.prototype.getClassName = function() {
            return this._getTypeName();
          }, t3.prototype._getTypeName = function() {
            return "Control3D";
          }, Object.defineProperty(t3.prototype, "node", { get: function() {
            return this._node;
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "mesh", { get: function() {
            return this._node instanceof s.AbstractMesh ? this._node : null;
          }, enumerable: false, configurable: true }), t3.prototype.linkToTransformNode = function(t4) {
            return this._node && (this._node.parent = t4), this;
          }, t3.prototype._prepareNode = function(t4) {
            if (!this._node) {
              if (this._node = this._createNode(t4), !this.node)
                return;
              this._node.metadata = this, this._node.position = this.position, this._node.scaling = this.scaling;
              var e2 = this.mesh;
              e2 && (e2.isPickable = true, this._affectMaterial(e2));
            }
          }, t3.prototype._createNode = function(t4) {
            return null;
          }, t3.prototype._affectMaterial = function(t4) {
            t4.material = null;
          }, t3.prototype._onPointerMove = function(t4, e2) {
            this.onPointerMoveObservable.notifyObservers(e2, -1, t4, this);
          }, t3.prototype._onPointerEnter = function(t4) {
            return !(this._enterCount > 0) && (this._enterCount === -1 && (this._enterCount = 0), this._enterCount++, this.onPointerEnterObservable.notifyObservers(this, -1, t4, this), this.pointerEnterAnimation && this.pointerEnterAnimation(), true);
          }, t3.prototype._onPointerOut = function(t4) {
            this._enterCount = 0, this.onPointerOutObservable.notifyObservers(this, -1, t4, this), this.pointerOutAnimation && this.pointerOutAnimation();
          }, t3.prototype._onPointerDown = function(t4, e2, i2, r2) {
            return this._downCount !== 0 ? (this._downCount++, false) : (this._downCount++, this._downPointerIds[i2] = true, this.onPointerDownObservable.notifyObservers(new tt(e2, r2), -1, t4, this), this.pointerDownAnimation && this.pointerDownAnimation(), true);
          }, t3.prototype._onPointerUp = function(t4, e2, i2, r2, n2) {
            this._downCount--, delete this._downPointerIds[i2], this._downCount < 0 ? this._downCount = 0 : this._downCount == 0 && (n2 && (this._enterCount > 0 || this._enterCount === -1) && this.onPointerClickObservable.notifyObservers(new tt(e2, r2), -1, t4, this), this.onPointerUpObservable.notifyObservers(new tt(e2, r2), -1, t4, this), this.pointerUpAnimation && this.pointerUpAnimation());
          }, t3.prototype.forcePointerUp = function(t4) {
            if (t4 === void 0 && (t4 = null), t4 !== null)
              this._onPointerUp(this, s.Vector3.Zero(), t4, 0, true);
            else {
              for (var e2 in this._downPointerIds)
                this._onPointerUp(this, s.Vector3.Zero(), +e2, 0, true);
              this._downCount > 0 && (this._downCount = 1, this._onPointerUp(this, s.Vector3.Zero(), 0, 0, true));
            }
          }, t3.prototype._processObservables = function(t4, e2, i2, r2) {
            if (t4 === s.PointerEventTypes.POINTERMOVE) {
              this._onPointerMove(this, e2);
              var n2 = this._host._lastControlOver[i2];
              return n2 && n2 !== this && n2._onPointerOut(this), n2 !== this && this._onPointerEnter(this), this._host._lastControlOver[i2] = this, true;
            }
            return t4 === s.PointerEventTypes.POINTERDOWN ? (this._onPointerDown(this, e2, i2, r2), this._host._lastControlDown[i2] = this, this._host._lastPickedControl = this, true) : (t4 === s.PointerEventTypes.POINTERUP || t4 === s.PointerEventTypes.POINTERDOUBLETAP) && (this._host._lastControlDown[i2] && this._host._lastControlDown[i2]._onPointerUp(this, e2, i2, r2, true), delete this._host._lastControlDown[i2], true);
          }, t3.prototype._disposeNode = function() {
            this._node && (this._node.dispose(), this._node = null);
          }, t3.prototype.dispose = function() {
            this.onPointerDownObservable.clear(), this.onPointerEnterObservable.clear(), this.onPointerMoveObservable.clear(), this.onPointerOutObservable.clear(), this.onPointerUpObservable.clear(), this.onPointerClickObservable.clear(), this._disposeNode();
            for (var t4 = 0, e2 = this._behaviors; t4 < e2.length; t4++) {
              e2[t4].detach();
            }
          }, t3;
        }(), it = function(t3) {
          function e2(e3) {
            return t3.call(this, e3) || this;
          }
          return n(e2, t3), e2.prototype._getTypeName = function() {
            return "AbstractButton3D";
          }, e2.prototype._createNode = function(t4) {
            return new s.TransformNode("button" + this.name);
          }, e2;
        }(et), rt = function(t3) {
          function e2(e3) {
            var i2 = t3.call(this, e3) || this;
            return i2._contentResolution = 512, i2._contentScaleRatio = 2, i2.pointerEnterAnimation = function() {
              i2.mesh && (i2._currentMaterial.emissiveColor = s.Color3.Red());
            }, i2.pointerOutAnimation = function() {
              i2._currentMaterial.emissiveColor = s.Color3.Black();
            }, i2.pointerDownAnimation = function() {
              i2.mesh && i2.mesh.scaling.scaleInPlace(0.95);
            }, i2.pointerUpAnimation = function() {
              i2.mesh && i2.mesh.scaling.scaleInPlace(1 / 0.95);
            }, i2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "contentResolution", { get: function() {
            return this._contentResolution;
          }, set: function(t4) {
            this._contentResolution !== t4 && (this._contentResolution = t4, this._resetContent());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "contentScaleRatio", { get: function() {
            return this._contentScaleRatio;
          }, set: function(t4) {
            this._contentScaleRatio !== t4 && (this._contentScaleRatio = t4, this._resetContent());
          }, enumerable: false, configurable: true }), e2.prototype._disposeFacadeTexture = function() {
            this._facadeTexture && (this._facadeTexture.dispose(), this._facadeTexture = null);
          }, e2.prototype._resetContent = function() {
            this._disposeFacadeTexture(), this.content = this._content;
          }, Object.defineProperty(e2.prototype, "content", { get: function() {
            return this._content;
          }, set: function(t4) {
            this._content = t4, this._host && this._host.utilityLayer && (this._facadeTexture ? this._facadeTexture.rootContainer.clearControls() : (this._facadeTexture = new J("Facade", this._contentResolution, this._contentResolution, this._host.utilityLayer.utilityLayerScene, true, s.Texture.TRILINEAR_SAMPLINGMODE), this._facadeTexture.rootContainer.scaleX = this._contentScaleRatio, this._facadeTexture.rootContainer.scaleY = this._contentScaleRatio, this._facadeTexture.premulAlpha = true), this._facadeTexture.addControl(t4), this._applyFacade(this._facadeTexture));
          }, enumerable: false, configurable: true }), e2.prototype._applyFacade = function(t4) {
            this._currentMaterial.emissiveTexture = t4;
          }, e2.prototype._getTypeName = function() {
            return "Button3D";
          }, e2.prototype._createNode = function(t4) {
            for (var e3 = new Array(6), i2 = 0; i2 < 6; i2++)
              e3[i2] = new s.Vector4(0, 0, 0, 0);
            return e3[1] = new s.Vector4(0, 0, 1, 1), s.BoxBuilder.CreateBox(this.name + "_rootMesh", { width: 1, height: 1, depth: 0.08, faceUV: e3 }, t4);
          }, e2.prototype._affectMaterial = function(t4) {
            var e3 = new s.StandardMaterial(this.name + "Material", t4.getScene());
            e3.specularColor = s.Color3.Black(), t4.material = e3, this._currentMaterial = e3, this._resetContent();
          }, e2.prototype.dispose = function() {
            t3.prototype.dispose.call(this), this._disposeFacadeTexture(), this._currentMaterial && this._currentMaterial.dispose();
          }, e2;
        }(it), nt = function(t3) {
          function e2(e3) {
            var i2 = t3.call(this, e3) || this;
            return i2._blockLayout = false, i2._children = new Array(), i2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "children", { get: function() {
            return this._children;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "blockLayout", { get: function() {
            return this._blockLayout;
          }, set: function(t4) {
            this._blockLayout !== t4 && (this._blockLayout = t4, this._blockLayout || this._arrangeChildren());
          }, enumerable: false, configurable: true }), e2.prototype.updateLayout = function() {
            return this._arrangeChildren(), this;
          }, e2.prototype.containsControl = function(t4) {
            return this._children.indexOf(t4) !== -1;
          }, e2.prototype.addControl = function(t4) {
            return this._children.indexOf(t4) !== -1 || (t4.parent = this, t4._host = this._host, this._children.push(t4), this._host.utilityLayer && (t4._prepareNode(this._host.utilityLayer.utilityLayerScene), t4.node && (t4.node.parent = this.node), this.blockLayout || this._arrangeChildren())), this;
          }, e2.prototype._arrangeChildren = function() {
          }, e2.prototype._createNode = function(t4) {
            return new s.TransformNode("ContainerNode", t4);
          }, e2.prototype.removeControl = function(t4) {
            var e3 = this._children.indexOf(t4);
            return e3 !== -1 && (this._children.splice(e3, 1), t4.parent = null, t4._disposeNode()), this;
          }, e2.prototype._getTypeName = function() {
            return "Container3D";
          }, e2.prototype.dispose = function() {
            for (var e3 = 0, i2 = this._children; e3 < i2.length; e3++) {
              i2[e3].dispose();
            }
            this._children = [], t3.prototype.dispose.call(this);
          }, e2.UNSET_ORIENTATION = 0, e2.FACEORIGIN_ORIENTATION = 1, e2.FACEORIGINREVERSED_ORIENTATION = 2, e2.FACEFORWARD_ORIENTATION = 3, e2.FACEFORWARDREVERSED_ORIENTATION = 4, e2;
        }(et), ot = function(t3) {
          function e2() {
            var e3 = t3.call(this) || this;
            return e3._columns = 10, e3._rows = 0, e3._rowThenColum = true, e3._orientation = nt.FACEORIGIN_ORIENTATION, e3.margin = 0, e3;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "orientation", { get: function() {
            return this._orientation;
          }, set: function(t4) {
            var e3 = this;
            this._orientation !== t4 && (this._orientation = t4, s.Tools.SetImmediate(function() {
              e3._arrangeChildren();
            }));
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "columns", { get: function() {
            return this._columns;
          }, set: function(t4) {
            var e3 = this;
            this._columns !== t4 && (this._columns = t4, this._rowThenColum = true, s.Tools.SetImmediate(function() {
              e3._arrangeChildren();
            }));
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "rows", { get: function() {
            return this._rows;
          }, set: function(t4) {
            var e3 = this;
            this._rows !== t4 && (this._rows = t4, this._rowThenColum = false, s.Tools.SetImmediate(function() {
              e3._arrangeChildren();
            }));
          }, enumerable: false, configurable: true }), e2.prototype._arrangeChildren = function() {
            this._cellWidth = 0, this._cellHeight = 0;
            for (var t4 = 0, e3 = 0, i2 = 0, r2 = s.Matrix.Invert(this.node.computeWorldMatrix(true)), n2 = 0, o2 = this._children; n2 < o2.length; n2++) {
              if ((b2 = o2[n2]).mesh) {
                i2++, b2.mesh.computeWorldMatrix(true);
                var a2 = b2.mesh.getHierarchyBoundingVectors(), h2 = s.TmpVectors.Vector3[0], l2 = s.TmpVectors.Vector3[1];
                a2.max.subtractToRef(a2.min, l2), l2.scaleInPlace(0.5), s.Vector3.TransformNormalToRef(l2, r2, h2), this._cellWidth = Math.max(this._cellWidth, 2 * h2.x), this._cellHeight = Math.max(this._cellHeight, 2 * h2.y);
              }
            }
            this._cellWidth += 2 * this.margin, this._cellHeight += 2 * this.margin, this._rowThenColum ? (e3 = this._columns, t4 = Math.ceil(i2 / this._columns)) : (t4 = this._rows, e3 = Math.ceil(i2 / this._rows));
            var u2 = 0.5 * e3 * this._cellWidth, c2 = 0.5 * t4 * this._cellHeight, _2 = [], d2 = 0;
            if (this._rowThenColum)
              for (var p2 = 0; p2 < t4; p2++)
                for (var f2 = 0; f2 < e3 && (_2.push(new s.Vector3(f2 * this._cellWidth - u2 + this._cellWidth / 2, p2 * this._cellHeight - c2 + this._cellHeight / 2, 0)), !(++d2 > i2)); f2++)
                  ;
            else
              for (f2 = 0; f2 < e3; f2++)
                for (p2 = 0; p2 < t4 && (_2.push(new s.Vector3(f2 * this._cellWidth - u2 + this._cellWidth / 2, p2 * this._cellHeight - c2 + this._cellHeight / 2, 0)), !(++d2 > i2)); p2++)
                  ;
            d2 = 0;
            for (var g2 = 0, m2 = this._children; g2 < m2.length; g2++) {
              var b2;
              (b2 = m2[g2]).mesh && (this._mapGridNode(b2, _2[d2]), d2++);
            }
            this._finalProcessing();
          }, e2.prototype._finalProcessing = function() {
          }, e2;
        }(nt), st = function(t3) {
          function e2() {
            var e3 = t3 !== null && t3.apply(this, arguments) || this;
            return e3._radius = 5, e3;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "radius", { get: function() {
            return this._radius;
          }, set: function(t4) {
            var e3 = this;
            this._radius !== t4 && (this._radius = t4, s.Tools.SetImmediate(function() {
              e3._arrangeChildren();
            }));
          }, enumerable: false, configurable: true }), e2.prototype._mapGridNode = function(t4, e3) {
            var i2 = t4.mesh;
            if (i2) {
              var r2 = this._cylindricalMapping(e3);
              switch (t4.position = r2, this.orientation) {
                case nt.FACEORIGIN_ORIENTATION:
                  i2.lookAt(new s.Vector3(2 * r2.x, r2.y, 2 * r2.z));
                  break;
                case nt.FACEORIGINREVERSED_ORIENTATION:
                  i2.lookAt(new s.Vector3(-r2.x, r2.y, -r2.z));
                  break;
                case nt.FACEFORWARD_ORIENTATION:
                  break;
                case nt.FACEFORWARDREVERSED_ORIENTATION:
                  i2.rotate(s.Axis.Y, Math.PI, s.Space.LOCAL);
              }
            }
          }, e2.prototype._cylindricalMapping = function(t4) {
            var e3 = new s.Vector3(0, t4.y, this._radius), i2 = t4.x / this._radius;
            return s.Matrix.RotationYawPitchRollToRef(i2, 0, 0, s.TmpVectors.Matrix[0]), s.Vector3.TransformNormal(e3, s.TmpVectors.Matrix[0]);
          }, e2;
        }(ot), at = "precision highp float;\n\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n\nuniform mat4 world;\nuniform mat4 viewProjection;\nvarying vec2 vUV;\n#ifdef BORDER\nvarying vec2 scaleInfo;\nuniform float borderWidth;\nuniform vec3 scaleFactor;\n#endif\n#ifdef HOVERLIGHT\nvarying vec3 worldPosition;\n#endif\nvoid main(void) {\nvUV=uv;\n#ifdef BORDER\nvec3 scale=scaleFactor;\nfloat minScale=min(min(scale.x,scale.y),scale.z);\nfloat maxScale=max(max(scale.x,scale.y),scale.z);\nfloat minOverMiddleScale=minScale/(scale.x+scale.y+scale.z-minScale-maxScale);\nfloat areaYZ=scale.y*scale.z;\nfloat areaXZ=scale.x*scale.z;\nfloat areaXY=scale.x*scale.y;\nfloat scaledBorderWidth=borderWidth;\nif (abs(normal.x) == 1.0)\n{\nscale.x=scale.y;\nscale.y=scale.z;\nif (areaYZ>areaXZ && areaYZ>areaXY)\n{\nscaledBorderWidth*=minOverMiddleScale;\n}\n}\nelse if (abs(normal.y) == 1.0)\n{\nscale.x=scale.z;\nif (areaXZ>areaXY && areaXZ>areaYZ)\n{\nscaledBorderWidth*=minOverMiddleScale;\n}\n}\nelse\n{\nif (areaXY>areaYZ && areaXY>areaXZ)\n{\nscaledBorderWidth*=minOverMiddleScale;\n}\n}\nfloat scaleRatio=min(scale.x,scale.y)/max(scale.x,scale.y);\nif (scale.x>scale.y)\n{\nscaleInfo.x=1.0-(scaledBorderWidth*scaleRatio);\nscaleInfo.y=1.0-scaledBorderWidth;\n}\nelse\n{\nscaleInfo.x=1.0-scaledBorderWidth;\nscaleInfo.y=1.0-(scaledBorderWidth*scaleRatio);\n}\n#endif\nvec4 worldPos=world*vec4(position,1.0);\n#ifdef HOVERLIGHT\nworldPosition=worldPos.xyz;\n#endif\ngl_Position=viewProjection*worldPos;\n}\n";
        s.Effect.ShadersStore.fluentVertexShader = at;
        var ht = "precision highp float;\nvarying vec2 vUV;\nuniform vec4 albedoColor;\n#ifdef INNERGLOW\nuniform vec4 innerGlowColor;\n#endif\n#ifdef BORDER\nvarying vec2 scaleInfo;\nuniform float edgeSmoothingValue;\nuniform float borderMinValue;\n#endif\n#ifdef HOVERLIGHT\nvarying vec3 worldPosition;\nuniform vec3 hoverPosition;\nuniform vec4 hoverColor;\nuniform float hoverRadius;\n#endif\n#ifdef TEXTURE\nuniform sampler2D albedoSampler;\n#endif\nvoid main(void) {\nvec3 albedo=albedoColor.rgb;\nfloat alpha=albedoColor.a;\n#ifdef TEXTURE\nalbedo=texture2D(albedoSampler,vUV).rgb;\n#endif\n#ifdef HOVERLIGHT\nfloat pointToHover=(1.0-clamp(length(hoverPosition-worldPosition)/hoverRadius,0.,1.))*hoverColor.a;\nalbedo=clamp(albedo+hoverColor.rgb*pointToHover,0.,1.);\n#else\nfloat pointToHover=1.0;\n#endif\n#ifdef BORDER\nfloat borderPower=10.0;\nfloat inverseBorderPower=1.0/borderPower;\nvec3 borderColor=albedo*borderPower;\nvec2 distanceToEdge;\ndistanceToEdge.x=abs(vUV.x-0.5)*2.0;\ndistanceToEdge.y=abs(vUV.y-0.5)*2.0;\nfloat borderValue=max(smoothstep(scaleInfo.x-edgeSmoothingValue,scaleInfo.x+edgeSmoothingValue,distanceToEdge.x),\nsmoothstep(scaleInfo.y-edgeSmoothingValue,scaleInfo.y+edgeSmoothingValue,distanceToEdge.y));\nborderColor=borderColor*borderValue*max(borderMinValue*inverseBorderPower,pointToHover);\nalbedo+=borderColor;\nalpha=max(alpha,borderValue);\n#endif\n#ifdef INNERGLOW\n\nvec2 uvGlow=(vUV-vec2(0.5,0.5))*(innerGlowColor.a*2.0);\nuvGlow=uvGlow*uvGlow;\nuvGlow=uvGlow*uvGlow;\nalbedo+=mix(vec3(0.0,0.0,0.0),innerGlowColor.rgb,uvGlow.x+uvGlow.y);\n#endif\ngl_FragColor=vec4(albedo,alpha);\n}";
        s.Effect.ShadersStore.fluentPixelShader = ht;
        var lt = function(t3) {
          function e2() {
            var e3 = t3.call(this) || this;
            return e3.INNERGLOW = false, e3.BORDER = false, e3.HOVERLIGHT = false, e3.TEXTURE = false, e3.rebuild(), e3;
          }
          return n(e2, t3), e2;
        }(s.MaterialDefines), ut = function(t3) {
          function e2(e3, i2) {
            var r2 = t3.call(this, e3, i2) || this;
            return r2.innerGlowColorIntensity = 0.5, r2.innerGlowColor = new s.Color3(1, 1, 1), r2.albedoColor = new s.Color3(0.3, 0.35, 0.4), r2.renderBorders = false, r2.borderWidth = 0.5, r2.edgeSmoothingValue = 0.02, r2.borderMinValue = 0.1, r2.renderHoverLight = false, r2.hoverRadius = 1, r2.hoverColor = new s.Color4(0.3, 0.3, 0.3, 1), r2.hoverPosition = s.Vector3.Zero(), r2;
          }
          return n(e2, t3), e2.prototype.needAlphaBlending = function() {
            return this.alpha !== 1;
          }, e2.prototype.needAlphaTesting = function() {
            return false;
          }, e2.prototype.getAlphaTestTexture = function() {
            return null;
          }, e2.prototype.isReadyForSubMesh = function(t4, e3, i2) {
            if (this.isFrozen && e3.effect && e3.effect._wasPreviouslyReady)
              return true;
            e3._materialDefines || (e3._materialDefines = new lt());
            var r2 = this.getScene(), n2 = e3._materialDefines;
            if (!this.checkReadyOnEveryCall && e3.effect && n2._renderId === r2.getRenderId())
              return true;
            if (n2._areTexturesDirty)
              if (n2.INNERGLOW = this.innerGlowColorIntensity > 0, n2.BORDER = this.renderBorders, n2.HOVERLIGHT = this.renderHoverLight, this._albedoTexture) {
                if (!this._albedoTexture.isReadyOrNotBlocking())
                  return false;
                n2.TEXTURE = true;
              } else
                n2.TEXTURE = false;
            var o2 = r2.getEngine();
            if (n2.isDirty) {
              n2.markAsProcessed(), r2.resetCachedMaterial();
              var a2 = [s.VertexBuffer.PositionKind];
              a2.push(s.VertexBuffer.NormalKind), a2.push(s.VertexBuffer.UVKind);
              var h2 = ["world", "viewProjection", "innerGlowColor", "albedoColor", "borderWidth", "edgeSmoothingValue", "scaleFactor", "borderMinValue", "hoverColor", "hoverPosition", "hoverRadius"], l2 = ["albedoSampler"], u2 = new Array();
              s.MaterialHelper.PrepareUniformsAndSamplersList({ uniformsNames: h2, uniformBuffersNames: u2, samplers: l2, defines: n2, maxSimultaneousLights: 4 });
              var c2 = n2.toString();
              e3.setEffect(r2.getEngine().createEffect("fluent", { attributes: a2, uniformsNames: h2, uniformBuffersNames: u2, samplers: l2, defines: c2, fallbacks: null, onCompiled: this.onCompiled, onError: this.onError, indexParameters: { maxSimultaneousLights: 4 } }, o2));
            }
            return !(!e3.effect || !e3.effect.isReady()) && (n2._renderId = r2.getRenderId(), e3.effect._wasPreviouslyReady = true, true);
          }, e2.prototype.bindForSubMesh = function(t4, e3, i2) {
            var r2 = this.getScene(), n2 = i2._materialDefines;
            if (n2) {
              var o2 = i2.effect;
              o2 && (this._activeEffect = o2, this.bindOnlyWorldMatrix(t4), this._activeEffect.setMatrix("viewProjection", r2.getTransformMatrix()), this._mustRebind(r2, o2) && (this._activeEffect.setColor4("albedoColor", this.albedoColor, this.alpha), n2.INNERGLOW && this._activeEffect.setColor4("innerGlowColor", this.innerGlowColor, this.innerGlowColorIntensity), n2.BORDER && (this._activeEffect.setFloat("borderWidth", this.borderWidth), this._activeEffect.setFloat("edgeSmoothingValue", this.edgeSmoothingValue), this._activeEffect.setFloat("borderMinValue", this.borderMinValue), e3.getBoundingInfo().boundingBox.extendSize.multiplyToRef(e3.scaling, s.TmpVectors.Vector3[0]), this._activeEffect.setVector3("scaleFactor", s.TmpVectors.Vector3[0])), n2.HOVERLIGHT && (this._activeEffect.setDirectColor4("hoverColor", this.hoverColor), this._activeEffect.setFloat("hoverRadius", this.hoverRadius), this._activeEffect.setVector3("hoverPosition", this.hoverPosition)), n2.TEXTURE && this._activeEffect.setTexture("albedoSampler", this._albedoTexture)), this._afterBind(e3, this._activeEffect));
            }
          }, e2.prototype.getActiveTextures = function() {
            return t3.prototype.getActiveTextures.call(this);
          }, e2.prototype.hasTexture = function(e3) {
            return !!t3.prototype.hasTexture.call(this, e3);
          }, e2.prototype.dispose = function(e3) {
            t3.prototype.dispose.call(this, e3);
          }, e2.prototype.clone = function(t4) {
            var i2 = this;
            return s.SerializationHelper.Clone(function() {
              return new e2(t4, i2.getScene());
            }, this);
          }, e2.prototype.serialize = function() {
            var t4 = s.SerializationHelper.Serialize(this);
            return t4.customType = "BABYLON.GUI.FluentMaterial", t4;
          }, e2.prototype.getClassName = function() {
            return "FluentMaterial";
          }, e2.Parse = function(t4, i2, r2) {
            return s.SerializationHelper.Parse(function() {
              return new e2(t4.name, i2);
            }, t4, i2, r2);
          }, o([Object(s.serialize)(), Object(s.expandToProperty)("_markAllSubMeshesAsTexturesDirty")], e2.prototype, "innerGlowColorIntensity", void 0), o([Object(s.serializeAsColor3)()], e2.prototype, "innerGlowColor", void 0), o([Object(s.serializeAsColor3)()], e2.prototype, "albedoColor", void 0), o([Object(s.serialize)(), Object(s.expandToProperty)("_markAllSubMeshesAsTexturesDirty")], e2.prototype, "renderBorders", void 0), o([Object(s.serialize)()], e2.prototype, "borderWidth", void 0), o([Object(s.serialize)()], e2.prototype, "edgeSmoothingValue", void 0), o([Object(s.serialize)()], e2.prototype, "borderMinValue", void 0), o([Object(s.serialize)(), Object(s.expandToProperty)("_markAllSubMeshesAsTexturesDirty")], e2.prototype, "renderHoverLight", void 0), o([Object(s.serialize)()], e2.prototype, "hoverRadius", void 0), o([Object(s.serializeAsColor4)()], e2.prototype, "hoverColor", void 0), o([Object(s.serializeAsVector3)()], e2.prototype, "hoverPosition", void 0), o([Object(s.serializeAsTexture)("albedoTexture")], e2.prototype, "_albedoTexture", void 0), o([Object(s.expandToProperty)("_markAllSubMeshesAsTexturesAndMiscDirty")], e2.prototype, "albedoTexture", void 0), e2;
        }(s.PushMaterial);
        s._TypeStore.RegisteredTypes["BABYLON.GUI.FluentMaterial"] = ut;
        var ct = function(t3) {
          function e2(e3, i2) {
            i2 === void 0 && (i2 = true);
            var r2 = t3.call(this, e3) || this;
            return r2._shareMaterials = true, r2._shareMaterials = i2, r2.pointerEnterAnimation = function() {
              r2.mesh && r2._frontPlate.setEnabled(true);
            }, r2.pointerOutAnimation = function() {
              r2.mesh && r2._frontPlate.setEnabled(false);
            }, r2;
          }
          return n(e2, t3), e2.prototype._disposeTooltip = function() {
            this._tooltipFade = null, this._tooltipTextBlock && this._tooltipTextBlock.dispose(), this._tooltipTexture && this._tooltipTexture.dispose(), this._tooltipMesh && this._tooltipMesh.dispose(), this.onPointerEnterObservable.remove(this._tooltipHoverObserver), this.onPointerOutObservable.remove(this._tooltipOutObserver);
          }, Object.defineProperty(e2.prototype, "renderingGroupId", { get: function() {
            return this._backPlate.renderingGroupId;
          }, set: function(t4) {
            this._backPlate.renderingGroupId = t4, this._textPlate.renderingGroupId = t4, this._frontPlate.renderingGroupId = t4, this._tooltipMesh && (this._tooltipMesh.renderingGroupId = t4);
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "tooltipText", { get: function() {
            return this._tooltipTextBlock ? this._tooltipTextBlock.text : null;
          }, set: function(t4) {
            var e3 = this;
            if (t4) {
              if (!this._tooltipFade) {
                this._tooltipMesh = s.PlaneBuilder.CreatePlane("", { size: 1 }, this._backPlate._scene);
                var i2 = s.PlaneBuilder.CreatePlane("", { size: 1, sideOrientation: s.Mesh.DOUBLESIDE }, this._backPlate._scene), r2 = new s.StandardMaterial("", this._backPlate._scene);
                r2.diffuseColor = s.Color3.FromHexString("#212121"), i2.material = r2, i2.isPickable = false, this._tooltipMesh.addChild(i2), i2.position.z = 0.05, this._tooltipMesh.scaling.y = 1 / 3, this._tooltipMesh.position.y = 0.7, this._tooltipMesh.position.z = -0.15, this._tooltipMesh.isPickable = false, this._tooltipMesh.parent = this._backPlate, this._tooltipTexture = J.CreateForMesh(this._tooltipMesh), this._tooltipTextBlock = new y(), this._tooltipTextBlock.scaleY = 3, this._tooltipTextBlock.color = "white", this._tooltipTextBlock.fontSize = 130, this._tooltipTexture.addControl(this._tooltipTextBlock), this._tooltipFade = new s.FadeInOutBehavior(), this._tooltipFade.delay = 500, this._tooltipMesh.addBehavior(this._tooltipFade), this._tooltipHoverObserver = this.onPointerEnterObservable.add(function() {
                  e3._tooltipFade && e3._tooltipFade.fadeIn(true);
                }), this._tooltipOutObserver = this.onPointerOutObservable.add(function() {
                  e3._tooltipFade && e3._tooltipFade.fadeIn(false);
                });
              }
              this._tooltipTextBlock && (this._tooltipTextBlock.text = t4);
            } else
              this._disposeTooltip();
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "text", { get: function() {
            return this._text;
          }, set: function(t4) {
            this._text !== t4 && (this._text = t4, this._rebuildContent());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "imageUrl", { get: function() {
            return this._imageUrl;
          }, set: function(t4) {
            this._imageUrl !== t4 && (this._imageUrl = t4, this._rebuildContent());
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "backMaterial", { get: function() {
            return this._backMaterial;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "frontMaterial", { get: function() {
            return this._frontMaterial;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "plateMaterial", { get: function() {
            return this._plateMaterial;
          }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "shareMaterials", { get: function() {
            return this._shareMaterials;
          }, enumerable: false, configurable: true }), e2.prototype._getTypeName = function() {
            return "HolographicButton";
          }, e2.prototype._rebuildContent = function() {
            this._disposeFacadeTexture();
            var t4 = new C();
            if (t4.isVertical = true, this._imageUrl) {
              var e3 = new v();
              e3.source = this._imageUrl, e3.paddingTop = "40px", e3.height = "180px", e3.width = "100px", e3.paddingBottom = "40px", t4.addControl(e3);
            }
            if (this._text) {
              var i2 = new y();
              i2.text = this._text, i2.color = "white", i2.height = "30px", i2.fontSize = 24, t4.addControl(i2);
            }
            this._frontPlate && (this.content = t4);
          }, e2.prototype._createNode = function(e3) {
            return this._backPlate = s.BoxBuilder.CreateBox(this.name + "BackMesh", { width: 1, height: 1, depth: 0.08 }, e3), this._frontPlate = s.BoxBuilder.CreateBox(this.name + "FrontMesh", { width: 1, height: 1, depth: 0.08 }, e3), this._frontPlate.parent = this._backPlate, this._frontPlate.position.z = -0.08, this._frontPlate.isPickable = false, this._frontPlate.setEnabled(false), this._textPlate = t3.prototype._createNode.call(this, e3), this._textPlate.parent = this._backPlate, this._textPlate.position.z = -0.08, this._textPlate.isPickable = false, this._backPlate;
          }, e2.prototype._applyFacade = function(t4) {
            this._plateMaterial.emissiveTexture = t4, this._plateMaterial.opacityTexture = t4;
          }, e2.prototype._createBackMaterial = function(t4) {
            var e3 = this;
            this._backMaterial = new ut(this.name + "Back Material", t4.getScene()), this._backMaterial.renderHoverLight = true, this._pickedPointObserver = this._host.onPickedPointChangedObservable.add(function(t5) {
              t5 ? (e3._backMaterial.hoverPosition = t5, e3._backMaterial.hoverColor.a = 1) : e3._backMaterial.hoverColor.a = 0;
            });
          }, e2.prototype._createFrontMaterial = function(t4) {
            this._frontMaterial = new ut(this.name + "Front Material", t4.getScene()), this._frontMaterial.innerGlowColorIntensity = 0, this._frontMaterial.alpha = 0.5, this._frontMaterial.renderBorders = true;
          }, e2.prototype._createPlateMaterial = function(t4) {
            this._plateMaterial = new s.StandardMaterial(this.name + "Plate Material", t4.getScene()), this._plateMaterial.specularColor = s.Color3.Black();
          }, e2.prototype._affectMaterial = function(t4) {
            this._shareMaterials ? (this._host._sharedMaterials.backFluentMaterial ? this._backMaterial = this._host._sharedMaterials.backFluentMaterial : (this._createBackMaterial(t4), this._host._sharedMaterials.backFluentMaterial = this._backMaterial), this._host._sharedMaterials.frontFluentMaterial ? this._frontMaterial = this._host._sharedMaterials.frontFluentMaterial : (this._createFrontMaterial(t4), this._host._sharedMaterials.frontFluentMaterial = this._frontMaterial)) : (this._createBackMaterial(t4), this._createFrontMaterial(t4)), this._createPlateMaterial(t4), this._backPlate.material = this._backMaterial, this._frontPlate.material = this._frontMaterial, this._textPlate.material = this._plateMaterial, this._rebuildContent();
          }, e2.prototype.dispose = function() {
            t3.prototype.dispose.call(this), this._disposeTooltip(), this.shareMaterials || (this._backMaterial.dispose(), this._frontMaterial.dispose(), this._plateMaterial.dispose(), this._pickedPointObserver && (this._host.onPickedPointChangedObservable.remove(this._pickedPointObserver), this._pickedPointObserver = null));
          }, e2;
        }(rt), _t = function(t3) {
          function e2(e3, i2) {
            var r2 = t3.call(this, i2) || this;
            return r2._currentMesh = e3, r2.pointerEnterAnimation = function() {
              r2.mesh && r2.mesh.scaling.scaleInPlace(1.1);
            }, r2.pointerOutAnimation = function() {
              r2.mesh && r2.mesh.scaling.scaleInPlace(1 / 1.1);
            }, r2.pointerDownAnimation = function() {
              r2.mesh && r2.mesh.scaling.scaleInPlace(0.95);
            }, r2.pointerUpAnimation = function() {
              r2.mesh && r2.mesh.scaling.scaleInPlace(1 / 0.95);
            }, r2;
          }
          return n(e2, t3), e2.prototype._getTypeName = function() {
            return "MeshButton3D";
          }, e2.prototype._createNode = function(t4) {
            var e3 = this;
            return this._currentMesh.getChildMeshes().forEach(function(t5) {
              t5.metadata = e3;
            }), this._currentMesh;
          }, e2.prototype._affectMaterial = function(t4) {
          }, e2;
        }(rt), dt = function(t3) {
          function e2() {
            return t3 !== null && t3.apply(this, arguments) || this;
          }
          return n(e2, t3), e2.prototype._mapGridNode = function(t4, e3) {
            var i2 = t4.mesh;
            if (i2) {
              t4.position = e3.clone();
              var r2 = s.TmpVectors.Vector3[0];
              switch (r2.copyFrom(e3), this.orientation) {
                case nt.FACEORIGIN_ORIENTATION:
                case nt.FACEFORWARD_ORIENTATION:
                  r2.addInPlace(new s.Vector3(0, 0, 1)), i2.lookAt(r2);
                  break;
                case nt.FACEFORWARDREVERSED_ORIENTATION:
                case nt.FACEORIGINREVERSED_ORIENTATION:
                  r2.addInPlace(new s.Vector3(0, 0, -1)), i2.lookAt(r2);
              }
            }
          }, e2;
        }(ot), pt = function(t3) {
          function e2() {
            var e3 = t3 !== null && t3.apply(this, arguments) || this;
            return e3._iteration = 100, e3;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "iteration", { get: function() {
            return this._iteration;
          }, set: function(t4) {
            var e3 = this;
            this._iteration !== t4 && (this._iteration = t4, s.Tools.SetImmediate(function() {
              e3._arrangeChildren();
            }));
          }, enumerable: false, configurable: true }), e2.prototype._mapGridNode = function(t4, e3) {
            var i2 = t4.mesh, r2 = this._scatterMapping(e3);
            if (i2) {
              switch (this.orientation) {
                case nt.FACEORIGIN_ORIENTATION:
                case nt.FACEFORWARD_ORIENTATION:
                  i2.lookAt(new s.Vector3(0, 0, 1));
                  break;
                case nt.FACEFORWARDREVERSED_ORIENTATION:
                case nt.FACEORIGINREVERSED_ORIENTATION:
                  i2.lookAt(new s.Vector3(0, 0, -1));
              }
              t4.position = r2;
            }
          }, e2.prototype._scatterMapping = function(t4) {
            return t4.x = (1 - 2 * Math.random()) * this._cellWidth, t4.y = (1 - 2 * Math.random()) * this._cellHeight, t4;
          }, e2.prototype._finalProcessing = function() {
            for (var t4 = [], e3 = 0, i2 = this._children; e3 < i2.length; e3++) {
              var r2 = i2[e3];
              r2.mesh && t4.push(r2.mesh);
            }
            for (var n2 = 0; n2 < this._iteration; n2++) {
              t4.sort(function(t5, e4) {
                var i3 = t5.position.lengthSquared(), r3 = e4.position.lengthSquared();
                return i3 < r3 ? 1 : i3 > r3 ? -1 : 0;
              });
              for (var o2 = Math.pow(this.margin, 2), a2 = Math.max(this._cellWidth, this._cellHeight), h2 = s.TmpVectors.Vector2[0], l2 = s.TmpVectors.Vector3[0], u2 = 0; u2 < t4.length - 1; u2++)
                for (var c2 = u2 + 1; c2 < t4.length; c2++)
                  if (u2 != c2) {
                    t4[c2].position.subtractToRef(t4[u2].position, l2), h2.x = l2.x, h2.y = l2.y;
                    var _2 = a2, d2 = h2.lengthSquared() - o2;
                    (d2 -= Math.min(d2, o2)) < Math.pow(_2, 2) && (h2.normalize(), l2.scaleInPlace(0.5 * (_2 - Math.sqrt(d2))), t4[c2].position.addInPlace(l2), t4[u2].position.subtractInPlace(l2));
                  }
            }
          }, e2;
        }(ot), ft = function(t3) {
          function e2() {
            var e3 = t3 !== null && t3.apply(this, arguments) || this;
            return e3._radius = 5, e3;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "radius", { get: function() {
            return this._radius;
          }, set: function(t4) {
            var e3 = this;
            this._radius !== t4 && (this._radius = t4, s.Tools.SetImmediate(function() {
              e3._arrangeChildren();
            }));
          }, enumerable: false, configurable: true }), e2.prototype._mapGridNode = function(t4, e3) {
            var i2 = t4.mesh;
            if (i2) {
              var r2 = this._sphericalMapping(e3);
              switch (t4.position = r2, this.orientation) {
                case nt.FACEORIGIN_ORIENTATION:
                  i2.lookAt(new s.Vector3(2 * r2.x, 2 * r2.y, 2 * r2.z));
                  break;
                case nt.FACEORIGINREVERSED_ORIENTATION:
                  i2.lookAt(new s.Vector3(-r2.x, -r2.y, -r2.z));
                  break;
                case nt.FACEFORWARD_ORIENTATION:
                  break;
                case nt.FACEFORWARDREVERSED_ORIENTATION:
                  i2.rotate(s.Axis.Y, Math.PI, s.Space.LOCAL);
              }
            }
          }, e2.prototype._sphericalMapping = function(t4) {
            var e3 = new s.Vector3(0, 0, this._radius), i2 = t4.y / this._radius, r2 = -t4.x / this._radius;
            return s.Matrix.RotationYawPitchRollToRef(r2, i2, 0, s.TmpVectors.Matrix[0]), s.Vector3.TransformNormal(e3, s.TmpVectors.Matrix[0]);
          }, e2;
        }(ot), gt = function(t3) {
          function e2(e3) {
            e3 === void 0 && (e3 = false);
            var i2 = t3.call(this) || this;
            return i2._isVertical = false, i2.margin = 0.1, i2._isVertical = e3, i2;
          }
          return n(e2, t3), Object.defineProperty(e2.prototype, "isVertical", { get: function() {
            return this._isVertical;
          }, set: function(t4) {
            var e3 = this;
            this._isVertical !== t4 && (this._isVertical = t4, s.Tools.SetImmediate(function() {
              e3._arrangeChildren();
            }));
          }, enumerable: false, configurable: true }), e2.prototype._arrangeChildren = function() {
            for (var t4, e3 = 0, i2 = 0, r2 = 0, n2 = [], o2 = s.Matrix.Invert(this.node.computeWorldMatrix(true)), a2 = 0, h2 = this._children; a2 < h2.length; a2++) {
              if ((p2 = h2[a2]).mesh) {
                r2++, p2.mesh.computeWorldMatrix(true), p2.mesh.getWorldMatrix().multiplyToRef(o2, s.TmpVectors.Matrix[0]);
                var l2 = p2.mesh.getBoundingInfo().boundingBox, u2 = s.Vector3.TransformNormal(l2.extendSize, s.TmpVectors.Matrix[0]);
                n2.push(u2), this._isVertical ? i2 += u2.y : e3 += u2.x;
              }
            }
            this._isVertical ? i2 += (r2 - 1) * this.margin / 2 : e3 += (r2 - 1) * this.margin / 2, t4 = this._isVertical ? -i2 : -e3;
            for (var c2 = 0, _2 = 0, d2 = this._children; _2 < d2.length; _2++) {
              var p2;
              if ((p2 = d2[_2]).mesh) {
                r2--;
                u2 = n2[c2++];
                this._isVertical ? (p2.position.y = t4 + u2.y, p2.position.x = 0, t4 += 2 * u2.y) : (p2.position.x = t4 + u2.x, p2.position.y = 0, t4 += 2 * u2.x), t4 += r2 > 0 ? this.margin : 0;
              }
            }
          }, e2;
        }(nt), mt = function() {
          function t3(t4) {
            var e2 = this;
            this._lastControlOver = {}, this._lastControlDown = {}, this.onPickedPointChangedObservable = new s.Observable(), this._sharedMaterials = {}, this._scene = t4 || s.EngineStore.LastCreatedScene, this._sceneDisposeObserver = this._scene.onDisposeObservable.add(function() {
              e2._sceneDisposeObserver = null, e2._utilityLayer = null, e2.dispose();
            }), this._utilityLayer = new s.UtilityLayerRenderer(this._scene), this._utilityLayer.onlyCheckPointerDownEvents = false, this._utilityLayer.pickUtilitySceneFirst = false, this._utilityLayer.mainSceneTrackerPredicate = function(t5) {
              return t5 && t5.metadata && t5.metadata._node;
            }, this._rootContainer = new nt("RootContainer"), this._rootContainer._host = this;
            var i2 = this._utilityLayer.utilityLayerScene;
            this._pointerOutObserver = this._utilityLayer.onPointerOutObservable.add(function(t5) {
              e2._handlePointerOut(t5, true);
            }), this._pointerObserver = i2.onPointerObservable.add(function(t5, i3) {
              e2._doPicking(t5);
            }), this._utilityLayer.utilityLayerScene.autoClear = false, this._utilityLayer.utilityLayerScene.autoClearDepthAndStencil = false, new s.HemisphericLight("hemi", s.Vector3.Up(), this._utilityLayer.utilityLayerScene);
          }
          return Object.defineProperty(t3.prototype, "scene", { get: function() {
            return this._scene;
          }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "utilityLayer", { get: function() {
            return this._utilityLayer;
          }, enumerable: false, configurable: true }), t3.prototype._handlePointerOut = function(t4, e2) {
            var i2 = this._lastControlOver[t4];
            i2 && (i2._onPointerOut(i2), delete this._lastControlOver[t4]), e2 && this._lastControlDown[t4] && (this._lastControlDown[t4].forcePointerUp(), delete this._lastControlDown[t4]), this.onPickedPointChangedObservable.notifyObservers(null);
          }, t3.prototype._doPicking = function(t4) {
            if (!this._utilityLayer || !this._utilityLayer.shouldRender || !this._utilityLayer.utilityLayerScene.activeCamera)
              return false;
            var e2 = t4.event, i2 = e2.pointerId || 0, r2 = e2.button, n2 = t4.pickInfo;
            if (!n2 || !n2.hit)
              return this._handlePointerOut(i2, t4.type === s.PointerEventTypes.POINTERUP), false;
            var o2 = n2.pickedMesh.metadata;
            return n2.pickedPoint && this.onPickedPointChangedObservable.notifyObservers(n2.pickedPoint), o2._processObservables(t4.type, n2.pickedPoint, i2, r2) || t4.type === s.PointerEventTypes.POINTERMOVE && (this._lastControlOver[i2] && this._lastControlOver[i2]._onPointerOut(this._lastControlOver[i2]), delete this._lastControlOver[i2]), t4.type === s.PointerEventTypes.POINTERUP && (this._lastControlDown[e2.pointerId] && (this._lastControlDown[e2.pointerId].forcePointerUp(), delete this._lastControlDown[e2.pointerId]), e2.pointerType === "touch" && this._handlePointerOut(i2, false)), true;
          }, Object.defineProperty(t3.prototype, "rootContainer", { get: function() {
            return this._rootContainer;
          }, enumerable: false, configurable: true }), t3.prototype.containsControl = function(t4) {
            return this._rootContainer.containsControl(t4);
          }, t3.prototype.addControl = function(t4) {
            return this._rootContainer.addControl(t4), this;
          }, t3.prototype.removeControl = function(t4) {
            return this._rootContainer.removeControl(t4), this;
          }, t3.prototype.dispose = function() {
            for (var t4 in this._rootContainer.dispose(), this._sharedMaterials)
              this._sharedMaterials.hasOwnProperty(t4) && this._sharedMaterials[t4].dispose();
            this._sharedMaterials = {}, this._pointerOutObserver && this._utilityLayer && (this._utilityLayer.onPointerOutObservable.remove(this._pointerOutObserver), this._pointerOutObserver = null), this.onPickedPointChangedObservable.clear();
            var e2 = this._utilityLayer ? this._utilityLayer.utilityLayerScene : null;
            e2 && this._pointerObserver && (e2.onPointerObservable.remove(this._pointerObserver), this._pointerObserver = null), this._scene && this._sceneDisposeObserver && (this._scene.onDisposeObservable.remove(this._sceneDisposeObserver), this._sceneDisposeObserver = null), this._utilityLayer && this._utilityLayer.dispose();
          }, t3;
        }();
      }, function(t2, e, i) {
        "use strict";
        i.r(e), function(t3) {
          var r = i(1);
          i.d(e, "Button", function() {
            return r.Button;
          }), i.d(e, "Checkbox", function() {
            return r.Checkbox;
          }), i.d(e, "ColorPicker", function() {
            return r.ColorPicker;
          }), i.d(e, "Container", function() {
            return r.Container;
          }), i.d(e, "Control", function() {
            return r.Control;
          }), i.d(e, "Ellipse", function() {
            return r.Ellipse;
          }), i.d(e, "Grid", function() {
            return r.Grid;
          }), i.d(e, "Image", function() {
            return r.Image;
          }), i.d(e, "InputText", function() {
            return r.InputText;
          }), i.d(e, "InputPassword", function() {
            return r.InputPassword;
          }), i.d(e, "Line", function() {
            return r.Line;
          }), i.d(e, "MultiLine", function() {
            return r.MultiLine;
          }), i.d(e, "RadioButton", function() {
            return r.RadioButton;
          }), i.d(e, "StackPanel", function() {
            return r.StackPanel;
          }), i.d(e, "SelectorGroup", function() {
            return r.SelectorGroup;
          }), i.d(e, "CheckboxGroup", function() {
            return r.CheckboxGroup;
          }), i.d(e, "RadioGroup", function() {
            return r.RadioGroup;
          }), i.d(e, "SliderGroup", function() {
            return r.SliderGroup;
          }), i.d(e, "SelectionPanel", function() {
            return r.SelectionPanel;
          }), i.d(e, "ScrollViewer", function() {
            return r.ScrollViewer;
          }), i.d(e, "TextWrapping", function() {
            return r.TextWrapping;
          }), i.d(e, "TextBlock", function() {
            return r.TextBlock;
          }), i.d(e, "TextWrapper", function() {
            return r.TextWrapper;
          }), i.d(e, "KeyPropertySet", function() {
            return r.KeyPropertySet;
          }), i.d(e, "VirtualKeyboard", function() {
            return r.VirtualKeyboard;
          }), i.d(e, "Rectangle", function() {
            return r.Rectangle;
          }), i.d(e, "DisplayGrid", function() {
            return r.DisplayGrid;
          }), i.d(e, "BaseSlider", function() {
            return r.BaseSlider;
          }), i.d(e, "Slider", function() {
            return r.Slider;
          }), i.d(e, "ImageBasedSlider", function() {
            return r.ImageBasedSlider;
          }), i.d(e, "ScrollBar", function() {
            return r.ScrollBar;
          }), i.d(e, "ImageScrollBar", function() {
            return r.ImageScrollBar;
          }), i.d(e, "name", function() {
            return r.name;
          }), i.d(e, "AdvancedDynamicTexture", function() {
            return r.AdvancedDynamicTexture;
          }), i.d(e, "AdvancedDynamicTextureInstrumentation", function() {
            return r.AdvancedDynamicTextureInstrumentation;
          }), i.d(e, "Vector2WithInfo", function() {
            return r.Vector2WithInfo;
          }), i.d(e, "Matrix2D", function() {
            return r.Matrix2D;
          }), i.d(e, "Measure", function() {
            return r.Measure;
          }), i.d(e, "MultiLinePoint", function() {
            return r.MultiLinePoint;
          }), i.d(e, "Style", function() {
            return r.Style;
          }), i.d(e, "ValueAndUnit", function() {
            return r.ValueAndUnit;
          }), i.d(e, "XmlLoader", function() {
            return r.XmlLoader;
          }), i.d(e, "AbstractButton3D", function() {
            return r.AbstractButton3D;
          }), i.d(e, "Button3D", function() {
            return r.Button3D;
          }), i.d(e, "Container3D", function() {
            return r.Container3D;
          }), i.d(e, "Control3D", function() {
            return r.Control3D;
          }), i.d(e, "CylinderPanel", function() {
            return r.CylinderPanel;
          }), i.d(e, "HolographicButton", function() {
            return r.HolographicButton;
          }), i.d(e, "MeshButton3D", function() {
            return r.MeshButton3D;
          }), i.d(e, "PlanePanel", function() {
            return r.PlanePanel;
          }), i.d(e, "ScatterPanel", function() {
            return r.ScatterPanel;
          }), i.d(e, "SpherePanel", function() {
            return r.SpherePanel;
          }), i.d(e, "StackPanel3D", function() {
            return r.StackPanel3D;
          }), i.d(e, "VolumeBasedPanel", function() {
            return r.VolumeBasedPanel;
          }), i.d(e, "FluentMaterialDefines", function() {
            return r.FluentMaterialDefines;
          }), i.d(e, "FluentMaterial", function() {
            return r.FluentMaterial;
          }), i.d(e, "GUI3DManager", function() {
            return r.GUI3DManager;
          }), i.d(e, "Vector3WithInfo", function() {
            return r.Vector3WithInfo;
          });
          var n = t3 !== void 0 ? t3 : typeof window != "undefined" ? window : void 0;
          n !== void 0 && (n.BABYLON = n.BABYLON || {}, n.BABYLON.GUI = r);
        }.call(this, i(3));
      }, function(t2, e) {
        var i;
        i = function() {
          return this;
        }();
        try {
          i = i || new Function("return this")();
        } catch (t3) {
          typeof window == "object" && (i = window);
        }
        t2.exports = i;
      }]);
    });
  }
});

// dep:babylonjs-gui
var babylonjs_gui_default = require_babylon_gui_min();
export {
  babylonjs_gui_default as default
};
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
//# sourceMappingURL=babylonjs-gui.js.map
